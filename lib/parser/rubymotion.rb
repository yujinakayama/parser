# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class RubyMotion < Parser::Base

module_eval(<<'...end rubymotion.y/module_eval...', 'rubymotion.y', 2137)

  def version
    19 # closest released match: v1_9_0_2
  end

  def default_encoding
    Encoding::BINARY
  end
...end rubymotion.y/module_eval...
##### State transition tables begin ###

clist = [
'-279,-88,270,732,602,528,-92,-279,-279,-279,731,-461,-279,-279,-279',
'449,-279,570,-87,205,102,206,528,-454,528,101,-279,-279,-279,549,-454',
'202,203,663,202,203,-279,-279,601,-279,-279,-279,-279,-279,528,644,528',
'-90,-87,663,653,262,-90,-89,202,203,206,749,263,-88,-86,202,203,-90',
'680,-88,-279,-279,-279,-279,-279,-279,-279,-279,-279,-279,-279,-279',
'-279,-279,569,823,-279,-279,-279,-86,590,-279,269,680,-279,-91,-89,-279',
'-279,-93,-279,664,-279,644,-279,534,-279,-279,-279,-279,-279,-279,-279',
'-279,-279,-84,-279,202,203,-88,-279,-279,-279,102,-88,206,-279,-279',
'101,-279,-279,-279,-279,-279,-522,-279,-87,-279,548,-91,102,-87,102',
'796,-80,101,795,101,206,-279,-279,680,-279,-279,-279,-279,-279,-79,102',
'652,-523,-522,102,101,102,-90,-82,101,102,101,-90,-89,-82,101,-80,414',
'-89,202,203,-279,-279,-279,-279,-279,-279,-279,-279,-279,-279,-279,-279',
'-279,-279,102,-78,-279,-279,-279,101,590,-83,-81,665,-279,-85,813,-279',
'102,559,602,-80,-279,101,-279,206,-279,-279,-279,-279,-279,-279,-279',
'-526,-279,-93,-279,483,-448,102,-526,-526,-526,-82,101,-448,-526,-526',
'540,-526,-279,-279,541,-83,601,-279,602,-80,-526,-91,-80,-526,102,270',
'602,-87,-80,101,270,-526,-526,662,-526,-526,-526,-526,-526,-451,206',
'-82,561,560,-82,659,-451,554,-92,657,-82,712,601,671,555,511,510,509',
'515,512,601,-526,-526,-526,-526,-526,-526,-526,-526,-526,-526,-526,-526',
'-526,-526,-526,559,-526,-526,-526,-73,587,-526,791,644,-526,-59,-522',
'-526,265,-519,-526,720,-526,265,-526,655,-526,-526,-526,-526,-526,-526',
'-526,73,-526,-526,-526,559,-526,-458,269,-455,74,-392,-520,269,-458',
'-457,-455,-526,-526,-526,75,-81,-457,-526,-526,-526,-526,-89,787,-526',
'-526,-526,-79,-526,561,560,562,206,-87,-448,-459,-456,-526,-526,-526',
'-526,-448,-459,-456,496,-526,-519,498,-526,-526,-448,-526,-526,-526',
'-526,-526,851,496,-392,-451,498,561,560,557,559,-392,-451,559,-519,-453',
'496,-520,559,498,-392,-451,-453,206,-526,-526,-526,-526,-526,-526,-526',
'-526,-526,-526,-526,-526,-526,-526,-392,-520,-526,-526,-526,-526,733',
'-526,225,804,-526,483,-526,-526,-526,361,-526,-522,-526,206,-526,-526',
'-526,-526,-526,-526,-526,-526,-526,265,-526,-526,-526,561,560,571,561',
'560,564,-526,222,561,560,566,224,223,-526,-526,-526,-526,-451,-526,582',
'-526,-84,-89,644,-451,-451,-451,-92,201,-451,-451,-451,742,-451,511',
'510,509,515,512,536,-261,-451,370,-451,-451,-451,537,372,371,496,296',
'297,495,-451,-451,535,-451,-451,-451,-451,-451,671,-80,511,510,509,515',
'512,-88,517,772,-85,511,510,509,480,512,-93,521,520,524,523,484,-451',
'-451,-451,-451,-451,-451,-451,-451,-451,-451,-451,-451,-451,-451,478',
'479,-451,-451,-451,544,-451,-451,225,637,-451,-461,543,-451,-451,655',
'-451,485,-451,489,-451,545,-451,-451,-451,-451,-451,-451,-451,206,-451',
'671,-451,511,510,509,515,512,102,583,222,225,898,101,224,223,-451,-451',
'-451,-451,-448,-451,851,-451,-78,-451,102,-448,-448,-448,-86,101,-448',
'-448,-448,206,-448,671,517,511,510,509,515,512,-448,626,-448,-448,-448',
'524,523,295,-82,791,644,815,-448,-448,-90,-448,-448,-448,-448,-448,671',
'817,511,510,509,515,512,102,202,203,667,671,101,511,510,509,515,512',
'820,670,821,655,-448,-448,-448,-448,-448,-448,-448,-448,-448,-448,-448',
'-448,-448,-448,-73,667,-448,-448,-448,824,-448,-448,206,294,-448,206',
'667,-448,-448,206,-448,831,-448,832,-448,670,-448,-448,-448,-448,-448',
'-448,-448,637,-448,671,-448,511,510,509,515,512,486,104,105,106,107',
'108,491,487,-448,-448,-448,-448,206,-448,244,-448,412,-448,5,63,64,65',
'7,51,840,841,206,57,58,843,517,844,61,847,59,60,62,23,24,66,67,524,523',
'849,851,851,22,28,27,90,89,91,92,206,671,17,511,510,509,515,512,6,41',
'8,9,94,93,95,84,50,86,85,87,851,88,96,97,856,82,83,38,39,37,671,492',
'511,510,509,515,512,671,667,511,510,509,515,512,-280,858,-273,855,860',
'36,225,-280,276,-273,-523,52,53,225,225,54,-280,32,-273,866,197,40,671',
'667,511,510,509,515,512,18,517,868,206,871,81,73,76,77,-262,78,79,524',
'523,225,74,80,5,63,64,65,7,51,56,196,75,57,58,499,500,517,61,878,59',
'60,62,23,24,66,67,195,524,523,882,883,22,28,27,90,89,91,92,885,671,17',
'511,510,509,515,512,6,41,8,9,94,93,95,84,50,86,85,87,447,88,96,97,194',
'82,83,38,39,37,671,-522,511,510,509,515,512,671,667,511,510,509,515',
'512,474,891,-280,-460,851,36,592,475,30,-280,-460,52,53,449,265,54,473',
'32,-280,-460,206,40,671,667,511,510,509,515,512,18,517,-259,900,578',
'81,73,76,77,902,78,79,524,523,903,74,80,5,63,64,65,7,51,56,908,75,57',
'58,910,913,517,61,915,59,60,62,23,24,66,67,851,524,523,851,900,22,28',
'27,90,89,91,92,919,671,17,511,510,509,515,512,6,41,8,9,94,93,95,84,50',
'86,85,87,193,88,96,97,575,82,83,38,39,37,706,707,491,574,708,96,97,671',
'667,511,510,509,515,512,410,534,-279,-322,539,36,928,411,30,-279,-322',
'52,53,851,-523,54,412,32,-279,-322,851,40,671,851,511,510,509,515,512',
'18,517,932,900,98,81,73,76,77,447,78,79,524,523,206,74,80,5,63,64,65',
'7,51,56,538,75,57,58,363,900,517,61,948,59,60,62,23,24,66,67,949,524',
'523,447,456,22,28,27,90,89,91,92,445,772,17,511,510,509,449,512,6,41',
'8,9,94,93,95,84,50,86,85,87,206,88,96,97,456,82,83,38,39,37,225,104',
'105,106,107,108,735,671,-279,511,510,509,515,512,199,-279,239,240,721',
'36,-523,200,30,205,-279,52,53,746,416,54,198,32,222,449,228,40,224,223',
'220,221,456,-58,-260,18,517,447,206,415,81,73,76,77,206,78,79,524,523',
'413,74,80,5,63,64,65,7,51,56,637,75,57,58,206,714,711,61,265,59,60,62',
'23,24,66,67,104,105,106,107,108,22,28,27,90,89,91,92,951,265,17,637',
'468,225,225,225,6,41,8,9,94,93,95,84,50,86,85,87,469,88,96,97,760,82',
'83,38,39,37,225,-545,-545,-545,-545,231,233,222,-460,-545,-545,224,223',
'220,221,-460,239,240,851,36,-259,764,30,476,-460,52,53,683,655,54,534',
'32,222,676,228,40,224,223,220,221,232,230,226,18,227,274,782,373,81',
'73,76,77,674,78,79,785,673,663,74,80,5,63,64,65,7,51,56,,75,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,576,6,41',
'8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,225,229,234,235',
'236,231,233,241,242,237,238,889,218,219,-273,,239,240,890,36,,-273,30',
',,52,53,888,,54,-273,32,222,,228,40,224,223,220,221,232,230,226,18,227',
',,,81,73,76,77,,78,79,225,,544,74,80,,243,-274,-226,918,,56,,75,-274',
'-274,-274,,545,-274,-274,-274,514,-274,511,510,509,515,512,,,,222,-274',
'-274,-274,224,223,220,221,,,,-274,-274,-280,-274,-274,-274,-274,-274',
'-279,-280,,,,,,-279,517,,-280,,-523,,,,-279,521,520,524,523,,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,-274,,,-274,-274',
'-274,,,-274,,,-274,,,-274,-274,,-274,,-274,,-274,,-274,-274,-274,-274',
'-274,-274,-274,,-274,,-274,,,,,,,,,,,,,,-274,-274,-274,-274,,-274,,-274',
'5,63,64,65,7,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83',
'38,39,37,225,-545,-545,-545,-545,231,233,,,-545,-545,,,,,,239,240,,36',
',,30,,,52,53,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227',
',,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93',
'95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,225,229,234,235,236,231',
'233,,,237,238,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224',
'223,220,221,232,230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64',
'65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,225,229,234,235,236,231,233,241,,237,238,,,,,,239,240,,36,,,30',
',,52,53,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,81',
'73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,225,229,234,235,236,231,233,241',
'242,237,238,,-545,-545,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228',
'40,224,223,220,221,232,230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80',
'5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97',
',82,83,38,39,37,225,229,234,235,236,231,233,241,242,237,238,,-545,-545',
',,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223,220,221,232',
'230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,225,-545',
'-545,-545,-545,231,233,,,-545,-545,,,,,,239,240,,36,,,30,,,52,53,,,54',
',32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,81,73,76,77,,78',
'79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,225,,,,,,,,,,,,,,,,239,240,,36,,,30,,,52,53',
',,54,,32,222,,228,40,224,223,220,221,,,226,18,227,,,,81,73,76,77,,78',
'79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,225,,,,,,,,,,,,,,,,239,240,,36,,,30,,,52,53',
',,54,,32,222,,228,40,224,223,220,221,,,226,18,227,,,,81,73,76,77,,78',
'79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,225,,,,,,,,,,,,,,,,239,240,,36,,,30,,,52,53',
',,54,,32,222,,228,40,224,223,220,221,,,226,18,227,,,,81,73,76,77,,78',
'79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,225,,,,,,,,,,,,,,,,239,240,,36,,,30,,,52,53',
',,54,,32,222,,228,40,224,223,220,221,,,226,18,227,,,,81,73,76,77,,78',
'79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,225,-545,-545,-545,-545,231,233,,,-545,-545',
',,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223,220,221,232',
'230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,225,-545',
'-545,-545,-545,231,233,,,-545,-545,,,,,,239,240,,36,,,30,,,52,53,,,54',
',32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,81,73,76,77,,78',
'79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,225,-545,-545,-545,-545,231,233,,,-545,-545',
',,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223,220,221,232',
'230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,225,,,',
',,,,,,,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223,220',
'221,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,576',
'6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,225,229,234',
'235,236,231,233,241,242,237,238,,218,219,,,239,240,,36,,,30,,,52,53',
',,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,81,73,76',
'77,,78,79,,,,74,80,,243,-528,,,,56,,75,-528,-528,-528,,,-528,-528,-528',
'514,-528,511,510,509,515,512,,,,-528,-528,-528,-528,,,,,,,,-528,-528',
',-528,-528,-528,-528,-528,,,,,,,,,517,701,,,,,,,,521,520,524,523,,-528',
'-528,-528,-528,-528,-528,-528,-528,-528,-528,-528,-528,-528,-528,,,-528',
'-528,-528,,,-528,,,-528,,,-528,-528,,-528,,-528,,-528,,-528,-528,-528',
'-528,-528,-528,-528,-527,-528,-528,-528,,,,-527,-527,-527,,,-527,-527',
'-527,225,-527,-528,-528,-528,-528,,-528,,-528,-527,-527,-527,-527,,',
'239,240,,,,-527,-527,,-527,-527,-527,-527,-527,,,,222,,,,224,223,220',
'221,,,,,,,,,,,,-527,-527,-527,-527,-527,-527,-527,-527,-527,-527,-527',
'-527,-527,-527,,,-527,-527,-527,,,-527,,,-527,,,-527,-527,,-527,,-527',
',-527,,-527,-527,-527,-527,-527,-527,-527,,-527,-527,-527,,,,,,,,,,',
',,,-527,-527,-527,-527,,-527,,-527,5,63,64,65,7,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93',
'95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80',
'5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97',
',82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53,,,54,,32,,,,40,,',
',,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41',
'8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79',
',,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,',
'88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53,,,54,,32',
',,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,',
'75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,',
',,,,,,,,,,,,,,,36,,,276,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,,81,73,76',
'77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53,',
',54,,32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7',
'51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,,81,73',
'76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50',
'86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53',
',,54,,32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65',
'7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,276,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,',
'81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50',
'86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52',
'53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65',
',51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50',
'86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53',
',,54,,32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,',
'51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,',
',,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,380,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95',
'84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216',
',,52,53,,,54,,380,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,',
'63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83',
'38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215',
',,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93',
'95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,',
',,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96',
'97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40',
',,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,',
',,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,',
',,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96',
'97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40',
',,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,',
',,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,',
',,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96',
'97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40',
',,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,206,63,64,65,,51,56,,75,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217',
',,,,,,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,514,291,511,510',
'509,515,512,,,,,,,,,,,,,,,284,,,281,,,52,53,,,54,,,,,,517,,,,,,,,,521',
'520,524,523,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,742,291,511,510,509',
'515,512,,,,,,,,,,,,,,,284,,,281,,,52,53,,,54,,,,,,517,,,,,,,,,521,520',
'524,523,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61',
',59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41',
',,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,',
',,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79',
',,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,',
',,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,',
'54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91',
'92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50',
'86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52',
'53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65',
',51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95',
'84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216',
',,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63',
'64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27',
'90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82',
'83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,252,,40',
',,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58',
',,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,',
',41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,',
',,,,,,,,,,210,,,216,,,461,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50',
'86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
'206,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96',
'97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,718,,',
',40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75',
'57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,',
'75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,579,,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,,291',
'225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239,240,,284',
',,216,,,52,53,,,54,,,222,,228,,224,223,220,221,232,230,226,,227,,,,81',
'73,76,77,,78,79,,,,74,80,,243,,471,,,56,,75,63,64,65,,51,,,,57,58,,',
',61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41',
',,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,',
',,,,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85',
'87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53',
',,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,,,40,,,,,,,,215',
',,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,',
',210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,',
',74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,',
',255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259',
'88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,',
'607,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,380,,,,40,,,,,,,,215,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50',
'86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52',
'53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65',
',51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89',
'91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,',
'81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60',
'62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,287,,,94,93',
'95,84,50,86,85,87,,88,96,97,,82,83,,514,291,511,510,509,515,512,,,,',
',,,,,,,,,,284,,,281,,,52,53,,,54,,,,,,517,701,,,,,,,,521,520,524,523',
'81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60',
'62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93',
'95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,',
',216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,514,291,511,510,509',
'515,512,,,,,,,,,,,,,,,284,,,281,,,52,53,,,54,,,,,,517,,,,,,,,,521,520',
'524,523,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61',
',59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,',
'94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,',
',,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,,514,291,511,510,509,515,512,,,,,,,,,,,,,,,284',
',,281,,,52,53,,,54,,,,,,517,,,,,,,,,521,520,524,523,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,489,,52,53,,',
'54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,252,,40,,,,,,,,18,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95',
'84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216',
',,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63',
'64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290',
'90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82',
'83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,252,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,',
',,,,,,,,,,,210,,,216,,,52,53,,,54,,607,,252,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28',
'27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97',
',82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,252',
',40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,',
',,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,',
'75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53,,,54',
',32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,',
',217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,',
',210,,,216,,,52,53,,,54,,607,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',607,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,',
'51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89',
'91,92,,,217,,,,,,,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,514',
'291,511,510,509,515,512,,,,,,,,,,,,,,,880,,,216,,,52,53,,,54,,,,,,517',
'503,,,,,,,,521,520,524,523,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91',
'92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95',
'84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216',
',,52,53,,,54,,607,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,',
'63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83',
'38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215',
',,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95',
'84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216',
',,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83',
',514,291,511,510,509,515,512,,,,,,,,,,,,,,,837,,,216,,,52,53,,,54,,',
',,,517,,,,,,,,,521,520,524,523,81,73,76,77,,78,79,,,,74,80,,63,64,65',
',51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89',
'91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,',
',215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61',
',59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,',
'94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,',
',,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85',
'87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53',
',,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83',
'38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,742,291,511,510,509',
'515,512,,,,,,,,,,,,,,,284,,,281,,,52,53,,,54,,280,,,,517,,,,,,,,,521',
'520,524,523,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,,291,225,229,234,235',
'236,231,233,241,242,237,238,,218,219,,,239,240,,284,,,216,,,52,53,,',
'54,,,222,,228,,224,223,220,221,232,230,226,,227,,,,81,73,76,77,,78,79',
',,,74,80,,243,,293,,,56,,75,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216',
',,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83',
'38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18',
',,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,',
',210,,,216,,,52,53,,,54,,254,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79',
',,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,',
',,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
'259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,',
'54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,',
',,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53',
',,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,',
',,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76',
'77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,38,39,37,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,,239,240,,210,,-226,216,,,52,53,,,54,,,222,,228,40,224',
'223,220,221,232,230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,102,243',
',-226,,101,56,,75,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,,742,291,511,510,509,515,512,,,,,,,,,,,,,,,326,',
',30,,,52,53,,,54,,32,,,,517,,,,,,,,,521,520,524,523,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,331,50,86,85',
'332,,88,96,97,,82,83,,,291,,,,,,,,,,,,,,,,,338,,,333,,,216,,,52,53,',
',54,,,,,,,,,,,,,,,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,',
'75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,287,,,94,93,95,331,50,86,85,332,,88,96,97,,82,83,,,291,',
',,,,,,,,,,,,,,,,,,333,,,216,,,52,53,,,54,,,,,,,,,,,,,,,,,,,81,73,76',
'77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53',
',,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,7',
'51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
'225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239,240,,36,',
',30,,,52,53,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227',
',,,81,73,76,77,,78,79,,,,74,80,,243,-232,,,363,56,,75,-232,-232,-232',
',,-232,-232,-232,,-232,,,,,,,,,-232,-232,-232,,,,,,,,,-232,-232,,-232',
'-232,-232,-232,-232,,,,,,,,,,,,,,,,,,,,,,,-232,-232,-232,-232,-232,-232',
'-232,-232,-232,-232,-232,-232,-232,-232,,,-232,-232,-232,,,-232,,265',
'-232,,,-232,-232,,-232,,-232,,-232,,-232,-232,-232,-232,-232,-232,-232',
'-391,-232,-232,-232,,,,-391,-391,-391,,,-391,-391,-391,,-391,-232,-232',
',-232,,-232,,,-391,-391,-391,,,,,,,,,-391,-391,,-391,-391,-391,-391',
'-391,,,,,,,,,,,,,,,,,,,,,,,-391,-391,-391,-391,-391,-391,-391,-391,-391',
'-391,-391,-391,-391,-391,,,-391,-391,-391,,,-391,,265,-391,,,-391,-391',
',-391,,-391,,-391,,-391,-391,-391,-391,-391,-391,-391,-286,-391,-391',
'-391,,,,-286,-286,-286,,,-286,-286,-286,,-286,-391,-391,,-391,,-391',
',,,-286,-286,,,,,,,,,-286,-286,,-286,-286,-286,-286,-286,,,,,,,,,,,',
',,,,,,,,,,,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286,-286',
'-286,-286,,,-286,-286,-286,,,-286,,274,-286,,,-286,-286,,-286,,-286',
',-286,,-286,-286,-286,-286,-286,-286,-286,-232,-286,,-286,,,,-232,-232',
'-232,,,-232,-232,-232,,-232,-286,-286,,-286,,-286,,,,-232,,,,,,,,,,-232',
'-232,,-232,-232,-232,-232,-232,,,,,,,,,,,,-232,,,,,,,-232,-232,-232',
',,-232,-232,-232,,-232,,,,,,-232,,,,-232,,,-232,,,,,265,-232,-232,-232',
',-232,-232,-232,-232,-232,,,,,,630,393,,,631,,,,-232,,,,145,146,,142',
'124,125,126,133,130,132,-232,,127,128,,-232,-232,147,148,134,135,,,-232',
',,265,,265,-232,,,,,139,138,,123,144,141,140,136,137,131,129,121,143',
'122,,,149,-232,,,,,,,,,,,,,,-232,,,,,-232,160,171,161,184,157,177,167',
'166,187,188,182,165,164,159,185,189,190,169,158,172,176,178,170,163',
',,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153,154,150',
'151,152,112,114,,,113,,,,,,,,145,146,,142,124,125,126,133,130,132,,',
'127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140,136',
'137,131,129,121,143,122,,,149,81,,,,,,,,,,,80,160,171,161,184,157,177',
'167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178,170',
'163,,,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153,154',
'150,151,152,112,114,,,113,,,,,,,,145,146,,142,124,125,126,133,130,132',
',,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140,136',
'137,131,129,121,143,122,,,149,81,,,,,,,,,,,80,160,171,161,184,157,177',
'167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178,170',
'163,,,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153,154',
'150,151,152,112,114,111,,113,,,,,,,,145,146,,142,124,125,126,133,130',
'132,,,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140',
'136,137,131,129,121,143,122,,,149,81,,,,,,,,,,,80,160,171,161,184,157',
'177,167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178',
'170,163,,,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153',
'154,150,151,152,112,114,,,113,,,,,,,,145,146,,142,124,125,126,133,130',
'132,,,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140',
'136,137,131,129,121,143,122,,,149,81,,,,,,,,,,,80,160,171,161,184,157',
'177,167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178',
'170,163,,,,179,186,181,348,347,349,346,156,175,174,,,,,,155,162,153',
'154,343,344,345,341,114,86,85,342,,88,,,,,,145,146,,142,124,125,126',
'133,130,132,,,127,128,,,,147,148,134,135,,,,,,353,,,,,,,,139,138,,123',
'144,141,140,136,137,131,129,121,143,122,,,149,160,171,161,184,157,177',
'167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178,170',
'163,,,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153,154',
'150,151,152,112,114,,,113,,,,,,,,145,146,,142,124,125,126,133,130,132',
',,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140,136',
'137,131,129,121,143,122,453,393,149,,454,,,,,,,,145,146,,142,124,125',
'126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123',
'144,141,140,136,137,131,129,121,143,122,453,393,149,,454,,,,,,,,145',
'146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,',
',,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143,122,942,400',
'149,,941,,,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128,,,,147',
'148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129',
'121,143,122,925,400,149,,926,,,,,,,,145,146,,142,124,125,126,133,130',
'132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141',
'140,136,137,131,129,121,143,122,923,393,149,,924,,,,,,,,145,146,,142',
'124,125,126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,',
',139,138,,123,144,141,140,136,137,131,129,121,143,122,593,393,149,,594',
',,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134',
'135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143',
'122,595,400,149,,596,,,,,,,,145,146,,142,124,125,126,133,130,132,,,127',
'128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136',
'137,131,129,121,143,122,633,400,149,,634,,,,,,,,145,146,,142,124,125',
'126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138',
',123,144,141,140,136,137,131,129,121,143,122,593,393,149,,594,,,,,,',
',145,146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134,135,',
',,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143,122',
'595,400,149,,596,,,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128',
',,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137',
'131,129,121,143,122,389,393,149,,390,,,,,,,,145,146,,142,124,125,126',
'133,130,132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123',
'144,141,140,136,137,131,129,121,143,122,395,400,149,,397,,,,,,,,145',
'146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,265',
',,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143,122,686,393',
'149,,687,,,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128,,,,147',
'148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129',
'121,143,122,688,400,149,,689,,,,,,,,145,146,,142,124,125,126,133,130',
'132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141',
'140,136,137,131,129,121,143,122,691,400,149,,692,,,,,,,,145,146,,142',
'124,125,126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,',
',139,138,,123,144,141,140,136,137,131,129,121,143,122,453,393,149,,454',
',,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134',
'135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143',
'122,,,149,225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239',
'240,,,,,,,,,,,,,,,222,,228,,224,223,220,221,232,230,226,,227,,225,229',
'234,235,236,231,233,241,242,237,238,,218,219,206,243,239,240,,,,,,,',
',,,,,,,222,,228,,224,223,220,221,232,230,226,,227,,225,229,234,235,236',
'231,233,241,242,237,238,,218,219,,243,239,240,,,,,,,,,,,,,,,222,,228',
',224,223,220,221,232,230,226,,227,,225,229,234,235,236,231,233,241,242',
'237,238,,218,219,,243,239,240,,,,,,,,,,,,,,,222,,228,,224,223,220,221',
'232,230,226,,227,,225,229,234,235,236,231,233,241,242,237,238,,218,219',
',243,239,240,,,,,,,,,,,,,,,222,,228,,224,223,220,221,232,230,226,,227',
',225,229,234,235,236,231,233,241,242,237,238,,218,219,,243,239,240,',
',,,,,,,,,,,,,222,,228,,224,223,220,221,232,230,226,,227,,225,229,234',
'235,236,231,233,241,242,237,238,,218,219,,243,239,240,,,,,,,,,,,,,,',
'222,,228,,224,223,220,221,232,230,226,,227,,225,229,234,235,236,231',
'233,241,242,237,238,,218,219,,243,239,240,,,,,,,,,,,,,,,222,,228,,224',
'223,220,221,232,230,226,,227,,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,243,239,240,,,,,,,,,,,,,,,222,,228,,224,223,220,221,232',
'230,226,,227,,225,229,234,235,236,231,233,241,242,237,238,,218,219,',
'243,239,240,,,,,,,,,,,,,,,222,,228,,224,223,220,221,232,230,226,,227',
',225,229,234,235,236,231,233,241,242,237,238,,218,219,,243,239,240,',
',,,,,,,,,,,,,222,,228,,224,223,220,221,232,230,226,,227,,225,229,234',
'235,236,231,233,241,242,237,238,,218,219,,243,239,240,,,,,,,,,,,,,,',
'222,,228,,224,223,220,221,232,230,226,,227,,,,,,,,,,,,,,,,,243' ]
        racc_action_table = arr = ::Array.new(23283, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'596,923,55,594,443,318,538,596,596,596,593,209,596,596,596,617,596,359',
'944,17,696,672,684,348,763,696,596,596,596,337,348,556,556,742,15,15',
'596,596,443,596,596,596,596,596,859,677,317,924,798,514,502,25,594,925',
'407,407,17,617,25,593,209,305,305,687,530,686,596,596,596,596,596,596',
'596,596,596,596,596,596,596,596,359,742,596,596,596,324,596,596,55,531',
'596,689,688,596,596,327,596,514,596,864,596,864,596,596,596,596,596',
'596,596,397,596,538,596,550,550,923,397,397,397,318,923,556,397,397',
'318,397,596,596,596,596,925,596,944,596,337,596,684,944,763,684,630',
'684,682,763,407,397,397,799,397,397,397,397,397,798,337,502,689,688',
'859,337,317,924,631,859,530,317,924,925,687,530,686,211,925,641,641',
'397,397,397,397,397,397,397,397,397,397,397,397,397,397,531,324,397',
'397,397,531,397,689,688,515,397,327,734,397,550,567,462,630,397,550',
'397,685,397,397,397,397,397,397,397,395,397,211,397,413,341,3,395,395',
'395,631,3,341,395,395,333,395,397,397,333,397,462,397,614,630,395,397',
'630,633,799,26,463,734,630,799,288,395,395,507,395,395,395,395,395,342',
'641,631,567,567,631,506,342,351,413,505,631,567,614,670,351,670,670',
'670,670,670,463,395,395,395,395,395,395,395,395,395,395,395,395,395',
'395,633,356,395,395,395,625,395,633,934,934,395,625,633,395,26,331,633',
'580,395,288,395,504,395,395,395,395,395,395,395,71,395,395,395,355,633',
'343,26,349,71,756,332,288,343,344,349,595,395,395,71,395,344,395,595',
'595,595,395,670,595,595,595,580,595,356,356,356,287,580,331,345,346',
'595,595,595,595,331,345,346,311,691,331,311,595,595,331,595,595,595',
'595,595,939,650,756,332,650,355,355,355,360,756,332,357,331,347,308',
'332,358,308,756,332,347,694,595,595,595,595,595,595,595,595,595,595',
'595,595,595,595,756,332,595,595,595,691,595,595,419,699,595,295,691',
'595,595,98,595,691,595,493,595,691,595,595,595,595,595,595,595,290,595',
'595,595,360,360,360,357,357,357,691,419,358,358,358,419,419,595,595',
'595,595,87,595,389,595,295,595,490,87,87,87,295,14,87,87,87,601,87,601',
'601,601,601,601,325,717,87,111,87,87,87,325,111,111,307,37,37,307,87',
'87,325,87,87,87,87,87,855,389,855,855,855,855,855,389,601,655,14,655',
'655,655,292,655,14,601,601,601,601,296,87,87,87,87,87,87,87,87,87,87',
'87,87,87,87,291,291,87,87,87,335,87,87,420,481,87,35,335,87,87,601,87',
'297,87,477,87,335,87,87,87,87,87,87,87,472,87,915,87,915,915,915,915',
'915,702,390,420,300,855,702,420,420,87,87,87,87,84,87,940,87,35,87,321',
'84,84,84,35,321,84,84,84,41,84,667,915,667,667,667,667,667,84,470,84',
'84,84,915,915,36,390,675,675,736,84,84,390,84,84,84,84,84,787,737,787',
'787,787,787,787,549,316,316,667,517,549,517,517,517,517,517,738,667',
'740,741,84,84,84,84,84,84,84,84,84,84,84,84,84,84,467,787,84,84,84,744',
'84,84,466,34,84,464,517,84,84,752,84,753,84,754,84,517,84,84,84,84,84',
'84,84,755,84,913,84,913,913,913,913,913,298,362,362,362,362,362,303',
'298,84,84,84,84,458,84,20,84,298,84,281,281,281,281,281,281,767,768',
'769,281,281,770,913,774,281,775,281,281,281,281,281,281,281,913,913',
'778,779,781,281,281,281,281,281,281,281,784,785,281,785,785,785,785',
'785,281,281,281,281,281,281,281,281,281,281,281,281,956,281,281,281',
'786,281,281,281,281,281,898,304,898,898,898,898,898,928,785,928,928',
'928,928,928,476,789,285,785,792,281,424,476,281,285,941,281,281,423',
'422,281,476,281,285,801,12,281,662,898,662,662,662,662,662,281,928,805',
'806,809,281,281,281,281,810,281,281,928,928,421,281,281,710,710,710',
'710,710,710,281,11,281,710,710,309,310,662,710,822,710,710,710,710,710',
'710,710,10,662,662,825,826,710,710,710,710,710,710,710,827,900,710,900',
'900,900,900,900,710,710,710,710,710,710,710,710,710,710,710,710,829',
'710,710,710,9,710,710,710,710,710,856,942,856,856,856,856,856,849,900',
'849,849,849,849,849,283,837,541,282,945,710,409,283,710,541,282,710',
'710,312,396,710,283,710,541,282,387,710,851,856,851,851,851,851,851',
'710,849,383,857,381,710,710,710,710,861,710,710,849,849,862,710,710',
'529,529,529,529,529,529,710,867,710,529,529,872,873,851,529,874,529',
'529,529,529,529,529,529,875,851,851,877,946,529,529,529,529,529,529',
'529,880,932,529,932,932,932,932,932,529,529,529,529,529,529,529,529',
'529,529,529,529,8,529,529,529,375,529,529,529,529,529,560,560,887,374',
'560,560,560,951,932,951,951,951,951,951,208,322,634,42,328,529,893,208',
'529,634,42,529,529,894,634,529,208,529,634,42,895,529,820,896,820,820',
'820,820,820,529,951,897,899,1,529,529,529,529,920,529,529,951,951,922',
'529,529,526,526,526,526,526,526,529,326,529,526,526,323,933,820,526',
'935,526,526,526,526,526,526,526,936,820,820,250,588,526,526,526,526',
'526,526,526,249,843,526,843,843,843,253,843,526,526,526,526,526,526',
'526,526,526,526,526,526,597,526,526,526,584,526,526,526,526,526,426',
'4,4,4,4,4,599,847,692,847,847,847,847,847,13,692,426,426,581,526,692',
'13,526,217,692,526,526,604,213,526,13,526,426,606,426,526,426,426,426',
'426,264,275,577,526,847,618,620,212,526,526,526,526,277,526,526,847',
'847,210,526,526,700,700,700,700,700,700,526,627,526,700,700,629,570',
'564,700,632,700,700,700,700,700,700,700,109,109,109,109,109,700,700',
'700,700,700,700,700,937,635,700,636,278,439,639,640,700,700,700,700',
'700,700,700,700,700,700,700,700,279,700,700,700,642,700,700,700,700',
'700,435,435,435,435,435,435,435,439,835,435,435,439,439,439,439,835',
'435,435,938,700,645,646,700,284,835,700,700,533,654,700,532,700,435',
'527,435,700,435,435,435,435,435,435,435,700,435,286,663,191,700,700',
'700,700,525,700,700,669,522,671,700,700,644,644,644,644,644,644,700',
',700,644,644,,,,644,,644,644,644,644,644,644,644,,,,,,644,644,644,644',
'644,644,644,,,644,,,,,378,644,644,644,644,644,644,644,644,644,644,644',
'644,,644,644,644,,644,644,644,644,644,378,378,378,378,378,378,378,378',
'378,378,378,836,378,378,838,,378,378,836,644,,838,644,,,644,644,836',
',644,838,644,378,,378,644,378,378,378,378,378,378,378,644,378,,,,644',
'644,644,644,,644,644,438,,879,644,644,,378,50,378,879,,644,,644,50,50',
'50,,879,50,50,50,657,50,657,657,657,657,657,,,,438,50,50,50,438,438',
'438,438,,,,50,50,891,50,50,50,50,50,926,891,,,,,,926,657,,891,,926,',
',,926,657,657,657,657,,50,50,50,50,50,50,50,50,50,50,50,50,50,50,,,50',
'50,50,,,50,,,50,,,50,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,,50,,',
',,,,,,,,,,,50,50,50,50,,50,,50,51,51,51,51,51,51,,,,51,51,,,,51,,51',
'51,51,51,51,51,51,,,,,,51,51,51,51,51,51,51,,,51,,,,,,51,51,51,51,51',
'51,51,51,51,51,51,51,,51,51,51,,51,51,51,51,51,437,437,437,437,437,437',
'437,,,437,437,,,,,,437,437,,51,,,51,,,51,51,,,51,,51,437,,437,51,437',
'437,437,437,437,437,437,51,437,,,,51,51,51,51,,51,51,,,,51,51,623,623',
'623,623,623,623,51,,51,623,623,,,,623,,623,623,623,623,623,623,623,',
',,,,623,623,623,623,623,623,623,,,623,,,,,,623,623,623,623,623,623,623',
'623,623,623,623,623,,623,623,623,,623,623,623,623,623,440,440,440,440',
'440,440,440,,,440,440,,,,,,440,440,,623,,,623,,,623,623,,,623,,623,440',
',440,623,440,440,440,440,440,440,440,623,440,,,,623,623,623,623,,623',
'623,,,,623,623,622,622,622,622,622,622,623,,623,622,622,,,,622,,622',
'622,622,622,622,622,622,,,,,,622,622,622,622,622,622,622,,,622,,,,,',
'622,622,622,622,622,622,622,622,622,622,622,622,,622,622,622,,622,622',
'622,622,622,441,441,441,441,441,441,441,441,,441,441,,,,,,441,441,,622',
',,622,,,622,622,,,622,,622,441,,441,622,441,441,441,441,441,441,441',
'622,441,,,,622,622,622,622,,622,622,,,,622,622,803,803,803,803,803,803',
'622,,622,803,803,,,,803,,803,803,803,803,803,803,803,,,,,,803,803,803',
'803,803,803,803,,,803,,,,,,803,803,803,803,803,803,803,803,803,803,803',
'803,,803,803,803,,803,803,803,803,803,418,418,418,418,418,418,418,418',
'418,418,418,,418,418,,,418,418,,803,,,803,,,803,803,,,803,,803,418,',
'418,803,418,418,418,418,418,418,418,803,418,,,,803,803,803,803,,803',
'803,,,,803,803,797,797,797,797,797,797,803,,803,797,797,,,,797,,797',
'797,797,797,797,797,797,,,,,,797,797,797,797,797,797,797,,,797,,,,,',
'797,797,797,797,797,797,797,797,797,797,797,797,,797,797,797,,797,797',
'797,797,797,417,417,417,417,417,417,417,417,417,417,417,,417,417,,,417',
'417,,797,,,797,,,797,797,,,797,,797,417,,417,797,417,417,417,417,417',
'417,417,797,417,,,,797,797,797,797,,797,797,,,,797,797,216,216,216,216',
'216,216,797,,797,216,216,,,,216,,216,216,216,216,216,216,216,,,,,,216',
'216,216,216,216,216,216,,,216,,,,,,216,216,216,216,216,216,216,216,216',
'216,216,216,,216,216,216,,216,216,216,216,216,428,428,428,428,428,428',
'428,,,428,428,,,,,,428,428,,216,,,216,,,216,216,,,216,,216,428,,428',
'216,428,428,428,428,428,428,428,216,428,,,,216,216,216,216,,216,216',
',,,216,216,603,603,603,603,603,603,216,,216,603,603,,,,603,,603,603',
'603,603,603,603,603,,,,,,603,603,603,603,603,603,603,,,603,,,,,,603',
'603,603,603,603,603,603,603,603,603,603,603,,603,603,603,,603,603,603',
'603,603,429,,,,,,,,,,,,,,,,429,429,,603,,,603,,,603,603,,,603,,603,429',
',429,603,429,429,429,429,,,429,603,429,,,,603,603,603,603,,603,603,',
',,603,603,748,748,748,748,748,748,603,,603,748,748,,,,748,,748,748,748',
'748,748,748,748,,,,,,748,748,748,748,748,748,748,,,748,,,,,,748,748',
'748,748,748,748,748,748,748,748,748,748,,748,748,748,,748,748,748,748',
'748,430,,,,,,,,,,,,,,,,430,430,,748,,,748,,,748,748,,,748,,748,430,',
'430,748,430,430,430,430,,,430,748,430,,,,748,748,748,748,,748,748,,',
',748,748,901,901,901,901,901,901,748,,748,901,901,,,,901,,901,901,901',
'901,901,901,901,,,,,,901,901,901,901,901,901,901,,,901,,,,,,901,901',
'901,901,901,901,901,901,901,901,901,901,,901,901,901,,901,901,901,901',
'901,431,,,,,,,,,,,,,,,,431,431,,901,,,901,,,901,901,,,901,,901,431,',
'431,901,431,431,431,431,,,431,901,431,,,,901,901,901,901,,901,901,,',
',901,901,695,695,695,695,695,695,901,,901,695,695,,,,695,,695,695,695',
'695,695,695,695,,,,,,695,695,695,695,695,695,695,,,695,,,,,,695,695',
'695,695,695,695,695,695,695,695,695,695,,695,695,695,,695,695,695,695',
'695,432,,,,,,,,,,,,,,,,432,432,,695,,,695,,,695,695,,,695,,695,432,',
'432,695,432,432,432,432,,,432,695,432,,,,695,695,695,695,,695,695,,',
',695,695,794,794,794,794,794,794,695,,695,794,794,,,,794,,794,794,794',
'794,794,794,794,,,,,,794,794,794,794,794,794,794,,,794,,,,,,794,794',
'794,794,794,794,794,794,794,794,794,794,,794,794,794,,794,794,794,794',
'794,433,433,433,433,433,433,433,,,433,433,,,,,,433,433,,794,,,794,,',
'794,794,,,794,,794,433,,433,794,433,433,433,433,433,433,433,794,433',
',,,794,794,794,794,,794,794,,,,794,794,793,793,793,793,793,793,794,',
'794,793,793,,,,793,,793,793,793,793,793,793,793,,,,,,793,793,793,793',
'793,793,793,,,793,,,,,,793,793,793,793,793,793,793,793,793,793,793,793',
',793,793,793,,793,793,793,793,793,434,434,434,434,434,434,434,,,434',
'434,,,,,,434,434,,793,,,793,,,793,793,,,793,,793,434,,434,793,434,434',
'434,434,434,434,434,793,434,,,,793,793,793,793,,793,793,,,,793,793,193',
'193,193,193,193,193,793,,793,193,193,,,,193,,193,193,193,193,193,193',
'193,,,,,,193,193,193,193,193,193,193,,,193,,,,,,193,193,193,193,193',
'193,193,193,193,193,193,193,,193,193,193,,193,193,193,193,193,436,436',
'436,436,436,436,436,,,436,436,,,,,,436,436,,193,,,193,,,193,193,,,193',
',193,436,,436,193,436,436,436,436,436,436,436,193,436,,,,193,193,193',
'193,,193,193,,,,193,193,194,194,194,194,194,194,193,,193,194,194,,,',
'194,,194,194,194,194,194,194,194,,,,,,194,194,194,194,194,194,194,,',
'194,,,,,,194,194,194,194,194,194,194,194,194,194,194,194,,194,194,194',
',194,194,194,194,194,425,,,,,,,,,,,,,,,,425,425,,194,,,194,,,194,194',
',,194,,194,425,,425,194,425,425,425,425,,,,194,,,,,194,194,194,194,',
'194,194,,,,194,194,760,760,760,760,760,760,194,,194,760,760,,,,760,',
'760,760,760,760,760,760,760,,,,,,760,760,760,760,760,760,760,,,760,',
',,,598,760,760,760,760,760,760,760,760,760,760,760,760,,760,760,760',
',760,760,760,760,760,598,598,598,598,598,598,598,598,598,598,598,,598',
'598,,,598,598,,760,,,760,,,760,760,,,760,,760,598,,598,760,598,598,598',
'598,598,598,598,760,598,,,,760,760,760,760,,760,760,,,,760,760,,598',
'401,,,,760,,760,401,401,401,,,401,401,401,552,401,552,552,552,552,552',
',,,401,401,401,401,,,,,,,,401,401,,401,401,401,401,401,,,,,,,,,552,552',
',,,,,,,552,552,552,552,,401,401,401,401,401,401,401,401,401,401,401',
'401,401,401,,,401,401,401,,,401,,,401,,,401,401,,401,,401,,401,,401',
'401,401,401,401,401,401,400,401,401,401,,,,400,400,400,,,400,400,400',
'427,400,401,401,401,401,,401,,401,400,400,400,400,,,427,427,,,,400,400',
',400,400,400,400,400,,,,427,,,,427,427,427,427,,,,,,,,,,,,400,400,400',
'400,400,400,400,400,400,400,400,400,400,400,,,400,400,400,,,400,,,400',
',,400,400,,400,,400,,400,,400,400,400,400,400,400,400,,400,400,400,',
',,,,,,,,,,,,400,400,400,400,,400,,400,0,0,0,0,0,0,,,,0,0,,,,0,,0,0,0',
'0,0,0,0,,,,,,0,0,0,0,0,0,0,,,0,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,,0,0,0,',
'0,0,0,0,0,,,,,,,,,,,,,,,,,,,,0,,,0,,,0,0,,,0,,0,,,,0,,,,,,,,0,,,,,0',
'0,0,0,,0,0,,,,0,0,834,834,834,834,834,834,0,,0,834,834,,,,834,,834,834',
'834,834,834,834,834,,,,,,834,834,834,834,834,834,834,,,834,,,,,,834',
'834,834,834,834,834,834,834,834,834,834,834,,834,834,834,,834,834,834',
'834,834,,,,,,,,,,,,,,,,,,,,834,,,834,,,834,834,,,834,,834,,,,834,,,',
',,,,834,,,,,834,834,834,834,,834,834,,,,834,834,907,907,907,907,907',
'907,834,,834,907,907,,,,907,,907,907,907,907,907,907,907,,,,,,907,907',
'907,907,907,907,907,,,907,,,,,,907,907,907,907,907,907,907,907,907,907',
'907,907,,907,907,907,,907,907,907,907,907,,,,,,,,,,,,,,,,,,,,907,,,907',
',,907,907,,,907,,907,,,,907,,,,,,,,907,,,,,907,907,907,907,,907,907',
',,,907,907,909,909,909,909,909,909,907,,907,909,909,,,,909,,909,909',
'909,909,909,909,909,,,,,,909,909,909,909,909,909,909,,,909,,,,,,909',
'909,909,909,909,909,909,909,909,909,909,909,,909,909,909,,909,909,909',
'909,909,,,,,,,,,,,,,,,,,,,,909,,,909,,,909,909,,,909,,909,,,,909,,,',
',,,,909,,,,,909,909,909,909,,909,909,,,,909,909,276,276,276,276,276',
'276,909,,909,276,276,,,,276,,276,276,276,276,276,276,276,,,,,,276,276',
'276,276,276,276,276,,,276,,,,,,276,276,276,276,276,276,276,276,276,276',
'276,276,,276,276,276,,276,276,276,276,276,,,,,,,,,,,,,,,,,,,,276,,,276',
',,276,276,,,276,,276,,,,276,,,,,,,,276,,,,,276,276,276,276,,276,276',
',,,276,276,653,653,653,653,653,653,276,,276,653,653,,,,653,,653,653',
'653,653,653,653,653,,,,,,653,653,653,653,653,653,653,,,653,,,,,,653',
'653,653,653,653,653,653,653,653,653,653,653,,653,653,653,,653,653,653',
'653,653,,,,,,,,,,,,,,,,,,,,653,,,653,,,653,653,,,653,,653,,,,653,,,',
',,,,653,,,,,653,653,653,653,,653,653,,,,653,653,551,551,551,551,551',
'551,653,,653,551,551,,,,551,,551,551,551,551,551,551,551,,,,,,551,551',
'551,551,551,551,551,,,551,,,,,,551,551,551,551,551,551,551,551,551,551',
'551,551,,551,551,551,,551,551,551,551,551,,,,,,,,,,,,,,,,,,,,551,,,551',
',,551,551,,,551,,551,,,,551,,,,,,,,551,,,,,551,551,551,551,,551,551',
',,,551,551,652,652,652,652,652,652,551,,551,652,652,,,,652,,652,652',
'652,652,652,652,652,,,,,,652,652,652,652,652,652,652,,,652,,,,,,652',
'652,652,652,652,652,652,652,652,652,652,652,,652,652,652,,652,652,652',
'652,652,,,,,,,,,,,,,,,,,,,,652,,,652,,,652,652,,,652,,652,,,,652,,,',
',,,,652,,,,,652,652,652,652,,652,652,,,,652,652,30,30,30,30,30,30,652',
',652,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30',
',,,,,30,30,30,30,30,30,30,30,30,30,30,30,,30,30,30,,30,30,30,30,30,',
',,,,,,,,,,,,,,,,,,30,,,30,,,30,30,,,30,,30,,,,30,,,,,,,,30,,,,,30,30',
'30,30,,30,30,,,,30,30,,104,104,104,,104,30,,30,104,104,,,,104,,104,104',
'104,104,104,104,104,,,,,,104,104,104,104,104,104,104,,,104,,,,,,,104',
',,104,104,104,104,104,104,104,104,,104,104,104,,104,104,104,104,104',
',,,,,,,,,,,,,,,,,,,104,,,104,,,104,104,,,104,,,,,,104,,,,,,,,104,,,',
',104,104,104,104,,104,104,,,,104,104,,105,105,105,,105,104,,104,105',
'105,,,,105,,105,105,105,105,105,105,105,,,,,,105,105,105,105,105,105',
'105,,,105,,,,,,,105,,,105,105,105,105,105,105,105,105,,105,105,105,',
'105,105,105,105,105,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,105,,,105,,,',
',,105,,,,,,,,105,,,,,105,105,105,105,,105,105,,,,105,105,,106,106,106',
',106,105,,105,106,106,,,,106,,106,106,106,106,106,106,106,,,,,,106,106',
'106,106,106,106,106,,,106,,,,,,,106,,,106,106,106,106,106,106,106,106',
',106,106,106,,106,106,106,106,106,,,,,,,,,,,,,,,,,,,,106,,,106,,,106',
'106,,,106,,,,,,106,,,,,,,,106,,,,,106,106,106,106,,106,106,,,,106,106',
',107,107,107,,107,106,,106,107,107,,,,107,,107,107,107,107,107,107,107',
',,,,,107,107,107,107,107,107,107,,,107,,,,,,,107,,,107,107,107,107,107',
'107,107,107,,107,107,107,,107,107,107,107,107,,,,,,,,,,,,,,,,,,,,107',
',,107,,,107,107,,,107,,,,,,107,,,,,,,,107,,,,,107,107,107,107,,107,107',
',,,107,107,,108,108,108,108,108,107,,107,108,108,,,,108,,108,108,108',
'108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,,108,108',
'108,108,108,108,108,108,108,108,108,108,,108,108,108,,108,108,108,108',
'108,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,108,,,108,,108,,,,108,,,,,,,',
'108,,,,,108,108,108,108,,108,108,,,,108,108,,690,690,690,,690,108,,108',
'690,690,,,,690,,690,690,690,690,690,690,690,,,,,,690,690,690,690,690',
'690,690,,,690,,,,,,,690,,,690,690,690,690,690,690,690,690,,690,690,690',
',690,690,690,690,690,,,,,,,,,,,,,,,,,,,,690,,,690,,,690,690,,,690,,',
',,,690,,,,,,,,690,,,,,690,690,690,690,,690,690,,,,690,690,,664,664,664',
',664,690,,690,664,664,,,,664,,664,664,664,664,664,664,664,,,,,,664,664',
'664,664,664,664,664,,,664,,,,,,,664,,,664,664,664,664,664,664,664,664',
',664,664,664,,664,664,664,664,664,,,,,,,,,,,,,,,,,,,,664,,,664,,,664',
'664,,,664,,,,,,664,,,,,,,,664,,,,,664,664,664,664,,664,664,,,,664,664',
',195,195,195,,195,664,,664,195,195,,,,195,,195,195,195,195,195,195,195',
',,,,,195,195,195,195,195,195,195,,,195,,,,,,,195,,,195,195,195,195,195',
'195,195,195,,195,195,195,,195,195,195,195,195,,,,,,,,,,,,,,,,,,,,195',
',,195,,,195,195,,,195,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,,195',
'195,,,,195,195,,196,196,196,,196,195,,195,196,196,,,,196,,196,196,196',
'196,196,196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196',
'196,196,196,196,196,196,196,,196,196,196,,196,196,196,196,196,,,,,,',
',,,,,,,,,,,,,196,,,196,,,196,196,,,196,,196,,,,196,,,,,,,,196,,,,,196',
'196,196,196,,196,196,,,,196,196,,197,197,197,,197,196,,196,197,197,',
',,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197,197',
',,197,,,,,,,197,,,197,197,197,197,197,197,197,197,,197,197,197,,197',
'197,197,197,197,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,197,,,197,,,,,,197',
',,,,,,,197,,,,,197,197,197,197,,197,197,,,,197,197,,198,198,198,,198',
'197,,197,198,198,,,,198,,198,198,198,198,198,198,198,,,,,,198,198,198',
'198,198,198,198,,,198,,,,,,,198,,,198,198,198,198,198,198,198,198,198',
'198,198,198,,198,198,198,198,198,,,,,,,,,,,,,,,,,,,,198,,,198,,,198',
'198,,,198,,198,,198,,198,,,,,,,,198,,,,,198,198,198,198,,198,198,,,',
'198,198,,201,201,201,,201,198,,198,201,201,,,,201,,201,201,201,201,201',
'201,201,,,,,,201,201,201,201,201,201,201,,,201,,,,,,,201,,,201,201,201',
'201,201,201,201,201,,201,201,201,,201,201,201,201,201,,,,,,,,,,,,,,',
',,,,,201,,,201,,,201,201,,,201,,,,,,201,,,,,,,,201,,,,,201,201,201,201',
',201,201,,,,201,201,,202,202,202,,202,201,,201,202,202,,,,202,,202,202',
'202,202,202,202,202,,,,,,202,202,202,202,202,202,202,,,202,,,,,,,202',
',,202,202,202,202,202,202,202,202,,202,202,202,,202,202,202,202,202',
',,,,,,,,,,,,,,,,,,,202,,,202,,,202,202,,,202,,,,,,202,,,,,,,,202,,,',
',202,202,202,202,,202,202,,,,202,202,,203,203,203,,203,202,,202,203',
'203,,,,203,,203,203,203,203,203,203,203,,,,,,203,203,203,203,203,203',
'203,,,203,,,,,,,203,,,203,203,203,203,203,203,203,203,,203,203,203,',
'203,203,203,203,203,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,203,,,203,,,',
',,203,,,,,,,,203,,,,,203,203,203,203,,203,203,,,,203,203,,204,204,204',
',204,203,,203,204,204,,,,204,,204,204,204,204,204,204,204,,,,,,204,204',
'204,204,204,204,204,,,204,,,,,,,204,,,204,204,204,204,204,204,204,204',
',204,204,204,,204,204,204,204,204,,,,,,,,,,,,,,,,,,,,204,,,204,,,204',
'204,,,204,,,,,,204,,,,,,,,204,,,,,204,204,204,204,,204,204,,,,204,204',
',205,205,205,,205,204,,204,205,205,,,,205,,205,205,205,205,205,205,205',
',,,,,205,205,205,205,205,205,205,,,205,,,,,,,205,,,205,205,205,205,205',
'205,205,205,,205,205,205,,205,205,205,205,205,,,,,,,,,,,,,,,,,,,,205',
',,205,,,205,205,,,205,,,,,,205,,,,,,,,205,,,,,205,205,205,205,,205,205',
',,,205,205,205,637,637,637,,637,205,,205,637,637,,,,637,,637,637,637',
'637,637,637,637,,,,,,637,637,637,637,637,637,637,,,637,,,,,,,637,,,637',
'637,637,637,637,637,637,637,,637,637,637,,637,637,,659,637,659,659,659',
'659,659,,,,,,,,,,,,,,,637,,,637,,,637,637,,,637,,,,,,659,,,,,,,,,659',
'659,659,659,637,637,637,637,,637,637,,,,637,637,,626,626,626,,626,637',
',637,626,626,,,,626,,626,626,626,626,626,626,626,,,,,,626,626,626,626',
'626,626,626,,,626,,,,,,,626,,,626,626,626,626,626,626,626,626,,626,626',
'626,,626,626,,910,626,910,910,910,910,910,,,,,,,,,,,,,,,626,,,626,,',
'626,626,,,626,,,,,,910,,,,,,,,,910,910,910,910,626,626,626,626,,626',
'626,,,,626,626,,607,607,607,,607,626,,626,607,607,,,,607,,607,607,607',
'607,607,607,607,,,,,,607,607,607,607,607,607,607,,,607,,,,,,,607,,,607',
'607,607,607,607,607,607,607,,607,607,607,,607,607,607,607,607,,,,,,',
',,,,,,,,,,,,,607,,,607,,,607,607,,,607,,,,,,607,,,,,,,,607,,,,,607,607',
'607,607,,607,607,,,,607,607,,215,215,215,,215,607,,607,215,215,,,,215',
',215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215,215,,,215',
',,,,,,215,,,215,215,215,215,215,215,215,215,,215,215,215,,215,215,215',
'215,215,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,215,,,215,,,,,,215,,,,,,',
',215,,,,,215,215,215,215,,215,215,,,,215,215,,218,218,218,,218,215,',
'215,218,218,,,,218,,218,218,218,218,218,218,218,,,,,,218,218,218,218',
'218,218,218,,,218,,,,,,,218,,,218,218,218,218,218,218,218,218,,218,218',
'218,,218,218,218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,218,,,218',
',,,,,218,,,,,,,,218,,,,,218,218,218,218,,218,218,,,,218,218,,219,219',
'219,,219,218,,218,219,219,,,,219,,219,219,219,219,219,219,219,,,,,,219',
'219,219,219,219,219,219,,,219,,,,,,,219,,,219,219,219,219,219,219,219',
'219,,219,219,219,,219,219,219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,',
',219,219,,,219,,,,,,219,,,,,,,,219,,,,,219,219,219,219,,219,219,,,,219',
'219,,220,220,220,,220,219,,219,220,220,,,,220,,220,220,220,220,220,220',
'220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,220,220',
'220,220,220,220,,220,220,220,,220,220,220,220,220,,,,,,,,,,,,,,,,,,',
',220,,,220,,,220,220,,,220,,,,,,220,,,,,,,,220,,,,,220,220,220,220,',
'220,220,,,,220,220,,221,221,221,,221,220,,220,221,221,,,,221,,221,221',
'221,221,221,221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221',
',,221,221,221,221,221,221,221,221,,221,221,221,,221,221,221,221,221',
',,,,,,,,,,,,,,,,,,,221,,,221,,,221,221,,,221,,,,,,221,,,,,,,,221,,,',
',221,221,221,221,,221,221,,,,221,221,,222,222,222,,222,221,,221,222',
'222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222,222',
'222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,222,,222,222,222,',
'222,222,222,222,222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,222,,,222,,,',
',,222,,,,,,,,222,,,,,222,222,222,222,,222,222,,,,222,222,,223,223,223',
',223,222,,222,223,223,,,,223,,223,223,223,223,223,223,223,,,,,,223,223',
'223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223,223,223,223',
',223,223,223,,223,223,223,223,223,,,,,,,,,,,,,,,,,,,,223,,,223,,,223',
'223,,,223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,,223,223,,,,223,223',
',224,224,224,,224,223,,223,224,224,,,,224,,224,224,224,224,224,224,224',
',,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,224,224,224',
'224,224,224,,224,224,224,,224,224,224,224,224,,,,,,,,,,,,,,,,,,,,224',
',,224,,,224,224,,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,,224,224',
',,,224,224,,225,225,225,,225,224,,224,225,225,,,,225,,225,225,225,225',
'225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225',
'225,225,225,225,225,225,,225,225,225,,225,225,225,225,225,,,,,,,,,,',
',,,,,,,,,225,,,225,,,225,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225',
'225,,225,225,,,,225,225,,226,226,226,,226,225,,225,226,226,,,,226,,226',
'226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,',
',226,,,226,226,226,226,226,226,226,226,,226,226,226,,226,226,226,226',
'226,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,226,,,226,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,,226,226,,,,226,226,,227,227,227,,227,226,,226,227',
'227,,,,227,,227,227,227,227,227,227,227,,,,,,227,227,227,227,227,227',
'227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,227,,227,227,227,',
'227,227,227,227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,227,,,227,,,',
',,227,,,,,,,,227,,,,,227,227,227,227,,227,227,,,,227,227,,228,228,228',
',228,227,,227,228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228',
'228,228,228,228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228',
',228,228,228,,228,228,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228',
'228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,,228,228,,,,228,228',
',229,229,229,,229,228,,228,229,229,,,,229,,229,229,229,229,229,229,229',
',,,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,229,229,229',
'229,229,229,,229,229,229,,229,229,229,229,229,,,,,,,,,,,,,,,,,,,,229',
',,229,,,229,229,,,229,,,,,,229,,,,,,,,229,,,,,229,229,229,229,,229,229',
',,,229,229,,230,230,230,,230,229,,229,230,230,,,,230,,230,230,230,230',
'230,230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230',
'230,230,230,230,230,230,,230,230,230,,230,230,230,230,230,,,,,,,,,,',
',,,,,,,,,230,,,230,,,230,230,,,230,,,,,,230,,,,,,,,230,,,,,230,230,230',
'230,,230,230,,,,230,230,,231,231,231,,231,230,,230,231,231,,,,231,,231',
'231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,',
',231,,,231,231,231,231,231,231,231,231,,231,231,231,,231,231,231,231',
'231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,231,,,231,,,,,,231,,,,,,,,231',
',,,,231,231,231,231,,231,231,,,,231,231,,232,232,232,,232,231,,231,232',
'232,,,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232',
'232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232,,232,232,232,',
'232,232,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,232,,,232,,,',
',,232,,,,,,,,232,,,,,232,232,232,232,,232,232,,,,232,232,,233,233,233',
',233,232,,232,233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233',
'233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,233',
',233,233,233,,233,233,233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233',
'233,,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,,233,233,,,,233,233',
',234,234,234,,234,233,,233,234,234,,,,234,,234,234,234,234,234,234,234',
',,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234',
'234,234,234,,234,234,234,,234,234,234,234,234,,,,,,,,,,,,,,,,,,,,234',
',,234,,,234,234,,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,,234,234',
',,,234,234,,235,235,235,,235,234,,234,235,235,,,,235,,235,235,235,235',
'235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235',
'235,235,235,235,235,235,,235,235,235,,235,235,235,235,235,,,,,,,,,,',
',,,,,,,,,235,,,235,,,235,235,,,235,,,,,,235,,,,,,,,235,,,,,235,235,235',
'235,,235,235,,,,235,235,,236,236,236,,236,235,,235,236,236,,,,236,,236',
'236,236,236,236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,',
',236,,,236,236,236,236,236,236,236,236,,236,236,236,,236,236,236,236',
'236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,236,,,236,,,,,,236,,,,,,,,236',
',,,,236,236,236,236,,236,236,,,,236,236,,237,237,237,,237,236,,236,237',
'237,,,,237,,237,237,237,237,237,237,237,,,,,,237,237,237,237,237,237',
'237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237,,237,237,237,',
'237,237,237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,237,,,237,,,',
',,237,,,,,,,,237,,,,,237,237,237,237,,237,237,,,,237,237,,238,238,238',
',238,237,,237,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238,238',
'238,238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,238',
',238,238,238,,238,238,238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238',
'238,,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238,,238,238,,,,238,238',
',239,239,239,,239,238,,238,239,239,,,,239,,239,239,239,239,239,239,239',
',,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,239,239,239',
'239,239,239,,239,239,239,,239,239,239,239,239,,,,,,,,,,,,,,,,,,,,239',
',,239,,,239,239,,,239,,,,,,239,,,,,,,,239,,,,,239,239,239,239,,239,239',
',,,239,239,,240,240,240,,240,239,,239,240,240,,,,240,,240,240,240,240',
'240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240',
'240,240,240,240,240,240,,240,240,240,,240,240,240,240,240,,,,,,,,,,',
',,,,,,,,,240,,,240,,,240,240,,,240,,,,,,240,,,,,,,,240,,,,,240,240,240',
'240,,240,240,,,,240,240,,241,241,241,,241,240,,240,241,241,,,,241,,241',
'241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,',
',241,,,241,241,241,241,241,241,241,241,,241,241,241,,241,241,241,241',
'241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,241,,,241,,,,,,241,,,,,,,,241',
',,,,241,241,241,241,,241,241,,,,241,241,,242,242,242,,242,241,,241,242',
'242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242,242,242,242,242',
'242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,242,,242,242,242,',
'242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,242,,,242,,,',
',,242,,,,,,,,242,,,,,242,242,242,242,,242,242,,,,242,242,,243,243,243',
',243,242,,242,243,243,,,,243,,243,243,243,243,243,243,243,,,,,,243,243',
'243,243,243,243,243,,,243,,,,,,,243,,,243,243,243,243,243,243,243,243',
',243,243,243,,243,243,243,243,243,,,,,,,,,,,,,,,,,,,,243,,,243,,,243',
'243,,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243,,243,243,,,,243,243',
',590,590,590,,590,243,,243,590,590,,,,590,,590,590,590,590,590,590,590',
',,,,,590,590,590,590,590,590,590,,,590,,,,,,,590,,,590,590,590,590,590',
'590,590,590,,590,590,590,,590,590,590,590,590,,,,,,,,,,,,,,,,,,,,590',
',,590,,,590,590,,,590,,,,,,590,,,,,,,,590,,,,,590,590,590,590,,590,590',
',,,590,590,,252,252,252,,252,590,,590,252,252,,,,252,,252,252,252,252',
'252,252,252,,,,,,252,252,252,252,252,252,252,,,252,,,,,,,252,,,252,252',
'252,252,252,252,252,252,,252,252,252,,252,252,252,252,252,,,,,,,,,,',
',,,,,,,,,252,,,252,,,252,252,,,252,,,,,,252,,,,,,,,252,,,,,252,252,252',
'252,,252,252,,,,252,252,,587,587,587,,587,252,,252,587,587,,,,587,,587',
'587,587,587,587,587,587,,,,,,587,587,587,587,587,587,587,,,587,,,,,',
',587,,,587,587,587,587,587,587,587,587,,587,587,587,,587,587,587,587',
'587,,,,,,,,,,,,,,,,,,,,587,,,587,,,587,587,,,587,,,,,,587,,,,,,,,587',
',,,,587,587,587,587,,587,587,,,,587,587,,254,254,254,,254,587,,587,254',
'254,,,,254,,254,254,254,254,254,254,254,,,,,,254,254,254,254,254,254',
'254,,,254,,,,,,,254,,,254,254,254,254,254,254,254,254,,254,254,254,',
'254,254,254,254,254,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,254,,,254,,,',
',,254,,,,,,,,254,,,,,254,254,254,254,,254,254,,,,254,254,,259,259,259',
',259,254,,254,259,259,,,,259,,259,259,259,259,259,259,259,,,,,,259,259',
'259,259,259,259,259,,,259,,,,,,,259,,,259,259,259,259,259,259,259,259',
',259,259,259,,259,259,259,259,259,,,,,,,,,,,,,,,,,,,,259,,,259,,,259',
'259,,,259,,,,,,259,,,,,,,,259,,,,,259,259,259,259,,259,259,,,,259,259',
',583,583,583,,583,259,,259,583,583,,,,583,,583,583,583,583,583,583,583',
',,,,,583,583,583,583,583,583,583,,,583,,,,,,,583,,,583,583,583,583,583',
'583,583,583,,583,583,583,,583,583,583,583,583,,,,,,,,,,,,,,,,,,,,583',
',,583,,,583,583,,,583,,,,,,583,,,,,,,,583,,,,,583,583,583,583,,583,583',
',,,583,583,,582,582,582,,582,583,,583,582,582,,,,582,,582,582,582,582',
'582,582,582,,,,,,582,582,582,582,582,582,582,,,582,,,,,,,582,,,582,582',
'582,582,582,582,582,582,,582,582,582,,582,582,582,582,582,,,,,,,,,,',
',,,,,,,,,582,,,582,,,582,582,,,582,,,,,,582,,,,,,,,582,,,,,582,582,582',
'582,,582,582,,,,582,582,,579,579,579,,579,582,,582,579,579,,,,579,,579',
'579,579,579,579,579,579,,,,,,579,579,579,579,579,579,579,,,579,,,,,',
',579,,,579,579,579,579,579,579,579,579,,579,579,579,,579,579,579,579',
'579,,,,,,,,,,,,,,,,,,,,579,,,579,,,579,579,,,579,,,,,,579,,,,,,,,579',
',,,,579,579,579,579,,579,579,,,,579,579,,265,265,265,,265,579,,579,265',
'265,,,,265,,265,265,265,265,265,265,265,,,,,,265,265,265,265,265,265',
'265,,,265,,,,,,,265,,,265,265,265,265,265,265,265,265,265,265,265,265',
',265,265,265,265,265,,,,,,,,,,,,,,,,,,,,265,,,265,,,265,265,,,265,,265',
',265,,265,,,,,,,,265,,,,,265,265,265,265,,265,265,,,,265,265,,266,266',
'266,,266,265,,265,266,266,,,,266,,266,266,266,266,266,266,266,,,,,,266',
'266,266,266,266,266,266,,,266,,,,,,,266,,,266,266,266,266,266,266,266',
'266,266,266,266,266,,266,266,266,266,266,,,,,,,,,,,,,,,,,,,,266,,,266',
',,266,266,,,266,,266,,266,,266,,,,,,,,266,,,,,266,266,266,266,,266,266',
',,,266,266,,274,274,274,,274,266,,266,274,274,,,,274,,274,274,274,274',
'274,274,274,,,,,,274,274,274,274,274,274,274,,,274,,,,,,,274,,,274,274',
'274,274,274,274,274,274,274,274,274,274,,274,274,274,274,274,,,,,,,',
',,,,,,,,,,,,274,,,274,,,274,274,,,274,,274,,274,,274,,,,,,,,274,,,,',
'274,274,274,274,,274,274,,,,274,274,274,578,578,578,,578,274,,274,578',
'578,,,,578,,578,578,578,578,578,578,578,,,,,,578,578,578,578,578,578',
'578,,,578,,,,,,,578,,,578,578,578,578,578,578,578,578,,578,578,578,',
'578,578,578,578,578,,,,,,,,,,,,,,,,,,,,578,,,578,,,578,578,,,578,,578',
',,,578,,,,,,,,578,,,,,578,578,578,578,,578,578,,,,578,578,,576,576,576',
',576,578,,578,576,576,,,,576,,576,576,576,576,576,576,576,,,,,,576,576',
'576,576,576,576,576,,,576,,,,,,,576,,,576,576,576,576,576,576,576,576',
',576,576,576,,576,576,576,576,576,,,,,,,,,,,,,,,,,,,,576,,,576,,,576',
'576,,,576,,,,,,576,,,,,,,,576,,,,,576,576,576,576,,576,576,,,,576,576',
',548,548,548,,548,576,,576,548,548,,,,548,,548,548,548,548,548,548,548',
',,,,,548,548,548,548,548,548,548,,,548,,,,,,,548,,,548,548,548,548,548',
'548,548,548,,548,548,548,,548,548,548,548,548,,,,,,,,,,,,,,,,,,,,548',
',,548,,,548,548,,,548,,,,,,548,,,,,,,,548,,,,,548,548,548,548,,548,548',
',,,548,548,,280,280,280,,280,548,,548,280,280,,,,280,,280,280,280,280',
'280,280,280,,,,,,280,280,280,280,280,280,280,,,280,,,,,386,,280,,,280',
'280,280,280,280,280,280,280,,280,280,280,,280,280,,,280,386,386,386',
'386,386,386,386,386,386,386,386,,386,386,,,386,386,,280,,,280,,,280',
'280,,,280,,,386,,386,,386,386,386,386,386,386,386,,386,,,,280,280,280',
'280,,280,280,,,,280,280,,386,,280,,,280,,280,545,545,545,,545,,,,545',
'545,,,,545,,545,545,545,545,545,545,545,,,,,,545,545,545,545,545,545',
'545,,,545,,,,,,,545,,,545,545,545,545,545,545,545,545,545,545,545,545',
',545,545,545,545,545,,,,,,,,,,,,,,,,,,,,545,,,545,,,545,545,,,545,,545',
',545,,545,,,,,,,,545,,,,,545,545,545,545,,545,545,,,,545,545,,535,535',
'535,,535,545,,545,535,535,,,,535,,535,535,535,535,535,535,535,,,,,,535',
'535,535,535,535,535,535,,,535,,,,,,,535,,,535,535,535,535,535,535,535',
'535,535,535,535,535,,535,535,535,535,535,,,,,,,,,,,,,,,,,,,,535,,,535',
',,535,535,,,535,,535,,535,,535,,,,,,,,535,,,,,535,535,535,535,,535,535',
',,,535,535,,534,534,534,,534,535,,535,534,534,,,,534,,534,534,534,534',
'534,534,534,,,,,,534,534,534,534,534,534,534,,,534,,,,,,,534,,,534,534',
'534,534,534,534,534,534,,534,534,534,,534,534,534,534,534,,,,,,,,,,',
',,,,,,,,,534,,,534,,,534,534,,,534,,534,,,,534,,,,,,,,534,,,,,534,534',
'534,534,,534,534,,,,534,534,,498,498,498,,498,534,,534,498,498,,,,498',
',498,498,498,498,498,498,498,,,,,,498,498,498,498,498,498,498,,,498',
',,,,,,498,,,498,498,498,498,498,498,498,498,498,498,498,498,,498,498',
'498,498,498,,,,,,,,,,,,,,,,,,,,498,,,498,,,498,498,,,498,,,,,,498,,',
',,,,,498,,,,,498,498,498,498,,498,498,,,,498,498,,495,495,495,,495,498',
',498,495,495,,,,495,,495,495,495,495,495,495,495,,,,,,495,495,495,495',
'495,495,495,,,495,,,,,,,495,,,495,495,495,495,495,495,495,495,495,495',
'495,495,,495,495,495,495,495,,,,,,,,,,,,,,,,,,,,495,,,495,,,495,495',
',,495,,495,,,,495,,,,,,,,495,,,,,495,495,495,495,,495,495,,,,495,495',
',491,491,491,,491,495,,495,491,491,,,,491,,491,491,491,491,491,491,491',
',,,,,491,491,491,491,491,491,491,,,491,,,,,,,491,,,491,491,491,491,491',
'491,491,491,,491,491,491,,491,491,491,491,491,,,,,,,,,,,,,,,,,,,,491',
',,491,,,491,491,,,491,,491,,,,491,,,,,,,,491,,,,,491,491,491,491,,491',
'491,,,,491,491,,489,489,489,,489,491,,491,489,489,,,,489,,489,489,489',
'489,489,489,489,,,,,,489,489,489,489,489,489,489,,,489,,,,,,,489,,,489',
'489,489,489,489,489,489,489,,489,489,489,,489,489,489,489,489,,,,,,',
',,,,,,,,,,,,,489,,,489,,,489,489,,,489,,,,,,489,,,,,,,,489,,,,,489,489',
'489,489,,489,489,,,,489,489,,485,485,485,,485,489,,489,485,485,,,,485',
',485,485,485,485,485,485,485,,,,,,485,485,485,485,485,485,485,,,485',
',,,,,,485,,,485,485,485,485,485,485,485,485,,485,485,485,,485,485,485',
'485,485,,,,,,,,,,,,,,,,,,,,485,,,485,,,485,485,,,485,,,,,,485,,,,,,',
',485,,,,,485,485,485,485,,485,485,,,,485,485,,293,293,293,,293,485,',
'485,293,293,,,,293,,293,293,293,293,293,293,293,,,,,,293,293,293,293',
'293,293,293,,,293,,,,,,,293,,,293,293,293,293,293,293,293,293,,293,293',
'293,,293,293,,870,293,870,870,870,870,870,,,,,,,,,,,,,,,293,,,293,,',
'293,293,,,293,,,,,,870,870,,,,,,,,870,870,870,870,293,293,293,293,,293',
'293,,,,293,293,,484,484,484,,484,293,,293,484,484,,,,484,,484,484,484',
'484,484,484,484,,,,,,484,484,484,484,484,484,484,,,484,,,,,,,484,,,484',
'484,484,484,484,484,484,484,,484,484,484,,484,484,484,484,484,,,,,,',
',,,,,,,,,,,,,484,,,484,,,484,484,,,484,,,,,,484,,,,,,,,484,,,,,484,484',
'484,484,,484,484,,,,484,484,,483,483,483,,483,484,,484,483,483,,,,483',
',483,483,483,483,483,483,483,,,,,,483,483,483,483,483,483,483,,,483',
',,,,,,483,,,483,483,483,483,483,483,483,483,,483,483,483,,483,483,483',
'483,483,,,,,,,,,,,,,,,,,,,,483,,,483,,,483,483,,,483,,,,,,483,,,,,,',
',483,,,,,483,483,483,483,,483,483,,,,483,483,,480,480,480,,480,483,',
'483,480,480,,,,480,,480,480,480,480,480,480,480,,,,,,480,480,480,480',
'480,480,480,,,480,,,,,,,480,,,480,480,480,480,480,480,480,480,,480,480',
'480,,480,480,,503,480,503,503,503,503,503,,,,,,,,,,,,,,,480,,,480,,',
'480,480,,,480,,,,,,503,,,,,,,,,503,503,503,503,480,480,480,480,,480',
'480,,,,480,480,,473,473,473,,473,480,,480,473,473,,,,473,,473,473,473',
'473,473,473,473,,,,,,473,473,473,473,473,473,473,,,473,,,,,,,473,,,473',
'473,473,473,473,473,473,473,473,473,473,473,,473,473,473,473,473,,,',
',,,,,,,,,,,,,,,,473,,,473,,,473,473,,,473,,473,,473,,473,,,,,,,,473',
',,,,473,473,473,473,,473,473,,,,473,473,,471,471,471,,471,473,,473,471',
'471,,,,471,,471,471,471,471,471,471,471,,,,,,471,471,471,471,471,471',
'471,,,471,,,,,,,471,,,471,471,471,471,471,471,471,471,,471,471,471,',
'471,471,,844,471,844,844,844,844,844,,,,,,,,,,,,,,,471,,,471,,,471,471',
',,471,,,,,,844,,,,,,,,,844,844,844,844,471,471,471,471,,471,471,,,,471',
'471,,302,302,302,,302,471,,471,302,302,,,,302,,302,302,302,302,302,302',
'302,,,,,,302,302,302,302,302,302,302,,,302,,,,,,,302,,,302,302,302,302',
'302,302,302,302,,302,302,302,,302,302,302,302,302,,,,,,,,,,,,,,,,,,',
',302,,,302,302,,302,302,,,302,,,,,,302,,,,,,,,302,,,,,302,302,302,302',
',302,302,,,,302,302,,461,461,461,,461,302,,302,461,461,,,,461,,461,461',
'461,461,461,461,461,,,,,,461,461,461,461,461,461,461,,,461,,,,,,,461',
',,461,461,461,461,461,461,461,461,461,461,461,461,,461,461,461,461,461',
',,,,,,,,,,,,,,,,,,,461,,,461,,,461,461,,,461,,,,461,,461,,,,,,,,461',
',,,,461,461,461,461,,461,461,,,,461,461,,449,449,449,,449,461,,461,449',
'449,,,,449,,449,449,449,449,449,449,449,,,,,,449,449,449,449,449,449',
'449,,,449,,,,,,,449,,,449,449,449,449,449,449,449,449,,449,449,449,',
'449,449,449,449,449,,,,,,,,,,,,,,,,,,,,449,,,449,,,449,449,,,449,,,',
',,449,,,,,,,,449,,,,,449,449,449,449,,449,449,,,,449,449,,447,447,447',
',447,449,,449,447,447,,,,447,,447,447,447,447,447,447,447,,,,,,447,447',
'447,447,447,447,447,,,447,,,,,,,447,,,447,447,447,447,447,447,447,447',
'447,447,447,447,,447,447,447,447,447,,,,,,,,,,,,,,,,,,,,447,,,447,,',
'447,447,,,447,,,,447,,447,,,,,,,,447,,,,,447,447,447,447,,447,447,,',
',447,447,,445,445,445,,445,447,,447,445,445,,,,445,,445,445,445,445',
'445,445,445,,,,,,445,445,445,445,445,445,445,,,445,,,,,,,445,,,445,445',
'445,445,445,445,445,445,445,445,445,445,,445,445,445,445,445,,,,,,,',
',,,,,,,,,,,,445,,,445,,,445,445,,,445,,445,,445,,445,,,,,,,,445,,,,',
'445,445,445,445,,445,445,,,,445,445,,416,416,416,,416,445,,445,416,416',
',,,416,,416,416,416,416,416,416,416,,,,,,416,416,416,416,416,416,416',
',,416,,,,,,,416,,,416,416,416,416,416,416,416,416,,416,416,416,,416',
'416,416,416,416,,,,,,,,,,,,,,,,,,,,416,,,416,,,416,416,,,416,,,,,,416',
',,,,,,,416,,,,,416,416,416,416,,416,416,,,,416,416,,415,415,415,,415',
'416,,416,415,415,,,,415,,415,415,415,415,415,415,415,,,,,,415,415,415',
'415,415,415,415,,,415,,,,,,,415,,,415,415,415,415,415,415,415,415,,415',
'415,415,,415,415,415,415,415,,,,,,,,,,,,,,,,,,,,415,,,415,,,415,415',
',,415,,,,,,415,,,,,,,,415,,,,,415,415,415,415,,415,415,,,,415,415,,414',
'414,414,,414,415,,415,414,414,,,,414,,414,414,414,414,414,414,414,,',
',,,414,414,414,414,414,414,414,,,414,,,,,,,414,,,414,414,414,414,414',
'414,414,414,,414,414,414,,414,414,414,414,414,,,,,,,,,,,,,,,,,,,,414',
',,414,,,414,414,,,414,,,,,,414,,,,,,,,414,,,,,414,414,414,414,,414,414',
',,,414,414,,412,412,412,,412,414,,414,412,412,,,,412,,412,412,412,412',
'412,412,412,,,,,,412,412,412,412,412,412,412,,,412,,,,,,,412,,,412,412',
'412,412,412,412,412,412,412,412,412,412,,412,412,412,412,412,,,,,,,',
',,,,,,,,,,,,412,,,412,,,412,412,,,412,,412,,412,,412,,,,,,,,412,,,,',
'412,412,412,412,,412,412,,,,412,412,,319,319,319,,319,412,,412,319,319',
',,,319,,319,319,319,319,319,319,319,,,,,,319,319,319,319,319,319,319',
',,319,,,,,,,319,,,319,319,319,319,319,319,319,319,,319,319,319,,319',
'319,319,319,319,,,,,,,,,,,,,,,,,,,,319,,,319,,,319,319,,,319,,,,,,319',
',,,,,,,319,,,,,319,319,319,319,,319,319,,,,319,319,,380,380,380,,380',
'319,,319,380,380,,,,380,,380,380,380,380,380,380,380,,,,,,380,380,380',
'380,380,380,380,,,380,,,,,,,380,,,380,380,380,380,380,380,380,380,,380',
'380,380,,380,380,380,380,380,,,,,,,,,,,,,,,,,,,,380,,,380,,,380,380',
',,380,,,,,,380,,,,,,,,380,,,,,380,380,380,380,,380,380,,,,380,380,,320',
'320,320,,320,380,,380,320,320,,,,320,,320,320,320,320,320,320,320,,',
',,,320,320,320,320,320,320,320,,,320,,,,,,,320,,,320,320,320,320,320',
'320,320,320,,320,320,320,,320,320,320,320,320,,,,,,,,,,,,,,,,,,,,320',
',,320,,,320,320,,,320,,,,,,320,,,,,,,,320,,,,,320,320,320,320,,320,320',
',,,320,320,,353,353,353,,353,320,,320,353,353,,,,353,,353,353,353,353',
'353,353,353,,,,,,353,353,353,353,353,353,353,,,353,,,,,,,353,,,353,353',
'353,353,353,353,353,353,,353,353,353,,353,353,353,353,353,,,,,,,,,,',
',,,,,,,,,353,,,353,,,353,353,,,353,,,,,,353,,,,,,,,353,,,,,353,353,353',
'353,,353,353,,,,353,353,,338,338,338,,338,353,,353,338,338,,,,338,,338',
'338,338,338,338,338,338,,,,,,338,338,338,338,338,338,338,,,338,,,,,',
',338,,,338,338,338,338,338,338,338,338,,338,338,338,,338,338,338,338',
'338,,,,,,,,,,,,,,,,,,,,338,,,338,,,338,338,,,338,,,,,,338,,,,,,,,338',
',,,,338,338,338,338,,338,338,,,,338,338,,5,5,5,5,5,338,,338,5,5,,,,5',
',5,5,5,5,5,5,5,,,,,,5,5,5,5,5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,',
'5,5,5,,5,5,5,5,5,,,,,,,,,,,,,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,5',
',,,,5,5,5,5,,5,5,,,,5,5,,888,888,888,,888,5,,5,888,888,,,,888,,888,888',
'888,888,888,888,888,,,,,,888,888,888,888,888,888,888,,,888,,,,,,,888',
',,888,888,888,888,888,888,888,888,888,888,888,888,,888,888,888,888,888',
',,,,,,,,,,,,,,,,,,,888,,,888,,,888,888,,,888,,888,,888,,888,,,,,,,,888',
',,,,888,888,888,888,,888,888,,,,888,888,,885,885,885,,885,888,,888,885',
'885,,,,885,,885,885,885,885,885,885,885,,,,,,885,885,885,885,885,885',
'885,,,885,,,,,,,885,,,885,885,885,885,885,885,885,885,885,885,885,885',
',885,885,885,885,885,,,,,,,,,,,,,,,,,,,,885,,,885,,,885,885,,,885,,885',
',885,,885,,,,,,,,885,,,,,885,885,885,885,,885,885,,,,885,885,,882,882',
'882,,882,885,,885,882,882,,,,882,,882,882,882,882,882,882,882,,,,,,882',
'882,882,882,882,882,882,,,882,,,,,,,882,,,882,882,882,882,882,882,882',
'882,,882,882,882,,882,882,882,882,882,,,,,,,,,,,,,,,,,,,,882,,,882,',
',882,882,,,882,,882,,882,,882,,,,,,,,882,,,,,882,882,882,882,,882,882',
',,,882,882,,823,823,823,,823,882,,882,823,823,,,,823,,823,823,823,823',
'823,823,823,,,,,,823,823,823,823,823,823,823,,,823,,,,,,,823,,,823,823',
'823,823,823,823,823,823,,823,823,823,,823,823,,315,823,315,315,315,315',
'315,,,,,,,,,,,,,,,823,,,823,,,823,823,,,823,,,,,,315,315,,,,,,,,315',
'315,315,315,823,823,823,823,,823,823,,,,823,823,,813,813,813,,813,823',
',823,813,813,,,,813,,813,813,813,813,813,813,813,,,,,,813,813,813,813',
'813,813,813,,,813,,,,,,,813,,,813,813,813,813,813,813,813,813,,813,813',
'813,,813,813,813,813,813,,,,,,,,,,,,,,,,,,,,813,,,813,,,813,813,,,813',
',,,,,813,,,,,,,,813,,,,,813,813,813,813,,813,813,,,,813,813,,796,796',
'796,,796,813,,813,796,796,,,,796,,796,796,796,796,796,796,796,,,,,,796',
'796,796,796,796,796,796,,,796,,,,,,,796,,,796,796,796,796,796,796,796',
'796,,796,796,796,,796,796,796,796,796,,,,,,,,,,,,,,,,,,,,796,,,796,',
',796,796,,,796,,796,,,,796,,,,,,,,796,,,,,796,796,796,796,,796,796,',
',,796,796,,18,18,18,,18,796,,796,18,18,,,,18,,18,18,18,18,18,18,18,',
',,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,18,18,18,18,18,18,,18',
'18,18,,18,18,18,18,18,,,,,,,,,,,,,,,,,,,,18,,,18,,,18,18,,,18,,,,,,18',
',,,,,,,18,,,,,18,18,18,18,,18,18,,,,18,18,,791,791,791,,791,18,,18,791',
'791,,,,791,,791,791,791,791,791,791,791,,,,,,791,791,791,791,791,791',
'791,,,791,,,,,,,791,,,791,791,791,791,791,791,791,791,,791,791,791,',
'791,791,791,791,791,,,,,,,,,,,,,,,,,,,,791,,,791,,,791,791,,,791,,,',
',,791,,,,,,,,791,,,,,791,791,791,791,,791,791,,,,791,791,,764,764,764',
',764,791,,791,764,764,,,,764,,764,764,764,764,764,764,764,,,,,,764,764',
'764,764,764,764,764,,,764,,,,,,,764,,,764,764,764,764,764,764,764,764',
',764,764,764,,764,764,,701,764,701,701,701,701,701,,,,,,,,,,,,,,,764',
',,764,,,764,764,,,764,,,,,,701,,,,,,,,,701,701,701,701,764,764,764,764',
',764,764,,,,764,764,,22,22,22,,22,764,,764,22,22,,,,22,,22,22,22,22',
'22,22,22,,,,,,22,22,22,22,22,22,22,,,22,,,,,,,22,,,22,22,22,22,22,22',
'22,22,22,22,22,22,,22,22,22,22,22,,,,,,,,,,,,,,,,,,,,22,,,22,,,22,22',
',,22,,22,,22,,22,,,,,,,,22,,,,,22,22,22,22,,22,22,,,,22,22,,23,23,23',
',23,22,,22,23,23,,,,23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23,23',
'23,,,23,,,,,,,23,,,23,23,23,23,23,23,23,23,23,23,23,23,,23,23,23,23',
'23,,,,,,,,,,,,,,,,,,,,23,,,23,,,23,23,,,23,,23,,23,,23,,,,,,,,23,,,',
',23,23,23,23,,23,23,,,,23,23,,24,24,24,,24,23,,23,24,24,,,,24,,24,24',
'24,24,24,24,24,,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,24,24',
'24,24,24,24,24,24,24,24,,24,24,24,24,24,,,,,,,,,,,,,,,,,,,,24,,,24,',
',24,24,,,24,,24,,24,,24,,,,,,,,24,,,,,24,24,24,24,,24,24,,,,24,24,,749',
'749,749,,749,24,,24,749,749,,,,749,,749,749,749,749,749,749,749,,,,',
',749,749,749,749,749,749,749,,,749,,,,,,,749,,,749,749,749,749,749,749',
'749,749,749,749,749,749,,749,749,749,749,749,,,,,,,,,,,,,,,,,,,,749',
',,749,,,749,749,,,749,,749,,749,,749,,,,,,,,749,,,,,749,749,749,749',
',749,749,,,,749,749,,31,31,31,,31,749,,749,31,31,,,,31,,31,31,31,31',
'31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31,31,31',
'31,31,,31,31,31,,31,31,,815,31,815,815,815,815,815,,,,,,,,,,,,,,,31',
',,31,,,31,31,,,31,,31,,,,815,,,,,,,,,815,815,815,815,31,31,31,31,,31',
'31,,,,31,31,,32,32,32,,32,31,,31,32,32,,,,32,,32,32,32,32,32,32,32,',
',,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,32,32,32,32,32,32,,32',
'32,32,,32,32,,,32,488,488,488,488,488,488,488,488,488,488,488,,488,488',
',,488,488,,32,,,32,,,32,32,,,32,,,488,,488,,488,488,488,488,488,488',
'488,,488,,,,32,32,32,32,,32,32,,,,32,32,,488,,32,,,32,,32,746,746,746',
',746,,,,746,746,,,,746,,746,746,746,746,746,746,746,,,,,,746,746,746',
'746,746,746,746,,,746,,,,,,,746,,,746,746,746,746,746,746,746,746,746',
'746,746,746,,746,746,746,746,746,,,,,,,,,,,,,,,,,,,,746,,,746,,,746',
'746,,,746,,746,,746,,746,,,,,,,,746,,,,,746,746,746,746,,746,746,,,',
'746,746,,735,735,735,,735,746,,746,735,735,,,,735,,735,735,735,735,735',
'735,735,,,,,,735,735,735,735,735,735,735,,,735,,,,,,,735,,,735,735,735',
'735,735,735,735,735,,735,735,735,,735,735,735,735,735,,,,,,,,,,,,,,',
',,,,,735,,,735,,,735,735,,,735,,,,,,735,,,,,,,,735,,,,,735,735,735,735',
',735,735,,,,735,735,,733,733,733,,733,735,,735,733,733,,,,733,,733,733',
'733,733,733,733,733,,,,,,733,733,733,733,733,733,733,,,733,,,,,,,733',
',,733,733,733,733,733,733,733,733,,733,733,733,,733,733,733,733,733',
',,,,,,,,,,,,,,,,,,,733,,,733,,,733,733,,,733,,,,,,733,,,,,,,,733,,,',
',733,733,733,733,,733,733,,,,733,733,,38,38,38,,38,733,,733,38,38,,',
',38,,38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,',
'38,38,38,38,38,38,38,38,,38,38,38,,38,38,38,38,38,,,,,,,,,,,,,,,,,,',
',38,,,38,,,38,38,,,38,,,,,,38,,,,,,,,38,,,,,38,38,38,38,,38,38,,,,38',
'38,,39,39,39,,39,38,,38,39,39,,,,39,,39,39,39,39,39,39,39,,,,,,39,39',
'39,39,39,39,39,,,39,,,,,,,39,,,39,39,39,39,39,39,39,39,,39,39,39,,39',
'39,39,39,39,,,,,,,,,,,,,,,,,,,,39,,,39,,,39,39,,,39,,,,,,39,,,,,,,,39',
',,,,39,39,39,39,,39,39,,,,39,39,,40,40,40,,40,39,,39,40,40,,,,40,,40',
'40,40,40,40,40,40,,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,40',
'40,40,40,40,40,,40,40,40,,40,40,40,40,40,,,,,,,,,,,,,,,,,,,,40,,,40',
',,40,40,,,40,,,,,,40,,,,,,,,40,,,,,40,40,40,40,,40,40,,,,40,40,,732',
'732,732,,732,40,,40,732,732,,,,732,,732,732,732,732,732,732,732,,,,',
',732,732,732,732,732,732,732,,,732,,,,,,,732,,,732,732,732,732,732,732',
'732,732,,732,732,732,,732,732,732,732,732,,,,,,,,,,,,,,,,,,,,732,,,732',
',,732,732,,,732,,,,,,732,,,,,,,,732,,,,,732,732,732,732,,732,732,,,',
'732,732,,731,731,731,,731,732,,732,731,731,,,,731,,731,731,731,731,731',
'731,731,,,,,,731,731,731,731,731,731,731,,,731,,,,,,,731,,,731,731,731',
'731,731,731,731,731,,731,731,731,,731,731,731,731,731,,,,,,,,,,,,,,',
',,,,,731,,,731,,,731,731,,,731,,,,,,731,,,,,,,,731,,,,,731,731,731,731',
',731,731,,,,731,731,,52,52,52,,52,731,,731,52,52,,,,52,,52,52,52,52',
'52,52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,52,52,52,52',
'52,52,,52,52,52,,52,52,52,52,52,,,,,,,,,,,,,,,,,,,,52,,,52,,,52,52,',
',52,,,,,,52,,,,,,,,52,,,,,52,52,52,52,,52,52,,,,52,52,,53,53,53,,53',
'52,,52,53,53,,,,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,',
',53,,,,,,,53,,,53,53,53,53,53,53,53,53,53,53,53,53,,53,53,53,53,53,',
',,,,,,,,,,,,,,,,,,53,,,53,,,53,53,,,53,,53,,,,53,,,,,,,,53,,,,,53,53',
'53,53,,53,53,,,,53,53,,54,54,54,,54,53,,53,54,54,,,,54,,54,54,54,54',
'54,54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54',
'54,54,54,54,54,54,,54,54,54,54,54,,,,,,,,,,,,,,,,,,,,54,,,54,,,54,54',
',,54,,,,,,54,,,,,,,,54,,,,,54,54,54,54,,54,54,,,,54,54,,720,720,720',
',720,54,,54,720,720,,,,720,,720,720,720,720,720,720,720,,,,,,720,720',
'720,720,720,720,720,,,720,,,,,,,720,,,720,720,720,720,720,720,720,720',
',720,720,720,,720,720,720,720,720,,,,,,,,,,,,,,,,,,,,720,,,720,,,720',
'720,,,720,,,,,,720,,,,,,,,720,,,,,720,720,720,720,,720,720,,,,720,720',
',57,57,57,,57,720,,720,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57',
'57,57,57,57,57,,,57,,,,,,,57,,,57,57,57,57,57,57,57,57,,57,57,57,,57',
'57,57,57,57,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,57,,,57,,,,,,57,,,,,,,,57',
',,,,57,57,57,57,,57,57,,,,57,57,,58,58,58,,58,57,,57,58,58,,,,58,,58',
'58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58',
'58,58,58,58,58,,58,58,58,,58,58,58,58,58,,,,,,,,,,,,,,,,,,,,58,,,58',
',,58,58,,,58,,,,,,58,,,,,,,,58,,,,,58,58,58,58,,58,58,,,,58,58,,61,61',
'61,,61,58,,58,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61',
'61,61,,,61,,,,,,,61,,,61,61,61,61,61,61,61,61,,61,61,61,,61,61,61,61',
'61,616,616,616,616,616,616,616,616,616,616,616,,616,616,,,616,616,,61',
',616,61,,,61,61,,,61,,,616,,616,61,616,616,616,616,616,616,616,61,616',
',,,61,61,61,61,,61,61,,,,61,61,61,616,,616,,61,61,,61,62,62,62,,62,',
',,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,',
',,,,,62,,,62,62,62,62,62,62,62,62,,62,62,62,,62,62,,817,62,817,817,817',
'817,817,,,,,,,,,,,,,,,62,,,62,,,62,62,,,62,,62,,,,817,,,,,,,,,817,817',
'817,817,62,62,62,62,,62,62,,,,62,62,,63,63,63,,63,62,,62,63,63,,,,63',
',63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63',
'63,63,63,63,63,63,,63,63,63,,63,63,,,63,,,,,,,,,,,,,,,,,63,,,63,,,63',
',,63,63,,,63,,,,,,,,,,,,,,,,,,,63,63,63,63,,63,63,,,,63,63,,64,64,64',
',64,63,,63,64,64,,,,64,,64,64,64,64,64,64,64,,,,,,64,64,64,64,64,64',
'64,,,64,,,,,,,64,,,64,64,64,64,64,64,64,64,,64,64,64,,64,64,,,64,,,',
',,,,,,,,,,,,,,,,64,,,64,,,64,64,,,64,,,,,,,,,,,,,,,,,,,64,64,64,64,',
'64,64,,,,64,64,,718,718,718,,718,64,,64,718,718,,,,718,,718,718,718',
'718,718,718,718,,,,,,718,718,718,718,718,718,718,,,718,,,,,,,718,,,718',
'718,718,718,718,718,718,718,,718,718,718,,718,718,718,718,718,,,,,,',
',,,,,,,,,,,,,718,,,718,,,718,718,,,718,,,,,,718,,,,,,,,718,,,,,718,718',
'718,718,,718,718,,,,718,718,,100,100,100,100,100,718,,718,100,100,,',
',100,,100,100,100,100,100,100,100,,,,,,100,100,100,100,100,100,100,',
',100,,,,,,100,100,100,100,100,100,100,100,100,100,100,100,,100,100,100',
',100,100,100,100,100,812,812,812,812,812,812,812,812,812,812,812,,812',
'812,,,812,812,,100,,,100,,,100,100,,,100,,100,812,,812,100,812,812,812',
'812,812,812,812,100,812,,,,100,100,100,100,,100,100,,,,100,100,,812',
'391,,,100,100,,100,391,391,391,,,391,391,391,,391,,,,,,,,,391,391,391',
',,,,,,,,391,391,,391,391,391,391,391,,,,,,,,,,,,,,,,,,,,,,,391,391,391',
'391,391,391,391,391,391,391,391,391,391,391,,,391,391,391,,,391,,391',
'391,,,391,391,,391,,391,,391,,391,391,391,391,391,391,391,27,391,391',
'391,,,,27,27,27,,,27,27,27,,27,391,391,,391,,391,,,27,27,27,,,,,,,,',
'27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27',
'27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,27,,27,,27,,27,,27,27',
'27,27,27,27,27,28,27,27,27,,,,28,28,28,,,28,28,28,,28,27,27,,27,,27',
',,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,28,,28',
',28,,28,,28,28,28,28,28,28,28,452,28,,28,,,,452,452,452,,,452,452,452',
',452,28,28,,28,,28,,,,452,,,,,,,,,,452,452,,452,452,452,452,452,,,,',
',,,,,,,455,,,,,,,455,455,455,,,455,455,455,,455,,,,,,452,,,,455,,,452',
',,,,452,452,455,455,,455,455,455,455,455,,,,,,474,474,,,474,,,,452,',
',,474,474,,474,474,474,474,474,474,474,452,,474,474,,452,455,474,474',
'474,474,,,455,,,474,,455,455,,,,,474,474,,474,474,474,474,474,474,474',
'474,474,474,474,,,474,455,,,,,,,,,,,,,,455,,,,,455,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,,,,,,7,7,7,7,7',
'7,7,7,7,,,7,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,',
'7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,,7,573,573,573,573,573,573',
'573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573',
'573,,,,573,573,573,573,573,573,573,573,573,573,,,,,,573,573,573,573',
'573,573,573,573,573,,,573,,,,,,,,573,573,,573,573,573,573,573,573,573',
',,573,573,,,,573,573,573,573,,,,,,,,,,,,,,573,573,,573,573,573,573,573',
'573,573,573,573,573,573,,,573,573,,,,,,,,,,,573,6,6,6,6,6,6,6,6,6,6',
'6,6,6,6,6,6,6,6,6,6,6,6,6,6,,,,6,6,6,6,6,6,6,6,6,6,,,,,,6,6,6,6,6,6',
'6,6,6,6,,6,,,,,,,,6,6,,6,6,6,6,6,6,6,,,6,6,,,,6,6,6,6,,,,,,,,,,,,,,6',
'6,,6,6,6,6,6,6,6,6,6,6,6,,,6,6,,,,,,,,,,,6,369,369,369,369,369,369,369',
'369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369',
',,,369,369,369,369,369,369,369,369,369,369,,,,,,369,369,369,369,369',
'369,369,369,369,,,369,,,,,,,,369,369,,369,369,369,369,369,369,369,,',
'369,369,,,,369,369,369,369,,,,,,,,,,,,,,369,369,,369,369,369,369,369',
'369,369,369,369,369,369,,,369,369,,,,,,,,,,,369,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,65,65,65,65,65',
'65,65,65,65,65,,,,,,65,65,65,65,65,65,65,65,65,65,65,65,,65,,,,,,65',
'65,,65,65,65,65,65,65,65,,,65,65,,,,65,65,65,65,,,,,,65,,,,,,,,65,65',
',65,65,65,65,65,65,65,65,65,65,65,,,65,703,703,703,703,703,703,703,703',
'703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,,,,703',
'703,703,703,703,703,703,703,703,703,,,,,,703,703,703,703,703,703,703',
'703,703,,,703,,,,,,,,703,703,,703,703,703,703,703,703,703,,,703,703',
',,,703,703,703,703,,,,,,,,,,,,,,703,703,,703,703,703,703,703,703,703',
'703,703,703,703,263,263,703,,263,,,,,,,,263,263,,263,263,263,263,263',
'263,263,,,263,263,,,,263,263,263,263,,,,,,,,,,,,,,263,263,,263,263,263',
'263,263,263,263,263,263,263,263,262,262,263,,262,,,,,,,,262,262,,262',
'262,262,262,262,262,262,,,262,262,,,,262,262,262,262,,,,,,,,,,,,,,262',
'262,,262,262,262,262,262,262,262,262,262,262,262,918,918,262,,918,,',
',,,,,918,918,,918,918,918,918,918,918,918,,,918,918,,,,918,918,918,918',
',,,,,918,,,,,,,,918,918,,918,918,918,918,918,918,918,918,918,918,918',
'890,890,918,,890,,,,,,,,890,890,,890,890,890,890,890,890,890,,,890,890',
',,,890,890,890,890,,,,,,890,,,,,,,,890,890,,890,890,890,890,890,890',
'890,890,890,890,890,889,889,890,,889,,,,,,,,889,889,,889,889,889,889',
'889,889,889,,,889,889,,,,889,889,889,889,,,,,,889,,,,,,,,889,889,,889',
'889,889,889,889,889,889,889,889,889,889,410,410,889,,410,,,,,,,,410',
'410,,410,410,410,410,410,410,410,,,410,410,,,,410,410,410,410,,,,,,410',
',,,,,,,410,410,,410,410,410,410,410,410,410,410,410,410,410,411,411',
'410,,411,,,,,,,,411,411,,411,411,411,411,411,411,411,,,411,411,,,,411',
'411,411,411,,,,,,411,,,,,,,,411,411,,411,411,411,411,411,411,411,411',
'411,411,411,475,475,411,,475,,,,,,,,475,475,,475,475,475,475,475,475',
'475,,,475,475,,,,475,475,475,475,,,,,,475,,,,,,,,475,475,,475,475,475',
'475,475,475,475,475,475,475,475,486,486,475,,486,,,,,,,,486,486,,486',
'486,486,486,486,486,486,,,486,486,,,,486,486,486,486,,,,,,486,,,,,,',
',486,486,,486,486,486,486,486,486,486,486,486,486,486,487,487,486,,487',
',,,,,,,487,487,,487,487,487,487,487,487,487,,,487,487,,,,487,487,487',
'487,,,,,,487,,,,,,,,487,487,,487,487,487,487,487,487,487,487,487,487',
'487,199,199,487,,199,,,,,,,,199,199,,199,199,199,199,199,199,199,,,199',
'199,,,,199,199,199,199,,,,,,199,,,,,,,,199,199,,199,199,199,199,199',
'199,199,199,199,199,199,200,200,199,,200,,,,,,,,200,200,,200,200,200',
'200,200,200,200,,,200,200,,,,200,200,200,200,,,,,,200,,,,,,,,200,200',
',200,200,200,200,200,200,200,200,200,200,200,536,536,200,,536,,,,,,',
',536,536,,536,536,536,536,536,536,536,,,536,536,,,,536,536,536,536,',
',,,,536,,,,,,,,536,536,,536,536,536,536,536,536,536,536,536,536,536',
'537,537,536,,537,,,,,,,,537,537,,537,537,537,537,537,537,537,,,537,537',
',,,537,537,537,537,,,,,,537,,,,,,,,537,537,,537,537,537,537,537,537',
'537,537,537,537,537,543,543,537,,543,,,,,,,,543,543,,543,543,543,543',
'543,543,543,,,543,543,,,,543,543,543,543,,,,,,543,,,,,,,,543,543,,543',
'543,543,543,543,543,543,543,543,543,543,544,544,543,,544,,,,,,,,544',
'544,,544,544,544,544,544,544,544,,,544,544,,,,544,544,544,544,,,,,,544',
',,,,,,,544,544,,544,544,544,544,544,544,544,544,544,544,544,,,544,442',
'442,442,442,442,442,442,442,442,442,442,,442,442,,,442,442,,,,,,,,,',
',,,,,442,,442,,442,442,442,442,442,442,442,,442,,19,19,19,19,19,19,19',
'19,19,19,19,,19,19,442,442,19,19,,,,,,,,,,,,,,,19,,19,,19,19,19,19,19',
'19,19,,19,,638,638,638,638,638,638,638,638,638,638,638,,638,638,,19',
'638,638,,,,,,,,,,,,,,,638,,638,,638,638,638,638,638,638,638,,638,,725',
'725,725,725,725,725,725,725,725,725,725,,725,725,,638,725,725,,,,,,',
',,,,,,,,725,,725,,725,725,725,725,725,725,725,,725,,723,723,723,723',
'723,723,723,723,723,723,723,,723,723,,725,723,723,,,,,,,,,,,,,,,723',
',723,,723,723,723,723,723,723,723,,723,,403,403,403,403,403,403,403',
'403,403,403,403,,403,403,,723,403,403,,,,,,,,,,,,,,,403,,403,,403,403',
'403,403,403,403,403,,403,,719,719,719,719,719,719,719,719,719,719,719',
',719,719,,403,719,719,,,,,,,,,,,,,,,719,,719,,719,719,719,719,719,719',
'719,,719,,814,814,814,814,814,814,814,814,814,814,814,,814,814,,719',
'814,814,,,,,,,,,,,,,,,814,,814,,814,814,814,814,814,814,814,,814,,716',
'716,716,716,716,716,716,716,716,716,716,,716,716,,814,716,716,,,,,,',
',,,,,,,,716,,716,,716,716,716,716,716,716,716,,716,,247,247,247,247',
'247,247,247,247,247,247,247,,247,247,,716,247,247,,,,,,,,,,,,,,,247',
',247,,247,247,247,247,247,247,247,,247,,730,730,730,730,730,730,730',
'730,730,730,730,,730,730,,247,730,730,,,,,,,,,,,,,,,730,,730,,730,730',
'730,730,730,730,730,,730,,728,728,728,728,728,728,728,728,728,728,728',
',728,728,,730,728,728,,,,,,,,,,,,,,,728,,728,,728,728,728,728,728,728',
'728,,728,,,,,,,,,,,,,,,,,728' ]
        racc_action_check = arr = ::Array.new(23283, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  3744,  1101,   nil,    98,  1141, 16002, 21281, 21033,   933,   812,
   752,   736,   752,  1116,   398,    -2,   nil,   -70, 16877, 22695,
   708,   nil, 17252, 17377, 17502,   -26,   223, 20630, 20739,   nil,
  4744, 17752, 17877,   nil,   563,   478,   579,   445, 18385, 18510,
 18635,   492,   994,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1491,  1624, 19010, 19135, 19260,   -23,   nil, 19510, 19635,   nil,
   nil, 19760, 19893, 20018, 20143, 21529,   nil,   nil,   nil,   nil,
   nil,   212,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   603,   nil,   nil,   473,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   438,   nil,
 20393,   nil,   nil,   nil,  4869,  4994,  5119,  5244,  5369,  1223,
   nil,   445,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  1222,   nil,  3124,  3249,  5744,  5869,  5994,  6119, 22301,
 22361,  6244,  6369,  6494,  6619,  6744,   nil,   nil,   991,   -75,
  1181,    85,  1091,  1121,   nil,  7244,  2249,  1113,  7369,  7494,
  7619,  7744,  7869,  7994,  8119,  8244,  8369,  8494,  8619,  8744,
  8869,  8994,  9119,  9244,  9369,  9494,  9619,  9744,  9869,  9994,
 10119, 10244, 10369, 10494,   nil,   nil,   nil, 23063,   nil,  1020,
  1011,   nil, 10744,  1068, 10994,   nil,   nil,   nil,   nil, 11119,
   nil,   nil, 21761, 21701,  1123, 11619, 11744,   nil,   nil,   nil,
   nil,   nil,   nil,   nil, 11869,  1085,  4244,  1105,  1188,  1165,
 12369,   738,   869,   866,  1272,   743,  1260,   237,   228,   nil,
   363,   492,   402, 13502,   nil,   348,   472,   504,   644,   nil,
   528,   nil, 14252,   720,   796,    25,   nil,   379,   275,   781,
   764,   249,   869,   nil,   nil, 16515,   619,    34,    -7, 15377,
 15627,   483,  1053,   994,    61,   418,  1066,    71,  1048,   nil,
   nil,   288,   313,   182,   nil,   481,   nil,    28, 15877,   nil,
   nil,   146,   185,   256,   264,   289,   290,   323,   -54,   258,
   nil,   193,   nil, 15752,   nil,   271,   239,   338,   343,   -43,
   335,   nil,   683,   nil,   nil,   nil,   nil,   nil,   nil, 21405,
   nil,   nil,   nil,   nil,   945,   936,   nil,   nil,  1363,   nil,
 15502,   847,   nil,   845,   nil,   nil, 12369,   837,   nil,   389,
   506, 20521,   nil,   nil,   nil,   218,   868,   109,   nil,   nil,
  3611,  3502,   nil, 22879,   nil,   nil,   nil,    18,   nil,   859,
 22001, 22061, 15252,   136, 15127, 15002, 14877,  2124,  1999,   365,
   495,   795,   766,   765,   758,  3249,  1113,  3560,  2249,  2374,
  2499,  2624,  2749,  2874,  2999,  1238,  3124,  1624,  1418,  1213,
  1749,  1874, 22649,   -70,   nil, 14752,   nil, 14627,   nil, 14502,
   nil,   nil, 20848,   nil,   nil, 20903,   nil,   nil,   607,   nil,
   nil, 14377,   131,   175,   568,   nil,   565,   554,   nil,   nil,
   499, 14127,   456, 14002, 20901, 22121,   741,   483,   nil,   nil,
 13877,   433,   nil, 13752, 13627, 13377, 22181, 22241, 17877, 13252,
   465, 13127,   nil,   316,   nil, 13002,   nil,   nil, 12877,   nil,
   nil,   nil,    22, 13890,   188,   143,   139,   127,   nil,   nil,
   nil,   nil,   nil,   nil,   -38,   147,   nil,   607,   nil,   nil,
   nil,   nil,  1309,   nil,   nil,  1305,  1113,  1325,   nil,   988,
    38,    63,  1318,  1322, 12752, 12627, 22421, 22481,   -18,   nil,
   nil,   868,   nil, 22541, 22601, 12502,   nil,   nil, 12244,   528,
    77,  4494,  3466,   nil,   nil,   nil,    -5,   nil,   nil,   nil,
  1001,   nil,   nil,   nil,  1134,   nil,   nil,   144,   nil,   nil,
  1121,   nil,   nil, 21157,   nil,   nil, 12119,  1092, 11994, 11494,
   229,  1103, 11369, 11244,  1077,   nil,   nil, 10869,  1045,   nil,
 10619,   nil,   nil,   -76,   -83,   343,     0,  1043,  3374,  1057,
   nil,   437,   nil,  2374,  1077,   nil,  1125,  7119,   nil,   nil,
   nil,   nil,   nil,   nil,   167,   nil, 19760,   -72,  1095,   nil,
  1099,   nil,  1874,  1749,   nil,   174,  6994,  1117,   nil,  1124,
   116,   138,  1165,   221,   993,  1186,  1148,  6869, 22741,  1214,
  1215,   137,  1290,   nil,  1363,  1195,  1238,   nil,   nil,   nil,
   262,   nil,  4619,  4369,  1201,   475,   nil,  1455,   nil,  6882,
   nil,   nil,   789,  1299,  5619,   nil,   nil,   569,   nil,  1230,
   225,  1274,  -105,   nil,   nil,   623,   nil,    31,   nil,   nil,
   nil,   nil,   133,   nil,    10,    84,    41,    39,    68,    67,
  5494,   351,  1110,   nil,   282,  2749,  -106,   nil,   nil,   423,
  1238, 17140,   465, 21641,   nil,   nil,   nil,   nil,   nil,   nil,
   863,   nil,   nil,   nil,   nil,   nil, 23017,   367, 20268, 22925,
 19385,   nil,   nil, 22833,   nil, 22787,   nil,   nil, 23155,   nil,
 23109, 18885, 18760, 18260,   115, 18135,   509,   519,   536,   nil,
   559,   537,   -54,   nil,   679,   nil, 18010,   nil,  2499, 17627,
   nil,   nil,   572,   588,   693,   583,   312,   nil,   nil,   nil,
  3374,   nil,   nil,    12, 17127,   nil,   nil,   633,   737,   621,
   621,   nil,   nil,   nil,   623,   625,   nil,   nil,   635,   636,
   nil,   637,   nil,   nil,   648,   724,   669,   596,   nil,   810,
   nil, 17002,   813,  2999,  2874,   nil, 16752,  2124,    24,   121,
   nil,   828,   nil,  1999,   nil,   840,   724,   nil,   nil,   739,
   727,   nil, 20393, 16627, 22971, 17765,   nil, 19906,   nil,   nil,
  1039,   nil,   771, 16502,   nil,   761,   779,   770,   nil,   790,
   nil,   nil,   nil,   nil,  3869,  1235,  1363,   889,  1366,   nil,
   nil,   nil,   nil,  1099, 14140,   nil,   nil,  1135,   nil,   885,
   nil,   914,   nil,   nil,   nil,   466,   878,   846,   nil,    32,
   nil,   972,   977,   nil,    85,   nil,   nil,   987,   nil,   nil,
 13515,   nil,   871,   872,   875,   883,   nil,   886,   nil,  1409,
   969,   nil, 16377,   nil,   nil, 16252,   nil,  1049, 16127, 21941,
 21881,  1452,   nil,   945,   952,   959,   962,   970,   753,   971,
   849,  2624,   nil,   nil,   nil,   nil,   nil,  3994,   nil,  4119,
  7007,   nil,   nil,   663,   nil,   533,   nil,   nil, 21821,   nil,
   977,   nil,   985,   -11,    35,    41,  1458,   nil,   760,   nil,
   nil,   nil,   974,   997,   293,  1120,  1128,  1145,  1193,   258,
   476,   739,   841,   nil,     6,   818,   887,   nil,   nil,   nil,
   nil,  1010,   nil,   nil,   nil,   nil,   665,   nil ]

racc_action_default = [
    -4,  -545,    -1,  -531,    -5,  -545,  -545,  -545,  -545,  -545,
  -545,  -545,  -545,  -545,  -273,   -32,   -33,  -533,  -545,   -38,
   -40,   -41,  -283,  -318,  -319,   -45,  -248,  -248,  -248,   -58,
    -4,   -62,   -70,   -72,  -545,  -460,  -545,  -545,  -545,  -545,
  -545,  -533,  -225,  -266,  -267,  -268,  -269,  -270,  -271,  -272,
  -521,    -4,  -545,  -544,  -513,  -291,  -373,  -545,  -545,  -296,
  -299,  -531,  -545,  -545,  -545,  -545,  -320,  -321,  -409,  -410,
  -411,  -412,  -413,  -428,  -416,  -417,  -430,  -432,  -421,  -426,
  -442,  -430,  -444,  -445,  -519,  -449,  -450,  -520,  -452,  -453,
  -454,  -455,  -456,  -457,  -458,  -459,  -462,  -463,  -545,    -3,
  -532,  -540,  -541,  -542,  -545,  -545,  -545,  -545,  -545,    -7,
    -8,  -545,   -99,  -100,  -101,  -102,  -103,  -104,  -105,  -106,
  -107,  -111,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,
  -120,  -121,  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,   -13,  -108,    -4,    -4,  -545,  -545,  -545,  -234,  -545,
  -545,  -545,  -545,  -545,  -545,  -533,  -534,   -37,  -545,  -460,
  -545,  -273,  -545,  -545,  -217,  -545,    -4,  -545,  -545,  -545,
  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,
  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,
  -545,  -545,  -545,  -545,  -379,  -381,   -42,  -226,  -236,  -258,
  -258,  -241,  -545,  -259,  -545,  -283,  -318,  -319,  -515,  -545,
   -43,   -44,  -545,  -545,   -50,  -234,  -545,  -290,  -384,  -393,
  -395,   -56,  -390,   -57,  -533,   -60,    -4,  -533,  -545,   -63,
   -66,    -4,   -78,  -545,  -545,   -85,  -286,  -533,  -545,  -322,
  -391,  -545,   -68,  -545,   -74,  -280,  -446,  -447,  -545,  -202,
  -203,  -218,  -545,  -401,  -545,  -276,  -227,  -537,  -537,  -545,
  -545,  -537,  -545,  -292,  -293,  -483,   -39,  -545,  -545,  -545,
  -545,  -531,  -545,  -532,  -460,  -545,  -545,  -273,  -545,  -332,
  -333,   -94,   -95,  -545,   -97,  -545,  -273,  -545,  -545,  -460,
  -311,   -99,  -100,  -140,  -141,  -142,  -158,  -163,  -170,  -173,
  -313,  -545,  -511,  -545,  -414,  -545,  -545,  -545,  -545,  -545,
  -545,   958,    -6,  -543,   -14,   -15,   -16,   -17,   -18,  -545,
   -10,   -11,   -12,  -109,  -545,  -545,   -21,   -29,  -181,  -259,
  -545,  -545,   -22,   -30,   -31,   -23,  -183,  -533,  -235,  -522,
  -523,  -248,  -388,  -524,  -525,  -522,  -248,  -523,  -387,  -389,
  -524,  -525,   -28,  -191,   -34,   -35,   -36,  -533,  -289,  -545,
  -545,  -545,  -234,  -280,  -545,  -545,  -545,  -192,  -193,  -194,
  -195,  -196,  -197,  -198,  -199,  -204,  -205,  -206,  -207,  -208,
  -209,  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -219,  -220,
  -221,  -222,  -533,  -362,  -237,  -257,  -238,  -257,  -255,  -545,
  -260,  -518,  -248,  -522,  -523,  -248,   -48,   -51,  -533,  -249,
  -250,  -251,  -362,  -362,  -533,  -285,  -533,   -59,  -278,   -75,
   -64,  -545,  -533,  -234,  -545,  -545,   -84,  -545,  -446,  -447,
  -545,   -71,   -76,  -545,  -545,  -545,  -545,  -545,  -223,  -545,
  -544,  -544,  -275,  -533,  -228,  -539,  -538,  -230,  -539,  -281,
  -282,  -514,  -545,  -483,  -367,  -510,  -510,  -510,  -482,  -484,
  -485,  -486,  -487,  -488,  -489,  -545,  -492,  -545,  -494,  -500,
  -502,  -503,  -505,  -506,  -507,  -545,    -4,  -323,  -324,    -4,
  -545,  -545,  -545,  -545,  -545,  -234,  -545,  -545,  -280,  -304,
   -94,   -95,   -96,  -545,  -545,  -234,  -307,  -464,  -545,  -545,
  -545,    -4,  -483,  -315,  -529,  -530,  -533,  -415,  -429,  -434,
  -545,  -436,  -418,  -431,  -545,  -433,  -420,  -545,  -423,  -425,
  -545,  -443,    -9,  -545,   -19,   -20,  -545,  -265,  -545,  -545,
  -392,  -545,  -545,  -545,   -52,  -233,  -385,  -545,   -54,  -386,
  -545,  -288,  -535,  -522,  -523,  -522,  -523,  -533,  -181,  -545,
  -363,  -367,  -365,    -4,  -258,  -256,  -261,  -545,  -516,  -517,
   -46,  -382,   -47,  -383,  -362,  -231,   -38,  -545,  -258,  -247,
  -533,  -253,    -4,    -4,  -284,   -61,  -545,   -67,   -73,  -533,
  -522,  -523,  -232,   -81,   -83,  -545,   -69,  -545,  -190,  -200,
  -201,  -533,  -544,  -330,    -4,  -402,  -544,  -403,  -404,  -277,
  -537,  -374,    -4,    -4,  -367,  -545,  -376,  -545,  -475,  -545,
  -478,  -480,  -545,  -545,  -545,  -491,  -334,  -545,  -336,  -338,
  -345,  -489,  -533,  -504,  -508,  -544,  -325,  -544,  -297,  -326,
  -327,  -300,  -545,  -303,  -545,  -533,  -522,  -523,  -526,  -279,
  -545,   -94,   -95,   -98,  -533,    -4,  -545,  -466,  -309,  -545,
    -4,  -483,  -545,  -545,  -512,  -435,  -438,  -439,  -440,  -441,
    -4,  -419,  -422,  -424,  -427,  -110,  -182,  -263,  -545,  -184,
  -545,  -536,   -25,  -186,   -26,  -187,   -53,   -27,  -188,   -55,
  -189,  -545,  -545,  -545,  -392,  -545,  -510,  -510,  -510,  -361,
  -545,  -367,  -489,  -498,  -545,  -239,  -257,  -262,    -4,  -545,
  -244,  -252,  -533,  -545,  -545,   -65,   -79,   -77,  -287,    -2,
    -4,  -408,  -331,  -545,  -545,  -406,  -229,  -545,  -545,  -533,
  -368,  -369,  -371,  -372,  -510,  -510,  -495,  -509,  -510,  -510,
  -501,  -510,  -490,  -496,  -533,  -545,  -343,  -545,  -493,  -545,
  -328,  -545,  -545,    -4,    -4,  -302,  -545,    -4,  -392,  -545,
  -392,  -545,  -465,    -4,  -312,  -545,  -533,  -468,  -316,  -545,
  -264,   -24,  -185,  -545,  -224,  -352,  -354,  -545,  -357,  -359,
  -545,  -364,  -545,  -545,  -380,  -258,  -545,  -258,  -243,  -258,
  -254,  -394,  -396,  -407,    -4,   -86,  -545,  -545,   -93,  -405,
  -377,  -378,  -375,  -545,  -545,  -471,  -473,  -545,  -476,  -545,
  -479,  -545,  -481,  -335,  -337,  -341,  -545,  -346,  -294,  -545,
  -295,  -545,  -545,  -261,  -544,  -305,  -308,  -545,  -314,  -467,
  -483,  -437,  -510,  -510,  -510,  -510,  -499,  -510,  -366,  -497,
  -545,  -240,  -257,   -49,  -242,  -257,  -245,  -401,  -234,  -545,
  -545,   -92,  -370,  -510,  -510,  -510,  -510,  -339,  -545,  -344,
  -545,    -4,  -298,  -301,  -397,  -398,  -399,    -4,  -310,    -4,
  -545,  -349,  -351,  -545,  -355,  -545,  -358,  -360,  -545,  -280,
  -258,  -400,  -533,  -522,  -523,  -526,   -91,  -469,  -545,  -472,
  -474,  -477,  -545,  -342,  -544,  -545,  -545,  -510,  -510,  -510,
  -510,  -279,  -526,  -246,  -392,  -510,  -340,  -329,  -306,  -317,
  -347,  -545,  -350,  -353,  -356,  -470,  -510,  -348 ]

clist = [
'115,115,304,490,35,204,207,268,272,35,307,248,248,248,308,311,103,350',
'444,446,457,306,12,120,120,289,289,12,292,302,110,192,533,279,35,282',
'282,317,318,642,10,321,526,529,780,10,700,387,118,118,481,504,12,99',
'580,35,289,289,289,115,789,605,542,605,377,384,324,339,339,339,10,391',
'396,12,103,494,497,619,737,501,508,608,678,681,364,365,366,367,854,771',
'672,10,277,264,271,273,275,246,260,261,773,857,329,876,35,794,558,776',
'565,568,738,322,35,611,458,356,613,656,109,759,360,2,12,603,337,340',
'100,191,330,369,12,614,608,573,452,455,309,621,459,620,10,752,622,623',
'352,310,313,314,10,328,546,278,381,381,351,553,305,493,319,793,320,316',
'316,1,690,316,775,907,778,695,899,803,551,552,703,870,741,770,502,651',
'392,315,245,376,382,385,443,248,462,402,463,904,646,763,401,354,876',
'35,35,355,357,358,567,854,359,705,710,774,316,316,316,316,933,362,740',
'12,12,,,,35,368,,,,,792,14,627,780,,,14,10,10,,,636,12,654,784,,682',
',,,946,,,,,,,,248,248,10,14,285,285,,597,,248,734,776,,769,508,268,',
'272,693,,289,477,470,892,14,,35,,391,396,282,35,,289,773,327,336,336',
'872,,748,482,756,282,12,530,531,776,,12,,,404,405,406,407,,,,,374,375',
'10,508,713,947,,10,629,,873,,874,14,,,,,,,103,14,,278,466,,726,460,275',
'472,729,,632,275,,464,547,865,798,893,822,,,,632,,647,800,605,115,909',
'828,739,,,,,532,585,745,,581,,589,,,608,,,755,685,,120,750,,,,392,,572',
'694,,,278,,,,248,278,,,401,604,,632,797,,118,,905,,,632,,766,937,14',
'14,618,316,316,,,,,,599,,,585,,,585,806,,,,,550,14,,,,,381,,,,,,,392',
'650,556,584,648,,,248,588,,289,508,392,,401,,666,,482,289,282,,,,,,401',
'482,,282,,,,834,,,684,,,,,,,605,,,605,699,14,,,,285,14,,,,,,,,,392,',
'610,285,,612,,248,392,,,696,,35,401,,35,248,,,401,,,,,,679,679,,,,12',
',,12,,,,35,,,,,,,697,698,,305,10,115,,10,722,724,,12,906,727,,,,,,,',
',901,581,,921,,944,120,10,,641,881,,884,715,886,,,,,,,,,35,,,761,,,585',
'765,118,589,581,,,289,666,,,786,12,35,35,482,,282,289,,,,508,,,,757',
',282,,10,12,12,801,675,35,,677,805,316,,,808,35,35,,,,,10,10,,,12,,',
',799,,,581,12,12,,,,,,,581,,10,,,,,943,,,10,10,,,,115,285,35,,,,825',
'35,,827,285,811,802,829,,,,35,807,,12,,,,,12,,744,,,,,,,,12,,,10,,922',
',666,10,666,,753,754,,,,,,10,,35,14,867,,14,,289,,,632,,,35,762,,,835',
',12,859,,767,768,,,,14,408,,,12,,,,,709,10,,,,,,316,,,35,35,,10,35,',
',839,,,35,,897,666,,679,,,12,12,289,,12,,,,,,12,,339,,,14,809,,10,10',
'736,,10,35,658,660,661,,10,312,,920,,465,14,14,467,666,285,666,,12,',
',,936,,,,285,,,,,826,392,14,,,10,,,248,,14,14,833,,,401,,666,,,,,,,779',
',316,781,,,,,,13,,,35,,13,,,581,35,401,35,861,862,,,864,,208,,14,12',
'208,208,208,14,,12,,12,13,283,283,,,14,,,,10,,,,,,10,,10,,,,13,208,887',
',,,208,208,,,208,325,335,335,,,,,,,,,14,,,,,,591,,,,379,383,14,,,,838',
',,,,,,,,,,13,,,,208,208,208,208,13,,,,,,,,,,14,14,934,,14,,,,935,,14',
',615,,,,,,624,,625,,448,,450,,628,,,451,336,875,,,877,,,,,,,14,,,,,',
'649,,,816,818,819,,,,,,894,,,895,,896,,,,,,,,,,,,13,13,208,208,208,208',
',,208,208,208,208,208,845,846,,,848,850,,852,,,13,,,,,,,,,,14,,704,',
',,14,,14,,,,,,,,938,,,939,,940,,,,,,,,,,,,,945,,,,,208,208,,577,,,,',
',208,,13,,,,283,13,,956,,,,,,,,,751,283,,,,,,,,,,,911,912,914,916,,917',
',,,758,,,,,,208,208,,,,,927,929,930,931,,,,,606,,312,,609,208,,,,,,788',
',,,,617,,,,208,,,,,,,,,,,,,,,,950,952,953,954,,,,,955,,645,,,,606,,',
'312,,957,,,,,,,,26,,,,,26,,,,,,,,,,,208,,26,,,,26,26,26,,379,,830,,26',
',,,,,,,,,,,,,,842,,,,,,26,26,,,,,26,26,,853,26,,,,208,,,,,717,,,,,283',
',208,,,,,869,,283,,,,,,,,,208,,,,,,747,26,,,,26,26,26,26,26,,,,,,,,',
',,,,,,,,,,,,,13,,,13,,,,,,208,,,,,,,,,,208,,,208,,,13,783,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,208,208,,,,208,,26,26,26,26,26,26,,,26,26,26,26,26',
',13,,,810,,,,,,26,,,,,,,,,,13,13,,,283,,,,,,,,,,,283,,,,,,,13,,,,,,',
',13,13,,,,,,,,26,26,,,,,,,,26,,26,,,,,26,,,,,,,863,,,,,,208,,,,,13,',
',,,13,,,,,,,,,,13,,,,,26,26,,,,208,,,,,,,,,,,,,,26,,,,,,,,,,,,,,13,26',
',,,,,,,,,,13,,,,836,,,,,,863,,,606,,,,,,,,,,,,,,,,,,208,,13,13,,,13',
',,,,,13,,,,,26,,,,,,,,,,,,,,,879,,,,,,,,,,,13,,,,,,,,,,,,,,,,,,,,,,214',
'26,,,247,247,247,,,,,,,26,,,,,,,299,300,301,,,,,,,26,,,208,,,247,247',
',,,,,,,,13,,,,,,13,,13,,,,,,,,,,,,,26,,,26,,,,,,26,,,,,,,,,,26,,,26',
',,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,26,,,,26,,,,,,,,,,,,,,,,26,,,',
',,,,,,,,,,,,,,,26,26,,,,,,,,,,,,,,378,247,386,247,,,403,26,,,,,,,,26',
'26,,,,214,,,417,418,419,420,421,422,423,424,425,426,427,428,429,430',
'431,432,433,434,435,436,437,438,439,440,441,442,,,,,26,,,,247,26,247',
',,,26,247,,,,,,247,247,,26,,,,,,247,,,,26,,,,,,,,,,,,,,,,,,,,,,,,488',
',,,26,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,26,26,,,26,,,',
',,26,,,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,,247,,403',
'598,386,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,26,247,,247,,,,,,,,,,26,,616',
',,,26,,26,,,,,,247,,,,,,,,,,638,639,640,,,,,,247,,,,247,,,247,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,247,,,,,,,,,,247,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,716,,247,719,,,723,725,,,,728,,,730,,,,,,,,,,,,,,,,,247',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,812,,,,,,,,,,,723',
'725,728,,814,,,,,,,,,,,247,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,247,,,,,,,,,,,,,,,,,812,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,,247,,,247' ]
        racc_goto_table = arr = ::Array.new(2629, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'49,49,3,4,45,26,15,61,61,45,58,28,28,28,60,60,87,48,63,63,34,57,17,53',
'53,55,55,17,43,26,11,11,84,42,45,45,45,13,13,5,14,13,81,81,145,14,88',
'19,52,52,44,122,17,8,20,45,55,55,55,49,82,64,46,64,22,22,45,45,45,45',
'14,32,32,17,87,59,59,64,110,59,113,149,83,83,13,13,13,13,104,117,106',
'14,39,33,33,33,38,30,30,30,118,107,14,146,45,95,139,144,139,139,111',
'8,45,62,19,135,62,115,9,6,135,2,17,35,47,47,10,12,16,25,17,36,149,54',
'32,32,56,65,66,68,14,69,35,35,76,77,78,80,14,85,86,2,58,58,89,90,24',
'91,92,93,94,24,24,1,96,24,111,97,111,98,107,99,100,101,102,103,108,116',
'119,120,61,121,123,15,15,15,124,28,126,15,127,128,129,130,49,133,146',
'45,45,134,136,137,138,104,140,141,142,143,24,24,24,24,107,9,115,17,17',
',,,45,9,,,,,5,21,44,145,,,21,14,14,,,44,17,122,106,,84,,,,107,,,,,,',
',28,28,14,21,21,21,,19,,28,20,144,,115,113,61,,61,46,,55,26,43,117,21',
',45,,32,32,45,45,,55,118,21,21,21,110,,35,42,20,45,17,13,13,144,,17',
',,24,24,24,24,,,,,2,2,14,113,139,82,,14,19,,111,,111,21,,,,,,,87,21',
',2,39,,34,30,38,39,34,,32,38,,30,87,83,20,111,115,,,,32,,22,20,64,49',
'88,64,113,,,,,8,61,63,,26,,61,,,149,,,44,19,,53,63,,,,61,,11,19,,,2',
',,,28,2,,,49,60,,32,81,,52,,5,,,32,,59,111,21,21,60,24,24,,,,,,26,,',
'61,,,61,122,,,,,24,21,,,,,58,,,,,,,61,60,24,33,57,,,28,33,,55,113,61',
',49,,105,,42,55,45,,,,,,49,42,,45,,,,81,,,58,,,,,,,64,,,64,3,21,,,,21',
'21,,,,,,,,,61,,33,21,,33,,28,61,,,13,,45,49,,45,28,,,49,,,,,,87,87,',
',,17,,,17,,,,45,,,,,,,87,87,,24,14,49,,14,15,15,,17,84,15,,,,,,,,,81',
'26,,4,,20,53,14,,24,63,,63,11,63,,,,,,,,,45,,,57,,,61,57,52,61,26,,',
'55,105,,,105,17,45,45,42,,45,55,,,,113,,,,42,,45,,14,17,17,3,2,45,,2',
'3,24,,,48,45,45,,,,,14,14,,,17,,,,13,,,26,17,17,,,,,,,26,,14,,,,,63',
',,14,14,,,,49,21,45,,,,58,45,,58,21,15,87,60,,,,45,87,,17,,,,,17,,2',
',,,,,,,17,,,14,,19,,105,14,105,,2,2,,,,,,14,,45,21,3,,21,,55,,,32,,',
'45,2,,,45,,17,13,,2,2,,,,21,40,,,17,,,,,21,14,,,,,,24,,,45,45,,14,45',
',,14,,,45,,105,105,,87,,,17,17,55,,17,,,,,,17,,45,,,21,2,,14,14,109',
',14,45,112,112,112,,14,23,,60,,40,21,21,40,105,21,105,,17,,,,3,,,,21',
',,,,2,61,21,,,14,,,28,,21,21,2,,,49,,105,,,,,,,109,,24,109,,,,,,18,',
',45,,18,,,26,45,49,45,2,2,,,2,,18,,21,17,18,18,18,21,,17,,17,18,18,18',
',,21,,,,14,,,,,,14,,14,,,,18,18,2,,,,18,18,,,18,18,18,18,,,,,,,,,21',
',,,,,40,,,,23,23,21,,,,21,,,,,,,,,,,18,,,,18,18,18,18,18,,,,,,,,,,21',
'21,2,,21,,,,2,,21,,40,,,,,,40,,40,,23,,23,,40,,,23,21,109,,,109,,,,',
',,21,,,,,,40,,,112,112,112,,,,,,109,,,109,,109,,,,,,,,,,,,18,18,18,18',
'18,18,,,18,18,18,18,18,112,112,,,112,112,,112,,,18,,,,,,,,,,21,,40,',
',,21,,21,,,,,,,,109,,,109,,109,,,,,,,,,,,,,109,,,,,18,18,,23,,,,,,18',
',18,,,,18,18,,109,,,,,,,,,40,18,,,,,,,,,,,112,112,112,112,,112,,,,40',
',,,,,18,18,,,,,112,112,112,112,,,,,23,,23,,23,18,,,,,,40,,,,,23,,,,18',
',,,,,,,,,,,,,,,112,112,112,112,,,,,112,,23,,,,23,,,23,,112,,,,,,,,37',
',,,,37,,,,,,,,,,,18,,37,,,,37,37,37,,23,,40,,37,,,,,,,,,,,,,,,40,,,',
',,37,37,,,,,37,37,,40,37,,,,18,,,,,23,,,,,18,,18,,,,,40,,18,,,,,,,,',
'18,,,,,,23,37,,,,37,37,37,37,37,,,,,,,,,,,,,,,,,,,,,,18,,,18,,,,,,18',
',,,,,,,,,18,,,18,,,18,23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18,18,,,,18,,37',
'37,37,37,37,37,,,37,37,37,37,37,,18,,,23,,,,,,37,,,,,,,,,,18,18,,,18',
',,,,,,,,,,18,,,,,,,18,,,,,,,,18,18,,,,,,,,37,37,,,,,,,,37,,37,,,,,37',
',,,,,,23,,,,,,18,,,,,18,,,,,18,,,,,,,,,,18,,,,,37,37,,,,18,,,,,,,,,',
',,,,37,,,,,,,,,,,,,,18,37,,,,,,,,,,,18,,,,18,,,,,,23,,,23,,,,,,,,,,',
',,,,,,,18,,18,18,,,18,,,,,,18,,,,,37,,,,,,,,,,,,,,,18,,,,,,,,,,,18,',
',,,,,,,,,,,,,,,,,,,,27,37,,,27,27,27,,,,,,,37,,,,,,,27,27,27,,,,,,,37',
',,18,,,27,27,,,,,,,,,18,,,,,,18,,18,,,,,,,,,,,,,37,,,37,,,,,,37,,,,',
',,,,,37,,,37,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,37,,,,37,,,,,,,,',
',,,,,,,37,,,,,,,,,,,,,,,,,,,37,37,,,,,,,,,,,,,,27,27,27,27,,,27,37,',
',,,,,,37,37,,,,27,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27',
'27,27,27,27,27,27,27,27,27,27,,,,,37,,,,27,37,27,,,,37,27,,,,,,27,27',
',37,,,,,,27,,,,37,,,,,,,,,,,,,,,,,,,,,,,,27,,,,37,,,,,,,,,,,,37,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,37,,37,37,,,37,,,,,,37,,,,,,,,,,,,,,,,,,,27',
',,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,27,,27,27,27,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,27,37,27,,27,,,,,,,,,,37,,27,,,,37,,37,,,,,,27,,,,,,,,,,27,27',
'27,,,,,,27,,,,27,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,27,,,,,',
',,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,,27,27,,,27,27,,,,27,,,27,,',
',,,,,,,,,,,,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,,27',
',,,,,,,,,,27,27,27,,27,,,,,,,,,,,27,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,27,,,,,,,,,,,,,,,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,,,27,,,27' ]
        racc_goto_check = arr = ::Array.new(2629, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   163,   121,   -49,  -300,  -451,  -523,   nil,    50,   113,
   123,    24,   120,   -20,    40,   -12,    66,    22,   902,  -151,
  -333,   227,  -131,   790,   104,    19,   -12,  1740,   -11,   nil,
    75,   nil,  -128,    67,  -244,  -320,  -325,  1298,    66,    62,
   574,   nil,     2,    -4,  -243,     4,  -271,    61,   -48,    -6,
   nil,   nil,    42,    17,  -240,    -6,    83,   -32,   -43,  -232,
   -39,   -19,  -339,  -231,  -384,  -324,  -128,   nil,  -322,  -480,
   nil,   nil,   nil,   nil,   nil,   nil,    79,    91,    91,   nil,
    91,  -275,  -615,  -448,  -290,    87,  -187,    13,  -506,    89,
  -196,  -148,    99,  -519,   100,  -576,  -375,  -698,  -377,  -527,
  -168,  -177,  -379,  -633,  -697,   -46,  -427,  -686,  -425,   234,
  -523,  -491,   334,  -235,   nil,  -387,  -478,  -566,  -555,  -137,
  -323,   125,  -264,   162,   -58,   nil,   -81,   -80,  -673,  -299,
  -453,   nil,   nil,   124,   126,    39,   123,   123,  -156,  -249,
   125,  -355,  -355,  -450,  -550,  -615,  -714,   nil,   nil,  -366 ]

racc_goto_default = [
   nil,   nil,   303,   nil,   nil,   790,   nil,     3,   nil,     4,
   323,   nil,   nil,   nil,   212,    16,    11,   213,   298,   nil,
   nil,   211,   nil,   253,    15,   nil,   409,    19,    20,    21,
   388,    25,   635,   nil,   nil,   nil,   nil,   288,    29,   nil,
   nil,    31,    34,    33,   nil,   209,   334,   nil,   117,   394,
   116,   119,    69,    70,   nil,    42,   nil,   643,   249,   nil,
   250,   399,   586,   nil,   251,   nil,   nil,   266,   nil,   nil,
    43,    44,    45,    46,    47,    48,    49,   nil,   267,    55,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   527,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   668,   516,   nil,   669,   nil,   505,
   nil,   507,   nil,   777,   600,   nil,   nil,   nil,   513,   nil,
   nil,   nil,   702,   nil,   nil,   398,   nil,   nil,   nil,   nil,
   nil,    68,    71,    72,   nil,   nil,   nil,   nil,   nil,   563,
   nil,   nil,   nil,   506,   518,   519,   743,   522,   525,   258 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_none,
  4, 140, :_reduce_2,
  2, 139, :_reduce_3,
  0, 144, :_reduce_4,
  1, 144, :_reduce_5,
  3, 144, :_reduce_6,
  2, 144, :_reduce_7,
  0, 162, :_reduce_8,
  4, 146, :_reduce_9,
  3, 146, :_reduce_10,
  3, 146, :_reduce_11,
  3, 146, :_reduce_12,
  2, 146, :_reduce_13,
  3, 146, :_reduce_14,
  3, 146, :_reduce_15,
  3, 146, :_reduce_16,
  3, 146, :_reduce_17,
  3, 146, :_reduce_18,
  4, 146, :_reduce_19,
  4, 146, :_reduce_20,
  3, 146, :_reduce_21,
  3, 146, :_reduce_22,
  3, 146, :_reduce_23,
  6, 146, :_reduce_24,
  5, 146, :_reduce_25,
  5, 146, :_reduce_26,
  5, 146, :_reduce_27,
  3, 146, :_reduce_28,
  3, 146, :_reduce_29,
  3, 146, :_reduce_30,
  3, 146, :_reduce_31,
  1, 146, :_reduce_none,
  1, 161, :_reduce_none,
  3, 161, :_reduce_34,
  3, 161, :_reduce_35,
  3, 161, :_reduce_36,
  2, 161, :_reduce_37,
  1, 161, :_reduce_none,
  1, 150, :_reduce_none,
  1, 152, :_reduce_none,
  1, 152, :_reduce_none,
  2, 152, :_reduce_42,
  2, 152, :_reduce_43,
  2, 152, :_reduce_44,
  1, 166, :_reduce_none,
  4, 166, :_reduce_46,
  4, 166, :_reduce_47,
  0, 173, :_reduce_48,
  5, 171, :_reduce_49,
  2, 165, :_reduce_50,
  3, 165, :_reduce_51,
  4, 165, :_reduce_52,
  5, 165, :_reduce_53,
  4, 165, :_reduce_54,
  5, 165, :_reduce_55,
  2, 165, :_reduce_56,
  2, 165, :_reduce_57,
  1, 153, :_reduce_58,
  3, 153, :_reduce_59,
  1, 176, :_reduce_60,
  3, 176, :_reduce_61,
  1, 175, :_reduce_none,
  2, 175, :_reduce_63,
  3, 175, :_reduce_64,
  5, 175, :_reduce_65,
  2, 175, :_reduce_66,
  4, 175, :_reduce_67,
  2, 175, :_reduce_68,
  4, 175, :_reduce_69,
  1, 175, :_reduce_70,
  3, 175, :_reduce_71,
  1, 179, :_reduce_none,
  3, 179, :_reduce_73,
  2, 178, :_reduce_74,
  3, 178, :_reduce_75,
  1, 181, :_reduce_76,
  3, 181, :_reduce_77,
  1, 180, :_reduce_78,
  4, 180, :_reduce_79,
  3, 180, :_reduce_80,
  3, 180, :_reduce_81,
  3, 180, :_reduce_82,
  3, 180, :_reduce_83,
  2, 180, :_reduce_84,
  1, 180, :_reduce_85,
  1, 151, :_reduce_86,
  4, 151, :_reduce_87,
  3, 151, :_reduce_88,
  3, 151, :_reduce_89,
  3, 151, :_reduce_90,
  3, 151, :_reduce_91,
  2, 151, :_reduce_92,
  1, 151, :_reduce_93,
  1, 183, :_reduce_94,
  1, 183, :_reduce_none,
  2, 184, :_reduce_96,
  1, 184, :_reduce_97,
  3, 184, :_reduce_98,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 188, :_reduce_104,
  1, 188, :_reduce_none,
  1, 148, :_reduce_none,
  1, 148, :_reduce_none,
  1, 149, :_reduce_108,
  0, 191, :_reduce_109,
  4, 149, :_reduce_110,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  3, 164, :_reduce_181,
  5, 164, :_reduce_182,
  3, 164, :_reduce_183,
  5, 164, :_reduce_184,
  6, 164, :_reduce_185,
  5, 164, :_reduce_186,
  5, 164, :_reduce_187,
  5, 164, :_reduce_188,
  5, 164, :_reduce_189,
  4, 164, :_reduce_190,
  3, 164, :_reduce_191,
  3, 164, :_reduce_192,
  3, 164, :_reduce_193,
  3, 164, :_reduce_194,
  3, 164, :_reduce_195,
  3, 164, :_reduce_196,
  3, 164, :_reduce_197,
  3, 164, :_reduce_198,
  3, 164, :_reduce_199,
  4, 164, :_reduce_200,
  4, 164, :_reduce_201,
  2, 164, :_reduce_202,
  2, 164, :_reduce_203,
  3, 164, :_reduce_204,
  3, 164, :_reduce_205,
  3, 164, :_reduce_206,
  3, 164, :_reduce_207,
  3, 164, :_reduce_208,
  3, 164, :_reduce_209,
  3, 164, :_reduce_210,
  3, 164, :_reduce_211,
  3, 164, :_reduce_212,
  3, 164, :_reduce_213,
  3, 164, :_reduce_214,
  3, 164, :_reduce_215,
  3, 164, :_reduce_216,
  2, 164, :_reduce_217,
  2, 164, :_reduce_218,
  3, 164, :_reduce_219,
  3, 164, :_reduce_220,
  3, 164, :_reduce_221,
  3, 164, :_reduce_222,
  3, 164, :_reduce_223,
  6, 164, :_reduce_224,
  1, 164, :_reduce_none,
  1, 160, :_reduce_none,
  1, 193, :_reduce_none,
  2, 193, :_reduce_none,
  4, 193, :_reduce_229,
  2, 193, :_reduce_230,
  3, 198, :_reduce_231,
  0, 199, :_reduce_232,
  1, 199, :_reduce_none,
  0, 156, :_reduce_234,
  1, 156, :_reduce_none,
  1, 167, :_reduce_236,
  2, 167, :_reduce_237,
  2, 167, :_reduce_238,
  4, 167, :_reduce_239,
  6, 167, :_reduce_240,
  1, 167, :_reduce_241,
  4, 202, :_reduce_242,
  3, 202, :_reduce_243,
  2, 202, :_reduce_244,
  4, 202, :_reduce_245,
  6, 202, :_reduce_246,
  1, 202, :_reduce_247,
  0, 204, :_reduce_248,
  2, 170, :_reduce_249,
  1, 203, :_reduce_250,
  0, 205, :_reduce_251,
  3, 203, :_reduce_252,
  0, 206, :_reduce_253,
  4, 203, :_reduce_254,
  2, 201, :_reduce_255,
  2, 200, :_reduce_256,
  1, 200, :_reduce_257,
  0, 200, :_reduce_258,
  1, 195, :_reduce_259,
  2, 195, :_reduce_260,
  3, 195, :_reduce_261,
  4, 195, :_reduce_262,
  3, 159, :_reduce_263,
  4, 159, :_reduce_264,
  2, 159, :_reduce_265,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_274,
  3, 192, :_reduce_275,
  0, 228, :_reduce_276,
  4, 192, :_reduce_277,
  3, 192, :_reduce_278,
  3, 192, :_reduce_279,
  2, 192, :_reduce_280,
  3, 192, :_reduce_281,
  3, 192, :_reduce_282,
  1, 192, :_reduce_283,
  4, 192, :_reduce_284,
  3, 192, :_reduce_285,
  1, 192, :_reduce_286,
  5, 192, :_reduce_287,
  4, 192, :_reduce_288,
  3, 192, :_reduce_289,
  2, 192, :_reduce_290,
  1, 192, :_reduce_none,
  2, 192, :_reduce_292,
  2, 192, :_reduce_293,
  6, 192, :_reduce_294,
  6, 192, :_reduce_295,
  0, 229, :_reduce_296,
  0, 230, :_reduce_297,
  7, 192, :_reduce_298,
  0, 231, :_reduce_299,
  0, 232, :_reduce_300,
  7, 192, :_reduce_301,
  5, 192, :_reduce_302,
  4, 192, :_reduce_303,
  0, 233, :_reduce_304,
  0, 234, :_reduce_305,
  9, 192, :_reduce_306,
  0, 235, :_reduce_307,
  6, 192, :_reduce_308,
  0, 236, :_reduce_309,
  7, 192, :_reduce_310,
  0, 237, :_reduce_311,
  5, 192, :_reduce_312,
  0, 238, :_reduce_313,
  6, 192, :_reduce_314,
  0, 239, :_reduce_315,
  0, 240, :_reduce_316,
  9, 192, :_reduce_317,
  1, 192, :_reduce_318,
  1, 192, :_reduce_319,
  1, 192, :_reduce_320,
  1, 192, :_reduce_321,
  1, 155, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  2, 218, :_reduce_325,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 219, :_reduce_none,
  5, 219, :_reduce_329,
  1, 142, :_reduce_none,
  2, 142, :_reduce_331,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 241, :_reduce_none,
  3, 241, :_reduce_335,
  1, 244, :_reduce_336,
  3, 244, :_reduce_337,
  1, 243, :_reduce_none,
  4, 243, :_reduce_339,
  6, 243, :_reduce_340,
  3, 243, :_reduce_341,
  5, 243, :_reduce_342,
  2, 243, :_reduce_343,
  4, 243, :_reduce_344,
  1, 243, :_reduce_345,
  3, 243, :_reduce_346,
  6, 245, :_reduce_347,
  8, 245, :_reduce_348,
  4, 245, :_reduce_349,
  6, 245, :_reduce_350,
  4, 245, :_reduce_351,
  2, 245, :_reduce_none,
  6, 245, :_reduce_353,
  2, 245, :_reduce_354,
  4, 245, :_reduce_355,
  6, 245, :_reduce_356,
  2, 245, :_reduce_357,
  4, 245, :_reduce_358,
  2, 245, :_reduce_359,
  4, 245, :_reduce_360,
  1, 245, :_reduce_361,
  0, 172, :_reduce_362,
  1, 172, :_reduce_363,
  3, 251, :_reduce_364,
  1, 251, :_reduce_365,
  4, 251, :_reduce_366,
  0, 252, :_reduce_367,
  2, 252, :_reduce_368,
  1, 253, :_reduce_369,
  3, 253, :_reduce_370,
  1, 254, :_reduce_371,
  1, 254, :_reduce_none,
  0, 258, :_reduce_373,
  3, 217, :_reduce_374,
  4, 256, :_reduce_375,
  2, 256, :_reduce_376,
  3, 257, :_reduce_377,
  3, 257, :_reduce_378,
  0, 261, :_reduce_379,
  5, 260, :_reduce_380,
  2, 168, :_reduce_381,
  4, 168, :_reduce_382,
  4, 168, :_reduce_383,
  2, 216, :_reduce_384,
  4, 216, :_reduce_385,
  4, 216, :_reduce_386,
  3, 216, :_reduce_387,
  3, 216, :_reduce_388,
  3, 216, :_reduce_389,
  2, 216, :_reduce_390,
  1, 216, :_reduce_391,
  4, 216, :_reduce_392,
  0, 263, :_reduce_393,
  5, 215, :_reduce_394,
  0, 264, :_reduce_395,
  5, 215, :_reduce_396,
  5, 221, :_reduce_397,
  1, 265, :_reduce_398,
  1, 265, :_reduce_none,
  6, 141, :_reduce_400,
  0, 141, :_reduce_401,
  1, 266, :_reduce_402,
  1, 266, :_reduce_none,
  1, 266, :_reduce_none,
  2, 267, :_reduce_405,
  1, 267, :_reduce_none,
  2, 143, :_reduce_407,
  1, 143, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 208, :_reduce_412,
  1, 269, :_reduce_413,
  2, 269, :_reduce_414,
  3, 270, :_reduce_415,
  1, 270, :_reduce_416,
  1, 270, :_reduce_417,
  3, 209, :_reduce_418,
  4, 210, :_reduce_419,
  3, 211, :_reduce_420,
  0, 274, :_reduce_421,
  3, 274, :_reduce_422,
  1, 275, :_reduce_423,
  2, 275, :_reduce_424,
  3, 212, :_reduce_425,
  0, 277, :_reduce_426,
  3, 277, :_reduce_427,
  0, 271, :_reduce_428,
  2, 271, :_reduce_429,
  0, 272, :_reduce_430,
  2, 272, :_reduce_431,
  0, 273, :_reduce_432,
  2, 273, :_reduce_433,
  1, 276, :_reduce_434,
  2, 276, :_reduce_435,
  0, 279, :_reduce_436,
  4, 276, :_reduce_437,
  1, 278, :_reduce_438,
  1, 278, :_reduce_439,
  1, 278, :_reduce_440,
  1, 278, :_reduce_none,
  1, 189, :_reduce_442,
  3, 190, :_reduce_443,
  1, 268, :_reduce_444,
  1, 268, :_reduce_445,
  2, 268, :_reduce_446,
  2, 268, :_reduce_447,
  1, 182, :_reduce_448,
  1, 182, :_reduce_449,
  1, 182, :_reduce_450,
  1, 182, :_reduce_451,
  1, 182, :_reduce_452,
  1, 182, :_reduce_453,
  1, 182, :_reduce_454,
  1, 182, :_reduce_455,
  1, 182, :_reduce_456,
  1, 182, :_reduce_457,
  1, 182, :_reduce_458,
  1, 182, :_reduce_459,
  1, 213, :_reduce_460,
  1, 154, :_reduce_461,
  1, 158, :_reduce_462,
  1, 158, :_reduce_463,
  1, 223, :_reduce_464,
  3, 223, :_reduce_465,
  2, 223, :_reduce_466,
  3, 225, :_reduce_467,
  2, 225, :_reduce_468,
  6, 259, :_reduce_469,
  8, 259, :_reduce_470,
  4, 259, :_reduce_471,
  6, 259, :_reduce_472,
  4, 259, :_reduce_473,
  6, 259, :_reduce_474,
  2, 259, :_reduce_475,
  4, 259, :_reduce_476,
  6, 259, :_reduce_477,
  2, 259, :_reduce_478,
  4, 259, :_reduce_479,
  2, 259, :_reduce_480,
  4, 259, :_reduce_481,
  1, 259, :_reduce_482,
  0, 259, :_reduce_483,
  1, 255, :_reduce_484,
  1, 255, :_reduce_485,
  1, 255, :_reduce_486,
  1, 255, :_reduce_487,
  1, 242, :_reduce_none,
  1, 242, :_reduce_489,
  3, 242, :_reduce_490,
  2, 242, :_reduce_491,
  1, 281, :_reduce_none,
  3, 281, :_reduce_493,
  1, 246, :_reduce_494,
  3, 246, :_reduce_495,
  3, 282, :_reduce_496,
  3, 283, :_reduce_497,
  1, 247, :_reduce_498,
  3, 247, :_reduce_499,
  1, 280, :_reduce_500,
  3, 280, :_reduce_501,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  2, 248, :_reduce_504,
  1, 248, :_reduce_505,
  1, 285, :_reduce_none,
  1, 285, :_reduce_none,
  2, 250, :_reduce_508,
  2, 249, :_reduce_509,
  0, 249, :_reduce_510,
  1, 226, :_reduce_none,
  3, 226, :_reduce_512,
  0, 214, :_reduce_513,
  2, 214, :_reduce_none,
  1, 197, :_reduce_515,
  3, 197, :_reduce_516,
  3, 286, :_reduce_517,
  2, 286, :_reduce_518,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  1, 227, :_reduce_none,
  1, 227, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 163, :_reduce_none,
  1, 163, :_reduce_none,
  2, 177, :_reduce_535,
  2, 157, :_reduce_536,
  0, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 224, :_reduce_540,
  1, 224, :_reduce_none,
  1, 147, :_reduce_none,
  2, 147, :_reduce_none,
  0, 194, :_reduce_544 ]

racc_reduce_n = 545

racc_shift_n = 958

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tREGEXP_OPT => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tCHARACTER => 134,
  :tEQL => 135,
  :tLOWEST => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "compstmt",
  "bodystmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "opt_terms",
  "stmt",
  "terms",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "@2",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "primary",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@4",
  "@5",
  "@6",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@20",
  "f_args",
  "do_block",
  "@21",
  "operation3",
  "@22",
  "@23",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'rubymotion.y', 51)
  def _reduce_2(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 67)
  def _reduce_3(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 72)
  def _reduce_4(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 76)
  def _reduce_5(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 80)
  def _reduce_6(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 84)
  def _reduce_7(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 89)
  def _reduce_8(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 93)
  def _reduce_9(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 97)
  def _reduce_10(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 103)
  def _reduce_11(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 109)
  def _reduce_12(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 113)
  def _reduce_13(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 117)
  def _reduce_14(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 122)
  def _reduce_15(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 127)
  def _reduce_16(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 131)
  def _reduce_17(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 135)
  def _reduce_18(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 143)
  def _reduce_19(val, _values, result)
                          if in_def?
                        diagnostic :error, :begin_in_method, nil, val[0]
                      end

                      result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 151)
  def _reduce_20(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 155)
  def _reduce_21(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 159)
  def _reduce_22(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 163)
  def _reduce_23(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 167)
  def _reduce_24(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 174)
  def _reduce_25(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 181)
  def _reduce_26(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 188)
  def _reduce_27(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 195)
  def _reduce_28(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 199)
  def _reduce_29(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 204)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 208)
  def _reduce_31(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'rubymotion.y', 216)
  def _reduce_34(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 220)
  def _reduce_35(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 224)
  def _reduce_36(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 228)
  def _reduce_37(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

module_eval(<<'.,.,', 'rubymotion.y', 238)
  def _reduce_42(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 243)
  def _reduce_43(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 248)
  def _reduce_44(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'rubymotion.y', 255)
  def _reduce_46(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  *val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 260)
  def _reduce_47(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  *val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 266)
  def _reduce_48(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 270)
  def _reduce_49(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 277)
  def _reduce_50(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  *val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 282)
  def _reduce_51(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        *val[1])

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 291)
  def _reduce_52(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  *val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 296)
  def _reduce_53(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        *val[3])

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 305)
  def _reduce_54(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  *val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 310)
  def _reduce_55(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        *val[3])

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 319)
  def _reduce_56(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  *val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 324)
  def _reduce_57(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  *val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 330)
  def _reduce_58(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 334)
  def _reduce_59(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 339)
  def _reduce_60(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 343)
  def _reduce_61(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'rubymotion.y', 349)
  def _reduce_63(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 354)
  def _reduce_64(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 359)
  def _reduce_65(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 365)
  def _reduce_66(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 370)
  def _reduce_67(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 376)
  def _reduce_68(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 380)
  def _reduce_69(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 385)
  def _reduce_70(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 389)
  def _reduce_71(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'rubymotion.y', 396)
  def _reduce_73(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 401)
  def _reduce_74(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 405)
  def _reduce_75(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 410)
  def _reduce_76(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 414)
  def _reduce_77(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 419)
  def _reduce_78(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 423)
  def _reduce_79(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 427)
  def _reduce_80(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 431)
  def _reduce_81(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 435)
  def _reduce_82(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 439)
  def _reduce_83(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 444)
  def _reduce_84(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 449)
  def _reduce_85(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 454)
  def _reduce_86(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 458)
  def _reduce_87(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 462)
  def _reduce_88(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 466)
  def _reduce_89(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 470)
  def _reduce_90(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 474)
  def _reduce_91(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 479)
  def _reduce_92(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 484)
  def _reduce_93(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 489)
  def _reduce_94(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 95 omitted

module_eval(<<'.,.,', 'rubymotion.y', 495)
  def _reduce_96(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 499)
  def _reduce_97(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 503)
  def _reduce_98(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

module_eval(<<'.,.,', 'rubymotion.y', 512)
  def _reduce_104(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

module_eval(<<'.,.,', 'rubymotion.y', 521)
  def _reduce_108(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 525)
  def _reduce_109(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 529)
  def _reduce_110(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

module_eval(<<'.,.,', 'rubymotion.y', 550)
  def _reduce_181(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 554)
  def _reduce_182(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 564)
  def _reduce_183(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 568)
  def _reduce_184(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 578)
  def _reduce_185(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 585)
  def _reduce_186(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 592)
  def _reduce_187(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 599)
  def _reduce_188(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 606)
  def _reduce_189(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[2], [ val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 610)
  def _reduce_190(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[1], [ val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 614)
  def _reduce_191(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 618)
  def _reduce_192(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 622)
  def _reduce_193(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 626)
  def _reduce_194(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 630)
  def _reduce_195(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 634)
  def _reduce_196(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 638)
  def _reduce_197(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 642)
  def _reduce_198(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 646)
  def _reduce_199(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 650)
  def _reduce_200(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.integer(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 657)
  def _reduce_201(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.float(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 664)
  def _reduce_202(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 668)
  def _reduce_203(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 672)
  def _reduce_204(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 676)
  def _reduce_205(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 680)
  def _reduce_206(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 684)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 688)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 692)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 696)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 700)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 704)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 708)
  def _reduce_213(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 712)
  def _reduce_214(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 716)
  def _reduce_215(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 720)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 724)
  def _reduce_217(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 728)
  def _reduce_218(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 732)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 736)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 740)
  def _reduce_221(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 744)
  def _reduce_222(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 748)
  def _reduce_223(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 753)
  def _reduce_224(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 225 omitted

# reduce 226 omitted

# reduce 227 omitted

# reduce 228 omitted

module_eval(<<'.,.,', 'rubymotion.y', 764)
  def _reduce_229(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 768)
  def _reduce_230(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 773)
  def _reduce_231(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 778)
  def _reduce_232(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 233 omitted

module_eval(<<'.,.,', 'rubymotion.y', 784)
  def _reduce_234(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 235 omitted

module_eval(<<'.,.,', 'rubymotion.y', 790)
  def _reduce_236(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 794)
  def _reduce_237(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 798)
  def _reduce_238(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 803)
  def _reduce_239(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 809)
  def _reduce_240(val, _values, result)
                          val[2][-1] = @builder.objc_varargs(val[2][-1], val[4])
                      assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 816)
  def _reduce_241(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 821)
  def _reduce_242(val, _values, result)
                          result = [ val[0], *val[2].concat(val[3]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 825)
  def _reduce_243(val, _values, result)
                          result = [ val[0], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 829)
  def _reduce_244(val, _values, result)
                          result =  [ @builder.associate(nil, val[0], nil),
                                  *val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 834)
  def _reduce_245(val, _values, result)
                          result =  [ val[0],
                                  @builder.associate(nil, val[2], nil),
                                  *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 840)
  def _reduce_246(val, _values, result)
                          result =  [ val[0],
                                  *val[2].
                                    push(@builder.associate(nil, val[4], nil)).
                                    concat(val[5]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 847)
  def _reduce_247(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 851)
  def _reduce_248(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 856)
  def _reduce_249(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 863)
  def _reduce_250(val, _values, result)
                          result = [ nil, val[0], nil ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 867)
  def _reduce_251(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 871)
  def _reduce_252(val, _values, result)
                          result = [ val[0], [], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 875)
  def _reduce_253(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 879)
  def _reduce_254(val, _values, result)
                          result = [ val[0], val[1], val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 884)
  def _reduce_255(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 889)
  def _reduce_256(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 893)
  def _reduce_257(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 897)
  def _reduce_258(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 902)
  def _reduce_259(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 906)
  def _reduce_260(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 910)
  def _reduce_261(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 914)
  def _reduce_262(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 919)
  def _reduce_263(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 923)
  def _reduce_264(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 927)
  def _reduce_265(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

module_eval(<<'.,.,', 'rubymotion.y', 940)
  def _reduce_274(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 944)
  def _reduce_275(val, _values, result)
                          result = @builder.begin_keyword(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 948)
  def _reduce_276(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 952)
  def _reduce_277(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 956)
  def _reduce_278(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 960)
  def _reduce_279(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 964)
  def _reduce_280(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 968)
  def _reduce_281(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 972)
  def _reduce_282(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 976)
  def _reduce_283(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 980)
  def _reduce_284(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 984)
  def _reduce_285(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 988)
  def _reduce_286(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 992)
  def _reduce_287(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 997)
  def _reduce_288(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1001)
  def _reduce_289(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1005)
  def _reduce_290(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 291 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1014)
  def _reduce_292(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1020)
  def _reduce_293(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1028)
  def _reduce_294(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1035)
  def _reduce_295(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1042)
  def _reduce_296(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1046)
  def _reduce_297(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1050)
  def _reduce_298(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1055)
  def _reduce_299(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1059)
  def _reduce_300(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1063)
  def _reduce_301(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1068)
  def _reduce_302(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1076)
  def _reduce_303(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1084)
  def _reduce_304(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1088)
  def _reduce_305(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1092)
  def _reduce_306(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1098)
  def _reduce_307(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1103)
  def _reduce_308(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1117)
  def _reduce_309(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1125)
  def _reduce_310(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1135)
  def _reduce_311(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1140)
  def _reduce_312(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1152)
  def _reduce_313(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1158)
  def _reduce_314(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1167)
  def _reduce_315(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1171)
  def _reduce_316(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1177)
  def _reduce_317(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1186)
  def _reduce_318(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1190)
  def _reduce_319(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1194)
  def _reduce_320(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1198)
  def _reduce_321(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1207)
  def _reduce_325(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1216)
  def _reduce_329(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 330 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1227)
  def _reduce_331(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1236)
  def _reduce_335(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1241)
  def _reduce_336(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1245)
  def _reduce_337(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 338 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1251)
  def _reduce_339(val, _values, result)
                          result = val[0].
                                  push(@builder.objc_restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1256)
  def _reduce_340(val, _values, result)
                          result = val[0].
                                  push(@builder.objc_restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1262)
  def _reduce_341(val, _values, result)
                          result = val[0].
                                  push(@builder.objc_restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1267)
  def _reduce_342(val, _values, result)
                          result = val[0].
                                  push(@builder.objc_restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1273)
  def _reduce_343(val, _values, result)
                          result = [ @builder.objc_restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1277)
  def _reduce_344(val, _values, result)
                          result = [ @builder.objc_restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1282)
  def _reduce_345(val, _values, result)
                          result = [ @builder.objc_restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1286)
  def _reduce_346(val, _values, result)
                          result = [ @builder.objc_restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1292)
  def _reduce_347(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1299)
  def _reduce_348(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1307)
  def _reduce_349(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1313)
  def _reduce_350(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1320)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 352 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1327)
  def _reduce_353(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1334)
  def _reduce_354(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1338)
  def _reduce_355(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1344)
  def _reduce_356(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1351)
  def _reduce_357(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1356)
  def _reduce_358(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1362)
  def _reduce_359(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1367)
  def _reduce_360(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1373)
  def _reduce_361(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1378)
  def _reduce_362(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1382)
  def _reduce_363(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1387)
  def _reduce_364(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1391)
  def _reduce_365(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1395)
  def _reduce_366(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1400)
  def _reduce_367(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1404)
  def _reduce_368(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1409)
  def _reduce_369(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1413)
  def _reduce_370(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1418)
  def _reduce_371(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 372 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1423)
  def _reduce_373(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1427)
  def _reduce_374(val, _values, result)
                          result = [ val[1], val[2] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1434)
  def _reduce_375(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1438)
  def _reduce_376(val, _values, result)
                          result = @builder.args(nil, val[0].concat(val[1]), nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1443)
  def _reduce_377(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1447)
  def _reduce_378(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1452)
  def _reduce_379(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1456)
  def _reduce_380(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1463)
  def _reduce_381(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1469)
  def _reduce_382(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1475)
  def _reduce_383(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1482)
  def _reduce_384(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1488)
  def _reduce_385(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1494)
  def _reduce_386(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1500)
  def _reduce_387(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1504)
  def _reduce_388(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1510)
  def _reduce_389(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1516)
  def _reduce_390(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1522)
  def _reduce_391(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1526)
  def _reduce_392(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1531)
  def _reduce_393(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1535)
  def _reduce_394(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1541)
  def _reduce_395(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1545)
  def _reduce_396(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1552)
  def _reduce_397(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1558)
  def _reduce_398(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 399 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1564)
  def _reduce_400(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1577)
  def _reduce_401(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1582)
  def _reduce_402(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 403 omitted

# reduce 404 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1589)
  def _reduce_405(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 406 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1595)
  def _reduce_407(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 408 omitted

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1605)
  def _reduce_412(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1610)
  def _reduce_413(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1614)
  def _reduce_414(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1619)
  def _reduce_415(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1623)
  def _reduce_416(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1627)
  def _reduce_417(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1632)
  def _reduce_418(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1637)
  def _reduce_419(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1643)
  def _reduce_420(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1648)
  def _reduce_421(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1652)
  def _reduce_422(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1657)
  def _reduce_423(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1661)
  def _reduce_424(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1666)
  def _reduce_425(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1671)
  def _reduce_426(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1675)
  def _reduce_427(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1680)
  def _reduce_428(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1684)
  def _reduce_429(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1689)
  def _reduce_430(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1693)
  def _reduce_431(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1698)
  def _reduce_432(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1702)
  def _reduce_433(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1707)
  def _reduce_434(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1711)
  def _reduce_435(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1715)
  def _reduce_436(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1720)
  def _reduce_437(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1728)
  def _reduce_438(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1732)
  def _reduce_439(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1736)
  def _reduce_440(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 441 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1743)
  def _reduce_442(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1748)
  def _reduce_443(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1753)
  def _reduce_444(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1757)
  def _reduce_445(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1761)
  def _reduce_446(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.integer(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1766)
  def _reduce_447(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.float(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1772)
  def _reduce_448(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1776)
  def _reduce_449(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1780)
  def _reduce_450(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1784)
  def _reduce_451(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1788)
  def _reduce_452(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1792)
  def _reduce_453(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1796)
  def _reduce_454(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1800)
  def _reduce_455(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1804)
  def _reduce_456(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1808)
  def _reduce_457(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1812)
  def _reduce_458(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1816)
  def _reduce_459(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1821)
  def _reduce_460(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1826)
  def _reduce_461(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1831)
  def _reduce_462(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1835)
  def _reduce_463(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1840)
  def _reduce_464(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1844)
  def _reduce_465(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1848)
  def _reduce_466(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1854)
  def _reduce_467(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1860)
  def _reduce_468(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1865)
  def _reduce_469(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1872)
  def _reduce_470(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1880)
  def _reduce_471(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1886)
  def _reduce_472(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1893)
  def _reduce_473(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1899)
  def _reduce_474(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1906)
  def _reduce_475(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1911)
  def _reduce_476(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1917)
  def _reduce_477(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1924)
  def _reduce_478(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1929)
  def _reduce_479(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1935)
  def _reduce_480(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1940)
  def _reduce_481(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1946)
  def _reduce_482(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1950)
  def _reduce_483(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1955)
  def _reduce_484(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1959)
  def _reduce_485(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1963)
  def _reduce_486(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1967)
  def _reduce_487(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 488 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1973)
  def _reduce_489(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1979)
  def _reduce_490(val, _values, result)
                          @static_env.declare val[2][0]

                      result = @builder.objc_kwarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1985)
  def _reduce_491(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.objc_kwarg(val[0], nil, val[1])
                    
    result
  end
.,.,

# reduce 492 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1993)
  def _reduce_493(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1998)
  def _reduce_494(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2002)
  def _reduce_495(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2007)
  def _reduce_496(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2014)
  def _reduce_497(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2021)
  def _reduce_498(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2025)
  def _reduce_499(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2030)
  def _reduce_500(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2034)
  def _reduce_501(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 502 omitted

# reduce 503 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2041)
  def _reduce_504(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2047)
  def _reduce_505(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 506 omitted

# reduce 507 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2054)
  def _reduce_508(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2061)
  def _reduce_509(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2065)
  def _reduce_510(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 511 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2071)
  def _reduce_512(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2076)
  def _reduce_513(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 514 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2082)
  def _reduce_515(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2086)
  def _reduce_516(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2091)
  def _reduce_517(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2095)
  def _reduce_518(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2106)
  def _reduce_535(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2110)
  def _reduce_536(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2116)
  def _reduce_540(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2125)
  def _reduce_544(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyMotion
  end   # module Parser
