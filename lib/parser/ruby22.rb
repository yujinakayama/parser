# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class Ruby22 < Parser::Base

module_eval(<<'...end ruby22.y/module_eval...', 'ruby22.y', 2333)

  def version
    22
  end

  def default_encoding
    Encoding::UTF_8
  end
...end ruby22.y/module_eval...
##### State transition tables begin ###

clist = [
'-576,568,-102,568,268,-102,-488,-576,-576,-576,268,568,-576,-576,-576',
'217,-576,589,647,610,647,-286,647,214,215,-576,-576,-576,-576,-104,-100',
'-105,-98,612,975,-99,-576,-576,568,-576,-576,-576,-576,-576,113,-97',
'-99,568,-100,112,-83,-101,109,646,756,646,218,646,815,-69,444,-286,-97',
'806,121,574,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576',
'-576,-576,715,-91,-576,-576,-576,609,772,-576,715,715,-576,267,-101',
'-576,-576,206,-576,267,-576,611,-576,-90,-576,-576,268,-576,-576,-576',
'-576,-576,-99,-576,-576,-576,-93,-93,-105,113,-103,113,-102,113,112',
'588,112,-102,112,-576,-572,113,-576,-576,-576,-576,112,-576,-477,-576',
'-95,-91,-96,-89,-101,-477,-477,-477,113,-91,-477,-477,-477,112,-477',
'-99,-88,-90,113,-572,-99,842,-477,112,-477,-477,-477,113,-100,814,263',
'-101,112,-100,-477,-477,-101,-477,-477,-477,-477,-477,207,-93,208,-573',
'113,214,215,-91,-481,112,-91,267,113,113,268,-481,647,112,112,-91,213',
'-92,-477,-477,-477,-477,-477,-477,-477,-477,-477,-477,-477,-477,-477',
'-477,214,215,-477,-477,-477,-93,-477,-477,-93,257,-477,-94,79,-477,-477',
'646,-477,-93,-477,316,-477,515,-477,-477,80,-477,-477,-477,-477,-477',
'317,-477,-474,-477,81,214,215,770,113,-474,-474,-474,263,112,-474,-474',
'-474,-477,-474,113,-477,-477,-477,-477,112,-477,-474,-477,-474,-474',
'-474,771,-477,218,-489,267,580,860,-474,-474,581,-474,-474,-474,-474',
'-474,548,-104,545,544,543,218,546,386,548,399,545,544,543,597,546,396',
'-576,-100,218,443,398,397,-474,-474,-474,-474,-474,-474,-474,-474,-474',
'-474,-474,-474,-474,-474,564,563,-474,-474,-474,-102,-474,-474,-98,445',
'-474,-99,597,-474,-474,446,-474,218,-474,-576,-474,-570,-474,-474,217',
'-474,-474,-474,-474,-474,477,-474,-576,-474,91,92,91,92,597,-576,486',
'599,598,595,-572,597,833,-474,-576,488,-474,-474,-474,-474,956,-474',
'-576,-474,662,-486,212,-485,-474,-576,-576,-576,-486,-576,-485,-576',
'-576,-576,-576,-477,113,-486,599,598,-576,112,-477,-576,490,-572,-569',
'-570,749,-576,527,-477,498,529,-576,-576,-482,-576,-576,-576,-576,-576',
'113,-482,599,598,602,112,-576,-96,-570,599,598,260,93,94,93,94,-105',
'527,261,747,529,-68,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576',
'-576,-576,-576,-576,-474,626,-576,-576,-576,625,631,-474,-483,-488,-576',
'218,-569,-576,597,-483,-474,501,-576,502,-576,597,-576,-576,-410,-576',
'-576,-576,-576,-576,-289,-576,-576,-576,515,-569,113,-289,-289,-289',
'509,112,-289,-289,-289,272,-289,-576,-93,-289,-576,-576,-91,-92,-573',
'-576,-88,-102,-289,218,597,-100,-101,-489,263,-97,-289,-289,512,-289',
'-289,-289,-289,-289,553,584,-410,516,599,598,595,-95,938,-410,556,599',
'598,600,260,238,-104,585,-410,214,215,261,-289,-289,-289,-289,-289,-289',
'-289,-289,-289,-289,-289,-289,-289,-289,-89,-410,-289,-289,-289,218',
'630,564,563,-98,-289,597,557,-289,599,598,604,597,-289,530,-289,218',
'-289,-289,979,-289,-289,-289,-289,-289,-289,-289,527,-289,-484,526,531',
'-289,-289,-289,490,-484,-289,-289,-289,527,-289,-289,529,574,-289,-289',
'-289,-94,-479,-289,-289,-289,-289,-289,388,-479,-103,578,-573,579,-289',
'-289,-289,-289,-289,-289,-289,-289,614,599,598,608,617,-332,-261,599',
'598,613,619,548,-332,545,544,543,218,546,214,215,623,-332,-289,-289',
'-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,624,553',
'-289,-289,-289,263,773,-289,-477,634,-289,556,701,-289,-289,-477,-289',
'637,-289,238,-289,704,-289,-289,238,-289,-289,-289,-289,-289,238,-289',
'548,-289,545,544,543,548,546,545,544,543,238,546,564,563,238,-289,218',
'557,-289,-289,-289,-289,218,-289,235,-289,837,806,237,236,-103,5,69',
'70,71,9,57,701,837,806,63,64,701,214,215,67,704,65,66,68,30,31,72,73',
'116,117,118,119,120,29,28,27,101,100,102,103,741,742,19,218,743,107',
'108,635,8,45,7,10,105,104,106,95,56,97,96,98,-83,99,107,108,666,91,92',
'42,43,41,238,242,247,248,249,244,246,254,255,250,251,-289,231,232,517',
'218,252,253,-289,40,520,518,33,-573,677,58,59,-289,682,60,442,35,235',
'683,241,44,237,236,685,233,234,245,243,239,20,240,689,692,693,89,79',
'82,83,440,84,86,85,87,695,-474,441,-480,80,88,697,256,-474,-238,-480',
'442,62,699,81,93,94,290,69,70,71,9,57,707,708,-290,63,64,709,711,574',
'67,-290,65,66,68,30,31,72,73,718,-290,736,746,750,29,28,27,101,100,102',
'103,751,-262,19,757,477,477,218,620,8,45,292,10,105,104,106,95,56,97',
'96,98,775,99,107,108,257,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,584,231,232,507,488,252,253,938,40,490,508,33,799,677',
'58,59,585,218,60,506,35,235,263,241,44,237,236,263,233,234,245,243,239',
'20,240,677,238,806,89,79,82,83,-486,84,86,85,87,218,218,-486,831,80',
'88,218,256,806,841,218,-486,62,218,81,93,94,290,69,70,71,9,57,850,-263',
'-487,63,64,859,862,692,67,-487,65,66,68,30,31,72,73,865,-487,867,869',
'871,29,28,27,101,100,102,103,218,873,19,874,877,879,880,635,8,45,292',
'10,105,104,106,95,56,97,96,98,677,99,107,108,882,91,92,42,43,41,238',
'242,247,248,249,244,246,254,255,250,251,984,231,232,584,-261,252,253',
'985,40,886,583,33,888,891,58,59,983,692,60,585,35,235,893,241,44,237',
'236,895,233,234,245,243,239,20,240,897,899,899,89,79,82,83,-279,84,86',
'85,87,218,905,-279,907,80,88,909,256,915,918,218,-279,62,922,81,93,94',
'290,69,70,71,9,57,-264,932,576,63,64,939,940,949,67,577,65,66,68,30',
'31,72,73,950,575,958,960,961,29,28,27,101,100,102,103,966,935,19,545',
'544,543,736,546,8,45,292,10,105,104,106,95,56,97,96,98,692,99,107,108',
'969,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,-290',
'231,232,210,971,252,253,-290,40,973,211,33,975,975,58,59,-290,986,60',
'209,35,235,987,241,44,237,236,899,233,234,245,243,239,20,240,899,899',
'992,89,79,82,83,-487,84,86,85,87,958,-573,-487,-572,80,88,682,256,958',
'1011,1012,-487,62,1013,81,93,94,290,69,70,71,9,57,975,975,-290,63,64',
'975,218,899,67,-290,65,66,68,30,31,72,73,958,-290,,,,29,28,27,101,100',
'102,103,,935,19,545,544,543,,546,8,45,292,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250',
'251,-279,231,232,,,252,253,-279,40,,,33,,,58,59,-279,,60,,35,235,,241',
'44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,116,117,118,119,120,29,28,27,101,100,102,103,,,19',
'116,117,118,119,120,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232',
',,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245',
'243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81',
'93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250',
'251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236',
',233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256',
',,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,,231,232,,,252,253,,40,,,294,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,218,256,,,,,62,,81,93,94,5,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248',
'249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60',
',35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
'238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,',
',33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231',
'232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234',
'245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62',
',81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255',
'250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237',
'236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244',
'246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247',
'248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59',
',,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40',
',,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,238,548,19,545,544,543,,546,8,45,292,10,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,238,,235,,,,237,236,701,233,234',
'238,,,,,,904,,40,,,33,,,58,59,,,60,,35,235,,,44,237,236,,233,234,,,235',
'20,,,237,236,89,79,82,83,,84,86,85,87,,,,,80,88,,548,,545,544,543,62',
'546,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,701,29,28,27,101,100,102,103,,548,19,545,544,543,,546,8,45,292,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,548,,545',
'544,543,,546,701,548,,545,544,543,,546,252,253,,40,,,294,,,58,59,,,60',
',35,235,,241,44,237,236,701,233,234,,,239,20,240,701,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,',
'8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238',
'-595,-595,-595,-595,244,246,,,-595,-595,,,,,,252,253,,40,,,294,,,58',
'59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,5,69,70,71,9,57,,,,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,8,45,7,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
'238,,,,,,,,,,,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237',
'236,,233,234,,,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,',
',,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,40',
',,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,,,239,20,240,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57',
',,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,238,-595,-595,-595,-595,244,246,,,-595,-595,,,,,,252,253,,40,',
',33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71',
'9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,-595,-595,',
',252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245',
'243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93',
'94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,238,-595,-595,-595,-595,244,246,,,-595,-595',
',,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234',
'245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81',
'93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,238,-595,-595,-595,-595,244,246,,,-595',
'-595,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233',
'234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62',
',81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,238,-595,-595,-595,-595,244,246,,',
'-595,-595,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236',
',233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,',
',,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,',
'40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,,,239,20,240,',
',,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71',
'9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,,,250,251,,,,,,252,253,,40,',
',33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71',
'9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,,250,251,,,,,,252,253,,40',
',,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71',
'9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,-595,-595,',
',252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245',
'243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,238,-595,-595,-595,-595,244,246,,,-595,-595,,,,,,252',
'253,,223,,,229,,,58,59,,,60,,,235,,241,44,237,236,,233,234,245,243,239',
'228,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,238,,,,,,,,,,,,,,,,252,253,,223,,,229,,,58,59,,,60,,,235,,,44',
'237,236,,233,234,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306',
'312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,223,,,229,,,58,59',
',,60,,,235,,241,44,237,236,,233,234,,,,228,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253',
',223,,,229,,,58,59,,,60,,,235,,241,44,237,236,,233,234,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88',
'218,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,876,,,229,,,58,59',
',,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89',
'282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,',
'45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,',
',,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,',
',,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228',
',,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313',
',,,,,,,,,,,,,,,,,,,303,,,229,,,58,59,,,60,,,548,,545,544,543,553,546',
',,,,,,,,556,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,504,,551,62,,81,93',
'94,69,70,71,,57,564,563,,63,64,557,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,659,',
',,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58,59,,,60,,298,,,,',
',,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
',,313,,,,,,,,,,,,,,,,,,,,303,,,229,,,58,59,,,60,,,548,,545,544,543,553',
'546,,,,,,,,,556,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,315,,551,62,',
'81,93,94,69,70,71,,57,564,563,,63,64,557,,,67,,65,66,68,309,310,72,73',
',,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56',
'97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,876,,,229,,,58,59',
',,60,,,548,,545,544,543,553,546,,,,,,,,,556,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,,,551,62,,81,93,94,69,70,71,9,57,564,563,,63,64,557,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,',
',,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,',
',,,946,,,229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,299,,',
'58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,',
'69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,520,,58,59',
',,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,',
',,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,',
',69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,',
'91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,,,44',
',,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,',
'285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,',
',,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,113,,,,,112,62,,81,93,94,69,70,71,,57,,,,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,',
',,,348,,,33,,,58,59,,,60,,35,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106',
'353,56,97,96,354,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,360,,,355',
',,229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,353,56',
'97,96,354,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,355,,,229,,,58',
'59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,',
'279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306',
'312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,7,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,388,62,,81,93,94,69,70,71',
',57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,659,,279,,44,,,285,,,,,,228',
',,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,279,,44,,,285,,,,,,228',
',,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,388,62,,81,93,94,69,70,71,,57',
',,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73',
',,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58',
'59,,,60,,,548,,545,544,543,553,546,,,,,,,,,556,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,,,551,62,,81,93,94,69,70,71,9,57,564,563,,63,64,557',
',,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8',
'45,,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,',
',,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,',
',,,,,,,,,,303,,,299,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,',
',69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,404,',
',,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,659,',
',,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285',
',,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,',
',,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,',
',,,,,,,,,,,,,223,,,229,,,58,59,,,60,,404,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,218,,,69,70,71,62,57,81,93,94',
'63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103',
',,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228',
',,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228',
',,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,754,,,,44,,,,,,,,,228,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,659,,279,,44,,,285,,,,,,228,,,,,89',
'282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,',
',67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,279,,44,,,285,,,,,,228',
',,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,',
',,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,',
',105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,',
',,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58,59,,,60,',
',,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,',
',,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,307',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,',
',,,,,303,,,299,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,404,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,',
'305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306',
'312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,-577,,62,,81,93,94',
'-577,-577,-577,,,-577,-577,-577,,-577,,,,,,,,,-577,-577,-577,-577,,',
',,,,,-577,-577,,-577,-577,-577,-577,-577,,,,,,,,,,,,,,,,,,,,,,,-577',
'-577,-577,-577,-577,-577,-577,-577,-577,-577,-577,-577,-577,-577,,,-577',
'-577,-577,,,-577,,,-577,,,-577,-577,,-577,,-577,,-577,,-577,-577,,-577',
'-577,-577,-577,-577,,-577,-577,-577,,,,,,,,,,,,,,-577,,,-577,-577,-577',
'-577,-280,-577,,-577,,,,-280,-280,-280,,,-280,-280,-280,,-280,,,,,,',
',,,-280,-280,-280,,,,,,,,-280,-280,,-280,-280,-280,-280,-280,,,,,,,',
',,,,,,,,,,,,,,,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280',
'-280,-280,-280,,,-280,-280,-280,,,-280,,,-280,,,-280,-280,,-280,,-280',
',-280,,-280,-280,,-280,-280,-280,-280,-280,,-280,,-280,,,,,,,,,,,,,',
'-280,,,-280,-280,-280,-280,-578,-280,,-280,,,,-578,-578,-578,,,-578',
'-578,-578,,-578,,,,,,,,,-578,-578,-578,-578,,,,,,,,-578,-578,,-578,-578',
'-578,-578,-578,,,,,,,,,,,,,,,,,,,,,,,-578,-578,-578,-578,-578,-578,-578',
'-578,-578,-578,-578,-578,-578,-578,,,-578,-578,-578,,,-578,,,-578,,',
'-578,-578,,-578,,-578,,-578,,-578,-578,,-578,-578,-578,-578,-578,,-578',
'-578,-578,548,,545,544,543,553,546,,,,,,,-578,,556,-578,-578,-578,-578',
'-409,-578,,-578,,,,-409,-409,-409,,,-409,-409,-409,,-409,551,,,,,,,',
'-409,-409,-409,564,563,,,,557,,,-409,-409,,-409,-409,-409,-409,-409',
',,,,,,,,,,,,,,,,,,,,,,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409',
'-409,-409,-409,-409,,,-409,-409,-409,,,-409,,263,-409,,,-409,-409,,-409',
',-409,,-409,,-409,-409,,-409,-409,-409,-409,-409,,-409,-409,-409,,,',
',,,,,,,,,,-409,,-244,-409,-409,,-409,,-409,-244,-244,-244,,,-244,-244',
'-244,548,-244,545,544,543,553,546,,,,-244,-244,,,,556,,,,,,-244,-244',
',-244,-244,-244,-244,-244,,,,,,,,,551,,,,,,,,,561,560,564,563,,,,557',
',,,,,,,,-244,,-244,,,,,-244,,-244,-244,-244,263,-244,-244,-244,-244',
'218,-244,,,,,,,,,-244,-244,-244,,,,,,-244,-244,,-244,-244,,-244,-244',
'-244,-244,-244,,,,,-244,,,-244,,,,,-244,,,,,,,,,,-244,-244,-244,-244',
'-244,-244,-244,-244,-244,-244,-244,-244,-244,-244,,,-244,-244,-244,',
',-244,,263,-244,,,-244,-244,,-244,,-244,,-244,,-244,-244,,-244,-244',
'-244,-244,-244,-296,-244,-244,-244,,,,-296,-296,-296,,,-296,-296,-296',
',-296,-244,,,-244,-244,,-244,,-244,-296,-296,,,,,,,,,-296,-296,,-296',
'-296,-296,-296,-296,,,,,,,,,,,,,,,,,,,,,,,-296,-296,-296,-296,-296,-296',
'-296,-296,-296,-296,-296,-296,-296,-296,,,-296,-296,-296,,,-296,,272',
'-296,,,-296,-296,,-296,,-296,,-296,,-296,-296,,-296,-296,-296,-296,-296',
',-296,,-296,,,,,,,,,,,,,,-296,,,-296,-296,,-296,,-296,173,184,174,197',
'170,190,180,179,200,201,195,178,177,172,198,202,203,182,171,185,189',
'191,183,176,,,,192,199,194,193,186,196,181,169,188,187,,,,,,168,175',
'166,167,163,164,165,124,126,123,,125,,,,,,,,157,158,,154,136,137,138',
'145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,,,,,,,,,88,173',
'184,174,197,170,190,180,179,200,201,195,178,177,172,198,202,203,182',
'171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169,188,187,',
',,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154,136',
'137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150',
',135,156,153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,,,,,',
',,,88,173,184,174,197,170,190,180,179,200,201,195,178,177,172,198,202',
'203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169,188',
'187,,,,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,',
',,,,,,,88,173,184,174,197,170,190,180,179,200,201,195,178,177,172,198',
'202,203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169',
'188,187,,,,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158',
',154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,',
',,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,,,162,89',
',,,,,,,,,,,,,88,173,184,174,197,170,190,180,179,200,201,195,178,177',
'172,198,202,203,182,171,185,189,191,183,176,,,,192,199,194,371,370,372',
'369,169,188,187,,,,,,168,175,166,167,366,367,368,364,126,97,96,365,',
'99,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,376,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,,,162,173,184,174,197,170,190,180,179,200,201,195,178,177,172',
'198,202,203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181',
'169,188,187,,,,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157',
'158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,',
',,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,640',
'424,162,,641,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,',
',,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149',
'143,141,133,155,134,673,424,162,,674,,,,,,,,157,158,,154,136,137,138',
'145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135',
'156,153,152,161,148,149,143,141,133,155,134,475,417,162,,476,,,,,,,',
'157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,',
',,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134',
'1006,424,162,,1007,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139',
'140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161',
'148,149,143,141,133,155,134,1004,417,162,,1005,,,,,,,,157,158,,154,136',
'137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,723,424,162,,724',
',,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,721,417,162,,722,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152',
'161,148,149,143,141,133,155,134,475,417,162,,476,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,981,424,162,,980',
',,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,726,424,162,,727,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152',
'161,148,149,143,141,133,155,134,670,417,162,,671,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,',
',151,150,,135,156,153,152,161,148,149,143,141,133,155,134,420,424,162',
',419,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160',
'146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141',
'133,155,134,413,417,162,,414,,,,,,,,157,158,,154,136,137,138,145,142',
'144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153',
'152,161,148,149,143,141,133,155,134,640,424,162,,641,,,,,,,,157,158',
',154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,',
',,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,638,417',
'162,,639,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159',
'160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143',
'141,133,155,134,638,417,162,,639,,,,,,,,157,158,,154,136,137,138,145',
'142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,,548,162,545,544,543,553,546',
',548,,545,544,543,553,546,556,,,,,,,,556,,548,,545,544,543,553,546,',
',,,,551,534,,556,,,,,551,561,560,564,563,,,,557,561,560,564,563,,,,557',
'551,,548,,545,544,543,553,546,561,560,564,563,,,,557,556,,548,,545,544',
'543,553,546,,548,,545,544,543,553,546,556,,,,,551,,,556,,,,,,561,560',
'564,563,,,,557,551,,,,,,,,551,561,560,564,563,,,,557,561,560,564,563',
',,548,557,545,544,543,553,546,,548,,545,544,543,553,546,556,,,,,,,,556',
',548,,545,544,543,553,546,,,,,,551,,,556,,,,,551,561,560,564,563,,,',
'557,561,560,564,563,,,,557,551,,548,,545,544,543,553,546,,,564,563,',
',,557,556,,548,,545,544,543,553,546,,548,,545,544,543,553,546,556,,',
',,551,,,556,,,,,,,,564,563,,,,557,551,,,,,,,,551,,,564,563,,,,557,561',
'560,564,563,,,548,557,545,544,543,553,546,,548,,545,544,543,553,546',
'556,,,,,,,,556,,548,,545,544,543,553,546,,,,,,551,,,556,,,,,551,,,564',
'563,,,,557,561,560,564,563,,,,557,551,,,,,,,,,,,564,563,,,,557' ]
        racc_action_table = arr = ::Array.new(25119, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'640,338,1005,339,61,722,221,640,640,640,650,885,640,640,640,19,640,359',
'481,383,482,58,473,590,590,640,640,640,640,578,721,349,346,384,1020',
'1018,640,640,719,640,640,640,640,640,3,345,844,908,1004,3,665,1006,1',
'481,621,482,19,473,687,665,224,58,221,913,7,913,640,640,640,640,640',
'640,640,640,640,640,640,640,640,640,571,670,640,640,640,383,640,640',
'570,845,640,61,723,640,640,10,640,650,640,384,640,621,640,640,308,640',
'640,640,640,640,621,640,640,640,722,671,224,590,724,338,1005,339,590',
'359,338,1005,339,640,1006,885,640,640,640,640,885,640,98,640,578,721',
'349,346,640,98,98,98,359,670,98,98,98,359,98,1018,345,844,719,723,1018',
'719,98,719,98,98,98,908,1004,687,308,1006,908,1004,98,98,1006,98,98',
'98,98,98,12,671,13,724,571,594,594,670,372,571,670,308,570,845,26,372',
'651,570,845,670,16,723,98,98,98,98,98,98,98,98,98,98,98,98,98,98,680',
'680,98,98,98,671,98,98,671,22,98,724,77,98,98,651,98,671,98,37,98,443',
'98,98,77,98,98,98,98,98,40,98,95,98,77,437,437,638,589,95,95,95,26,589',
'95,95,95,98,95,342,98,98,98,98,342,98,95,98,95,95,95,639,98,594,222',
'26,355,774,95,95,355,95,95,95,95,95,704,443,704,704,704,45,704,109,904',
'204,904,904,904,492,904,123,726,638,680,223,123,123,95,95,95,95,95,95',
'95,95,95,95,95,95,95,95,692,692,95,95,95,639,95,95,222,225,95,774,607',
'95,95,226,95,437,95,673,95,354,95,95,230,95,95,95,95,95,262,95,726,95',
'313,313,41,41,380,726,276,492,492,492,726,605,704,95,726,277,95,95,95',
'95,904,95,420,95,492,300,15,368,95,420,420,420,300,726,368,420,420,673',
'420,354,848,300,607,607,673,848,354,420,280,673,353,354,607,673,332',
'354,292,332,420,420,369,420,420,420,420,420,288,369,380,380,380,288',
'673,15,354,605,605,374,313,313,41,41,15,686,374,605,686,293,420,420',
'420,420,420,420,420,420,420,420,420,420,420,420,353,414,420,420,420',
'413,420,353,367,38,420,295,353,420,378,367,353,296,420,297,420,379,420',
'420,801,420,420,420,420,420,419,420,420,420,317,353,853,419,419,419',
'303,853,674,419,419,306,419,420,414,674,420,420,413,420,674,420,38,414',
'674,307,381,413,420,39,312,38,419,419,314,419,419,419,419,419,689,875',
'801,318,378,378,378,317,875,801,689,379,379,379,24,321,317,875,801,523',
'523,24,419,419,419,419,419,419,419,419,419,419,419,419,419,419,39,801',
'419,419,419,326,419,689,689,39,419,382,689,419,381,381,381,385,419,330',
'419,933,419,419,933,419,419,419,419,419,641,419,328,419,366,328,331',
'641,641,641,333,366,641,641,641,329,641,419,329,343,419,419,727,419',
'370,419,641,641,641,727,344,370,419,348,727,350,641,641,727,641,641',
'641,641,641,394,382,382,382,400,46,403,385,385,385,405,701,46,701,701',
'701,409,701,17,17,411,46,641,641,641,641,641,641,641,641,641,641,641',
'641,641,641,412,862,641,641,641,421,641,641,365,429,641,862,701,641',
'641,365,641,439,641,451,641,701,641,641,449,641,641,641,641,641,452',
'641,551,641,551,551,551,956,551,956,956,956,453,956,862,862,454,641',
'479,862,641,641,641,641,483,641,449,641,994,994,449,449,641,121,121',
'121,121,121,121,551,710,710,121,121,956,337,337,121,551,121,121,121',
'121,121,121,121,6,6,6,6,6,121,121,121,121,121,121,121,598,598,121,499',
'598,598,598,432,121,121,121,121,121,121,121,121,121,121,121,121,500',
'121,121,121,503,121,121,121,121,121,432,432,432,432,432,432,432,432',
'432,432,432,1007,432,432,319,505,432,432,1007,121,510,319,121,1007,513',
'121,121,1007,521,121,319,121,432,522,432,121,432,432,524,432,432,432',
'432,432,121,432,536,537,539,121,121,121,121,220,121,121,121,121,540',
'364,220,371,121,121,541,432,364,432,371,220,121,550,121,121,121,745',
'745,745,745,745,745,558,562,581,745,745,565,567,572,745,581,745,745',
'745,745,745,745,745,573,581,592,602,610,745,745,745,745,745,745,745',
'612,618,745,622,627,632,642,408,745,745,745,745,745,745,745,745,745',
'745,745,745,644,745,745,745,649,745,745,745,745,745,408,408,408,408',
'408,408,408,408,408,408,408,937,408,408,302,656,408,408,937,745,658',
'302,745,664,667,745,745,937,669,745,302,745,408,672,408,745,408,408',
'675,408,408,408,408,408,745,408,676,679,681,745,745,745,745,943,745',
'745,745,745,684,688,943,703,745,745,705,408,712,717,720,943,745,729',
'745,745,745,942,942,942,942,942,942,734,753,944,942,942,758,776,777',
'942,944,942,942,942,942,942,942,942,779,944,780,781,783,942,942,942',
'942,942,942,942,784,785,942,786,790,794,795,643,942,942,942,942,942',
'942,942,942,942,942,942,942,800,942,942,942,804,942,942,942,942,942',
'643,643,643,643,643,643,643,643,643,643,643,945,643,643,357,807,643',
'643,945,942,808,357,942,811,816,942,942,945,817,942,357,942,643,821',
'643,942,643,643,822,643,643,643,643,643,942,643,824,825,827,942,942',
'942,942,947,942,942,942,942,830,832,947,835,942,942,838,643,847,851',
'852,947,942,855,942,942,942,324,324,324,324,324,324,856,872,347,324',
'324,876,878,889,324,347,324,324,324,324,324,324,324,890,347,906,910',
'911,324,324,324,324,324,324,324,917,873,324,873,873,873,921,873,324',
'324,324,324,324,324,324,324,324,324,324,324,923,324,324,324,926,324',
'324,324,324,324,760,760,760,760,760,760,760,760,760,760,760,509,760',
'760,14,927,760,760,509,324,928,14,324,929,931,324,324,509,946,324,14',
'324,760,951,760,324,760,760,952,760,760,760,760,760,324,760,953,954',
'955,324,324,324,324,301,324,324,324,324,957,980,301,981,324,324,982',
'760,993,995,996,301,324,997,324,324,324,882,882,882,882,882,882,998',
'999,986,882,882,1000,1003,1008,882,986,882,882,882,882,882,882,882,1009',
'986,,,,882,882,882,882,882,882,882,,979,882,979,979,979,,979,882,882',
'882,882,882,882,882,882,882,882,882,882,,882,882,882,,882,882,882,882',
'882,274,274,274,274,274,274,274,274,274,274,274,304,274,274,,,274,274',
'304,882,,,882,,,882,882,304,,882,,882,274,,274,882,274,274,,274,274',
'274,274,274,882,274,,,,882,882,882,882,,882,882,882,882,,,,,882,882',
',274,,,,,882,,882,882,882,793,793,793,793,793,793,,,,793,793,,,,793',
',793,793,793,793,793,793,793,291,291,291,291,291,793,793,793,793,793',
'793,793,,,793,497,497,497,497,497,793,793,793,793,793,793,793,793,793',
'793,793,793,,793,793,793,,793,793,793,793,793,755,755,755,755,755,755',
'755,755,755,755,755,,755,755,,,755,755,,793,,,793,,,793,793,,,793,,793',
'755,,755,793,755,755,,755,755,755,755,755,793,755,,,,793,793,793,793',
',793,793,793,793,,,,,793,793,,755,,,,,793,,793,793,793,229,229,229,229',
'229,229,,,,229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229',
'229,229,229,229,229,,,229,,,,,,229,229,229,229,229,229,229,229,229,229',
'229,229,,229,229,229,,229,229,229,229,229,765,765,765,765,765,765,765',
'765,765,765,765,,765,765,,,765,765,,229,,,229,,,229,229,,,229,,229,765',
',765,229,765,765,,765,765,765,765,765,229,765,,,,229,229,229,229,,229',
'229,229,229,,,,,229,229,,765,,,,,229,,229,229,229,33,33,33,33,33,33',
',,,33,33,,,,33,,33,33,33,33,33,33,33,,,,,,33,33,33,33,33,33,33,,,33',
',,,,,33,33,33,33,33,33,33,33,33,33,33,33,,33,33,33,,33,33,33,33,33,472',
'472,472,472,472,472,472,472,472,472,472,,472,472,,,472,472,,33,,,33',
',,33,33,,,33,,33,472,,472,33,472,472,,472,472,472,472,472,33,472,,,',
'33,33,33,33,,33,33,33,33,,,,,33,33,472,472,,,,,33,,33,33,33,498,498',
'498,498,498,498,,,,498,498,,,,498,,498,498,498,498,498,498,498,,,,,',
'498,498,498,498,498,498,498,,,498,,,,,,498,498,498,498,498,498,498,498',
'498,498,498,498,,498,498,498,,498,498,498,498,498,427,427,427,427,427',
'427,427,427,427,427,427,,427,427,,,427,427,,498,,,498,,,498,498,,,498',
',498,427,,427,498,427,427,,427,427,427,427,427,498,427,,,,498,498,498',
'498,,498,498,498,498,,,,,498,498,,427,,,,,498,,498,498,498,849,849,849',
'849,849,849,,,,849,849,,,,849,,849,849,849,849,849,849,849,,,,,,849',
'849,849,849,849,849,849,,,849,,,,,,849,849,849,849,849,849,849,849,849',
'849,849,849,,849,849,849,,849,849,849,849,849,519,519,519,519,519,519',
'519,519,519,519,519,,519,519,,,519,519,,849,,,849,,,849,849,,,849,,849',
'519,,519,849,519,519,,519,519,519,519,519,849,519,,,,849,849,849,849',
',849,849,849,849,,,,,849,849,,519,,,,,849,,849,849,849,653,653,653,653',
'653,653,,,,653,653,,,,653,,653,653,653,653,653,653,653,,,,,,653,653',
'653,653,653,653,653,,,653,,,,,,653,653,653,653,653,653,653,653,653,653',
'653,653,,653,653,653,,653,653,653,653,653,762,762,762,762,762,762,762',
'762,762,762,762,,762,762,,,762,762,,653,,,653,,,653,653,,,653,,653,762',
',762,653,762,762,,762,762,762,762,762,653,762,,,,653,653,653,653,,653',
'653,653,653,,,,,653,653,,762,,,,,653,,653,653,653,806,806,806,806,806',
'806,,,,806,806,,,,806,,806,806,806,806,806,806,806,,,,,,806,806,806',
'806,806,806,806,,,806,,,,,,806,806,806,806,806,806,806,806,806,806,806',
'806,,806,806,806,,806,806,806,806,806,861,861,861,861,861,861,861,861',
'861,861,861,,861,861,,,861,861,,806,,,806,,,806,806,,,806,,806,861,',
'861,806,861,861,,861,861,861,861,861,806,861,,,,806,806,806,806,,806',
'806,806,806,,,,,806,806,,861,,,,,806,,806,806,806,591,591,591,591,591',
'591,,,,591,591,,,,591,,591,591,591,591,591,591,591,,,,,,591,591,591',
'591,591,591,591,,,591,,,,,,591,591,591,591,591,591,591,591,591,591,591',
'591,,591,591,591,,591,591,591,591,591,858,858,858,858,858,858,858,858',
'858,858,858,,858,858,,,858,858,,591,,,591,,,591,591,,,591,,591,858,',
'858,591,858,858,,858,858,858,858,858,591,858,,,,591,591,591,591,,591',
'591,591,591,,,,,591,591,,858,,,,,591,,591,591,591,843,843,843,843,843',
'843,,,,843,843,,,,843,,843,843,843,843,843,843,843,,,,,,843,843,843',
'843,843,843,843,,,843,,,,,,843,843,843,843,843,843,843,843,843,843,843',
'843,,843,843,843,,843,843,843,843,843,21,21,21,21,21,21,21,21,21,21',
'21,,21,21,,,21,21,,843,,,843,,,843,843,,,843,,843,21,,21,843,21,21,',
'21,21,21,21,21,843,21,,,,843,843,843,843,,843,843,843,843,,,,,843,843',
',21,,,,,843,,843,843,843,814,814,814,814,814,814,,,,814,814,,,,814,',
'814,814,814,814,814,814,814,,,,,,814,814,814,814,814,814,814,,,814,',
',,,,814,814,814,814,814,814,814,814,814,814,814,814,,814,814,814,,814',
'814,814,814,814,678,678,678,678,678,678,678,678,678,678,678,,678,678',
',,678,678,,814,,,814,,,814,814,,,814,,814,678,,678,814,678,678,,678',
'678,678,678,678,814,678,,,,814,814,814,814,,814,814,814,814,,,,,814',
'814,,678,,,,,814,,814,814,814,815,815,815,815,815,815,,,,815,815,,,',
'815,,815,815,815,815,815,815,815,,,,,,815,815,815,815,815,815,815,,',
'815,,,,,,815,815,815,815,815,815,815,815,815,815,815,815,,815,815,815',
',815,815,815,815,815,769,769,769,769,769,769,769,769,769,769,769,,769',
'769,,,769,769,,815,,,815,,,815,815,,,815,,815,769,,769,815,769,769,',
'769,769,769,769,769,815,769,,,,815,815,815,815,,815,815,815,815,,,,',
'815,815,,769,,,,,815,,815,815,815,840,840,840,840,840,840,,,,840,840',
',,,840,,840,840,840,840,840,840,840,,,,,,840,840,840,840,840,840,840',
',,840,,,,,,840,840,840,840,840,840,840,840,840,840,840,840,,840,840',
'840,,840,840,840,840,840,767,767,767,767,767,767,767,767,767,767,767',
',767,767,,,767,767,,840,,,840,,,840,840,,,840,,840,767,,767,840,767',
'767,,767,767,767,767,767,840,767,,,,840,840,840,840,,840,840,840,840',
',,,,840,840,,767,,,,,840,,840,840,840,839,839,839,839,839,839,,,,839',
'839,,,,839,,839,839,839,839,839,839,839,,,,,,839,839,839,839,839,839',
'839,468,831,839,831,831,831,,831,839,839,839,839,839,839,839,839,839',
'839,839,839,,839,839,839,,839,839,839,839,839,469,,468,,,,468,468,831',
'468,468,450,,,,,,831,,839,,,839,,,839,839,,,839,,839,469,,,839,469,469',
',469,469,,,450,839,,,450,450,839,839,839,839,,839,839,839,839,,,,,839',
'839,,992,,992,992,992,839,992,839,839,839,299,299,299,299,299,299,,',
',299,299,,,,299,,299,299,299,299,299,299,299,,,,,992,299,299,299,299',
'299,299,299,,833,299,833,833,833,,833,299,299,299,299,299,299,299,299',
'299,299,299,299,,299,299,299,,299,299,299,299,299,459,905,,905,905,905',
',905,833,958,,958,958,958,,958,459,459,,299,,,299,,,299,299,,,299,,299',
'459,,459,299,459,459,905,459,459,,,459,299,459,958,,,299,299,299,299',
',299,299,299,299,,,,,299,299,,,,,,,299,,299,299,299,294,294,294,294',
'294,294,,,,294,294,,,,294,,294,294,294,294,294,294,294,,,,,,294,294',
'294,294,294,294,294,,,294,,,,,,294,294,294,294,294,294,294,294,294,294',
'294,294,,294,294,294,,294,294,294,294,294,465,465,465,465,465,465,465',
',,465,465,,,,,,465,465,,294,,,294,,,294,294,,,294,,294,465,,465,294',
'465,465,,465,465,465,465,465,294,465,,,,294,294,294,294,,294,294,294',
'294,,,,,294,294,,,,,,,294,,294,294,294,0,0,0,0,0,0,,,,0,0,,,,0,,0,0',
'0,0,0,0,0,,,,,,0,0,0,0,0,0,0,,,0,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,,0,0,0',
',0,0,0,0,0,461,,,,,,,,,,,,,,,,461,461,,0,,,0,,,0,0,,,0,,0,461,,461,0',
'461,461,,461,461,,,461,0,461,,,,0,0,0,0,,0,0,0,0,,,,,0,0,,,,,,,0,,0',
'0,0,569,569,569,569,569,569,,,,569,569,,,,569,,569,569,569,569,569,569',
'569,,,,,,569,569,569,569,569,569,569,,,569,,,,,,569,569,569,569,569',
'569,569,569,569,569,569,569,,569,569,569,,569,569,569,569,569,462,,',
',,,,,,,,,,,,,462,462,,569,,,569,,,569,569,,,569,,569,462,,462,569,462',
'462,,462,462,,,462,569,462,,,,569,569,569,569,,569,569,569,569,,,,,569',
'569,,,,,,,569,,569,569,569,654,654,654,654,654,654,,,,654,654,,,,654',
',654,654,654,654,654,654,654,,,,,,654,654,654,654,654,654,654,,,654',
',,,,,654,654,654,654,654,654,654,654,654,654,654,654,,654,654,654,,654',
'654,654,654,654,463,463,463,463,463,463,463,,,463,463,,,,,,463,463,',
'654,,,654,,,654,654,,,654,,654,463,,463,654,463,463,,463,463,463,463',
'463,654,463,,,,654,654,654,654,,654,654,654,654,,,,,654,654,,,,,,,654',
',654,654,654,730,730,730,730,730,730,,,,730,730,,,,730,,730,730,730',
'730,730,730,730,,,,,,730,730,730,730,730,730,730,,,730,,,,,,730,730',
'730,730,730,730,730,730,730,730,730,730,,730,730,730,,730,730,730,730',
'730,448,448,448,448,448,448,448,448,448,448,448,,448,448,,,448,448,',
'730,,,730,,,730,730,,,730,,730,448,,448,730,448,448,,448,448,448,448',
'448,730,448,,,,730,730,730,730,,730,730,730,730,,,,,730,730,,,,,,,730',
',730,730,730,648,648,648,648,648,648,,,,648,648,,,,648,,648,648,648',
'648,648,648,648,,,,,,648,648,648,648,648,648,648,,,648,,,,,,648,648',
'648,648,648,648,648,648,648,648,648,648,,648,648,648,,648,648,648,648',
'648,467,467,467,467,467,467,467,,,467,467,,,,,,467,467,,648,,,648,,',
'648,648,,,648,,648,467,,467,648,467,467,,467,467,467,467,467,648,467',
',,,648,648,648,648,,648,648,648,648,,,,,648,648,,,,,,,648,,648,648,648',
'967,967,967,967,967,967,,,,967,967,,,,967,,967,967,967,967,967,967,967',
',,,,,967,967,967,967,967,967,967,,,967,,,,,,967,967,967,967,967,967',
'967,967,967,967,967,967,,967,967,967,,967,967,967,967,967,464,464,464',
'464,464,464,464,,,464,464,,,,,,464,464,,967,,,967,,,967,967,,,967,,967',
'464,,464,967,464,464,,464,464,464,464,464,967,464,,,,967,967,967,967',
',967,967,967,967,,,,,967,967,,,,,,,967,,967,967,967,735,735,735,735',
'735,735,,,,735,735,,,,735,,735,735,735,735,735,735,735,,,,,,735,735',
'735,735,735,735,735,,,735,,,,,,735,735,735,735,735,735,735,735,735,735',
'735,735,,735,735,735,,735,735,735,735,735,466,466,466,466,466,466,466',
',,466,466,,,,,,466,466,,735,,,735,,,735,735,,,735,,735,466,,466,735',
'466,466,,466,466,466,466,466,735,466,,,,735,735,735,735,,735,735,735',
'735,,,,,735,735,,,,,,,735,,735,735,735,566,566,566,566,566,566,,,,566',
'566,,,,566,,566,566,566,566,566,566,566,,,,,,566,566,566,566,566,566',
'566,,,566,,,,,,566,566,566,566,566,566,566,566,566,566,566,566,,566',
'566,566,,566,566,566,566,566,460,,,,,,,,,,,,,,,,460,460,,566,,,566,',
',566,566,,,566,,566,460,,460,566,460,460,,460,460,,,460,566,460,,,,566',
'566,566,566,,566,566,566,566,,,,,566,566,,,,,,,566,,566,566,566,965',
'965,965,965,965,965,,,,965,965,,,,965,,965,965,965,965,965,965,965,',
',,,,965,965,965,965,965,965,965,,,965,,,,,,965,965,965,965,965,965,965',
'965,965,965,965,965,,965,965,965,,965,965,965,965,965,470,470,470,470',
'470,470,470,,,470,470,,,,,,470,470,,965,,,965,,,965,965,,,965,,965,470',
',470,965,470,470,,470,470,470,470,470,965,470,,,,965,965,965,965,,965',
'965,965,965,,,,,965,965,,,,,,,965,,965,965,965,959,959,959,959,959,959',
',,,959,959,,,,959,,959,959,959,959,959,959,959,,,,,,959,959,959,959',
'959,959,959,,,959,,,,,,959,959,959,959,959,959,959,959,959,959,959,959',
',959,959,959,,959,959,959,959,959,471,471,471,471,471,471,471,471,,471',
'471,,,,,,471,471,,959,,,959,,,959,959,,,959,,959,471,,471,959,471,471',
',471,471,471,471,471,959,471,,,,959,959,959,959,,959,959,959,959,,,',
',959,959,,,,,,,959,,959,959,959,206,206,206,206,206,206,,,,206,206,',
',,206,,206,206,206,206,206,206,206,,,,,,206,206,206,206,206,206,206',
',,206,,,,,,206,206,206,206,206,206,206,206,206,206,206,206,,206,206',
'206,,206,206,206,206,206,447,447,447,447,447,447,447,447,447,447,447',
',447,447,,,447,447,,206,,,206,,,206,206,,,206,,206,447,,447,206,447',
'447,,447,447,447,447,447,206,447,,,,206,206,206,206,,206,206,206,206',
',,,,206,206,,,,247,247,247,206,247,206,206,206,247,247,,,,247,,247,247',
'247,247,247,247,247,,,,,,247,247,247,247,247,247,247,,,247,,,,,,,247',
',,247,247,247,247,247,247,247,247,,247,247,247,,247,247,247,247,247',
'458,458,458,458,458,458,458,,,458,458,,,,,,458,458,,247,,,247,,,247',
'247,,,247,,,458,,458,247,458,458,,458,458,458,458,458,247,458,,,,247',
'247,247,247,,247,247,247,247,,,,,247,247,,,,248,248,248,247,248,247',
'247,247,248,248,,,,248,,248,248,248,248,248,248,248,,,,,,248,248,248',
'248,248,248,248,,,248,,,,,,,248,,,248,248,248,248,248,248,248,248,,248',
'248,248,,248,248,248,248,248,457,,,,,,,,,,,,,,,,457,457,,248,,,248,',
',248,248,,,248,,,457,,,248,457,457,,457,457,,,,248,,,,,248,248,248,248',
',248,248,248,248,,,,,248,248,,,,249,249,249,248,249,248,248,248,249',
'249,,,,249,,249,249,249,249,249,249,249,,,,,,249,249,249,249,249,249',
'249,,,249,,,,,,,249,,,249,249,249,249,249,249,249,249,,249,249,249,',
'249,249,249,249,249,456,,,,,,,,,,,,,,,,456,456,,249,,,249,,,249,249',
',,249,,,456,,456,249,456,456,,456,456,,,,249,,,,,249,249,249,249,,249',
'249,249,249,,,,,249,249,,,,250,250,250,249,250,249,249,249,250,250,',
',,250,,250,250,250,250,250,250,250,,,,,,250,250,250,250,250,250,250',
',,250,,,,,,,250,,,250,250,250,250,250,250,250,250,,250,250,250,,250',
'250,250,250,250,455,,,,,,,,,,,,,,,,455,455,,250,,,250,,,250,250,,,250',
',,455,,455,250,455,455,,455,455,,,,250,,,,,250,250,250,250,,250,250',
'250,250,,,,,250,250,,,,725,725,725,250,725,250,250,250,725,725,,,,725',
',725,725,725,725,725,725,725,,,,,,725,725,725,725,725,725,725,,,725',
',,,,,,725,,,725,725,725,725,725,725,725,725,,725,725,725,,725,725,725',
'725,725,,,,,,,,,,,,,,,,,,,,725,,,725,,,725,725,,,725,,,,,,725,,,,,,',
',,725,,,,,725,725,725,725,,725,725,725,725,,,,,725,725,,,,251,251,251',
'725,251,725,725,725,251,251,,,,251,,251,251,251,251,251,251,251,,,,',
',251,251,251,251,251,251,251,,,251,,,,,,,251,,,251,251,251,251,251,251',
'251,251,,251,251,251,,251,251,251,251,251,,,,,,,,,,,,,,,,,,,,251,,,251',
',,251,251,,,251,,,,,,251,,,,,,,,,251,,,,,251,251,251,251,,251,251,251',
'251,,,,,251,251,,,,731,731,731,251,731,251,251,251,731,731,,,,731,,731',
'731,731,731,731,731,731,,,,,,731,731,731,731,731,731,731,,,731,,,,,',
',731,,,731,731,731,731,731,731,731,731,,731,731,731,,731,731,731,731',
'731,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,731,,,731,,,,,,731,,,,,,,,,731',
',,,,731,731,731,731,,731,731,731,731,,,,,731,731,,,,252,252,252,731',
'252,731,731,731,252,252,,,,252,,252,252,252,252,252,252,252,,,,,,252',
'252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,252,252,252,252,252',
'252,,252,252,252,,252,252,252,252,252,,,,,,,,,,,,,,,,,,,,252,,,252,',
',252,252,,,252,,,,,,252,,,,,,,,,252,,,,,252,252,252,252,,252,252,252',
'252,,,,,252,252,,,,253,253,253,252,253,252,252,252,253,253,,,,253,,253',
'253,253,253,253,253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,',
',253,,,253,253,253,253,253,253,253,253,,253,253,253,,253,253,253,253',
'253,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,253,,,253,,,,,,253,,,,,,,,,253',
',,,,253,253,253,253,,253,253,253,253,,,,,253,253,,,,754,754,754,253',
'754,253,253,253,754,754,,,,754,,754,754,754,754,754,754,754,,,,,,754',
'754,754,754,754,754,754,,,754,,,,,,,754,,,754,754,754,754,754,754,754',
'754,,754,754,754,,754,754,754,754,754,,,,,,,,,,,,,,,,,,,,754,,,754,',
',754,754,,,754,,,,,,754,,,,,,,,,754,,,,,754,754,754,754,,754,754,754',
'754,,,,,754,754,,,,756,756,756,754,756,754,754,754,756,756,,,,756,,756',
'756,756,756,756,756,756,,,,,,756,756,756,756,756,756,756,,,756,,,,,',
',756,,,756,756,756,756,756,756,756,756,,756,756,756,,756,756,756,756',
'756,,,,,,,,,,,,,,,,,,,,756,,,756,,,756,756,,,756,,,,,,756,,,,,,,,,756',
',,,,756,756,756,756,,756,756,756,756,,,,,756,756,,,,254,254,254,756',
'254,756,756,756,254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254',
'254,254,254,254,254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254',
'254,,254,254,254,,254,254,254,254,254,,,,,,,,,,,,,,,,,,,,254,,,254,',
',254,254,,,254,,,,,,254,,,,,,,,,254,,,,,254,254,254,254,,254,254,254',
'254,,,,,254,254,,,,770,770,770,254,770,254,254,254,770,770,,,,770,,770',
'770,770,770,770,770,770,,,,,,770,770,770,770,770,770,770,,,770,,,,,',
',770,,,770,770,770,770,770,770,770,770,,770,770,770,,770,770,770,770',
'770,,,,,,,,,,,,,,,,,,,,770,,,770,,,770,770,,,770,,,,,,770,,,,,,,,,770',
',,,,770,770,770,770,,770,770,770,770,,,,,770,770,,,,771,771,771,770',
'771,770,770,770,771,771,,,,771,,771,771,771,771,771,771,771,,,,,,771',
'771,771,771,771,771,771,,,771,,,,,,,771,,,771,771,771,771,771,771,771',
'771,,771,771,771,,771,771,771,771,771,,,,,,,,,,,,,,,,,,,,771,,,771,',
',771,771,,,771,,,,,,771,,,,,,,,,771,,,,,771,771,771,771,,771,771,771',
'771,,,,,771,771,,,,772,772,772,771,772,771,771,771,772,772,,,,772,,772',
'772,772,772,772,772,772,,,,,,772,772,772,772,772,772,772,,,772,,,,,',
',772,,,772,772,772,772,772,772,772,772,,772,772,772,,772,772,772,772',
'772,,,,,,,,,,,,,,,,,,,,772,,,772,,,772,772,,,772,,,,,,772,,,,,,,,,772',
',,,,772,772,772,772,,772,772,772,772,,,,,772,772,,,,773,773,773,772',
'773,772,772,772,773,773,,,,773,,773,773,773,773,773,773,773,,,,,,773',
'773,773,773,773,773,773,,,773,,,,,,,773,,,773,773,773,773,773,773,773',
'773,,773,773,773,,773,773,773,773,773,,,,,,,,,,,,,,,,,,,,773,,,773,',
',773,773,,,773,,,,,,773,,,,,,,,,773,,,,,773,773,773,773,,773,773,773',
'773,,,,,773,773,,,,775,775,775,773,775,773,773,773,775,775,,,,775,,775',
'775,775,775,775,775,775,,,,,,775,775,775,775,775,775,775,,,775,,,,,',
',775,,,775,775,775,775,775,775,775,775,,775,775,775,,775,775,775,775',
'775,,,,,,,,,,,,,,,,,,,,775,,,775,,,775,775,,,775,,,,,,775,,,,,,,,,775',
',,,,775,775,775,775,,775,775,775,775,,,,,775,775,,,,255,255,255,775',
'255,775,775,775,255,255,,,,255,,255,255,255,255,255,255,255,,,,,,255',
'255,255,255,255,255,255,,,255,,,,,,,255,,,255,255,255,255,255,255,255',
'255,,255,255,255,,255,255,255,255,255,,,,,,,,,,,,,,,,,,,,255,,,255,',
',255,255,,,255,,,,,,255,,,,,,,,,255,,,,,255,255,255,255,,255,255,255',
'255,,,,,255,255,,,,256,256,256,255,256,255,255,255,256,256,,,,256,,256',
'256,256,256,256,256,256,,,,,,256,256,256,256,256,256,256,,,256,,,,,',
',256,,,256,256,256,256,256,256,256,256,,256,256,256,,256,256,256,256',
'256,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,256,,,256,,,,,,256,,,,,,,,,256',
',,,,256,256,256,256,,256,256,256,256,,,,,256,256,,,,263,263,263,256',
'263,256,256,256,263,263,,,,263,,263,263,263,263,263,263,263,,,,,,263',
'263,263,263,263,263,263,,,263,,,,,,,263,,,263,263,263,263,263,263,263',
'263,263,263,263,263,,263,263,263,263,263,,,,,,,,,,,,,,,,,,,,263,,,263',
',,263,263,,,263,,263,,263,,263,,,263,,,,,,263,,,,,263,263,263,263,,263',
'263,263,263,,,,,263,263,,,,264,264,264,263,264,263,263,263,264,264,',
',,264,,264,264,264,264,264,264,264,,,,,,264,264,264,264,264,264,264',
',,264,,,,,,,264,,,264,264,264,264,264,264,264,264,264,264,264,264,,264',
'264,264,264,264,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,264,,,264,,264,,264',
',264,,,264,,,,,,264,,,,,264,264,264,264,,264,264,264,264,,,,,264,264',
',,,272,272,272,264,272,264,264,264,272,272,,,,272,,272,272,272,272,272',
'272,272,,,,,,272,272,272,272,272,272,272,,,272,,,,,,,272,,,272,272,272',
'272,272,272,272,272,272,272,272,272,,272,272,272,272,272,,,,,,,,,,,',
',,,,,,,,272,,,272,,,272,272,,,272,,272,,272,,272,,,272,,,,,,272,,,,',
'272,272,272,272,,272,272,272,272,,,,,272,272,272,,,787,787,787,272,787',
'272,272,272,787,787,,,,787,,787,787,787,787,787,787,787,,,,,,787,787',
'787,787,787,787,787,,,787,,,,,,,787,,,787,787,787,787,787,787,787,787',
',787,787,787,,787,787,,,787,,,,,,,,,,,,,,,,,,,,787,,,787,,,787,787,',
',787,,,,,,,,,,,,,,,,,,,,787,787,787,787,,787,787,787,787,,,,,787,787',
',,,279,279,279,787,279,787,787,787,279,279,,,,279,,279,279,279,279,279',
'279,279,,,,,,279,279,279,279,279,279,279,,,279,,,,,,,279,,,279,279,279',
'279,279,279,279,279,,279,279,279,,279,279,279,279,279,,,,,,,,,,,,,,',
',,,,,279,,,279,,,279,279,,,279,,,,,,279,,,,,,,,,279,,,,,279,279,279',
'279,,279,279,279,279,,,,,279,279,,,,281,281,281,279,281,279,279,279',
'281,281,,,,281,,281,281,281,281,281,281,281,,,,,,281,281,281,281,281',
'281,281,,,281,,,,,,,281,,,281,281,281,281,281,281,281,281,,281,281,281',
',281,281,281,281,281,,,,,,,,,,,,,,,,,,,,281,,,281,,,281,281,,,281,,',
',,,281,,,,,,,,,281,,,,,281,281,281,281,,281,281,281,281,,,,,281,281',
',,,284,284,284,281,284,281,281,281,284,284,,,,284,,284,284,284,284,284',
'284,284,,,,,,284,284,284,284,284,284,284,,,284,,,,,,,284,,,284,284,284',
'284,284,284,284,284,,284,284,284,,284,284,284,284,284,,,,,,,,,,,,,,',
',,,,,284,,,284,,,284,284,,,284,,,,,,284,,,,,,,,,284,,,,,284,284,284',
'284,,284,284,284,284,,,,,284,284,,,,285,285,285,284,285,284,284,284',
'285,285,,,,285,,285,285,285,285,285,285,285,,,,,,285,285,285,285,285',
'285,285,,,285,,,,,,,285,,,285,285,285,285,285,285,285,285,,285,285,285',
',285,285,285,285,285,,,,,,,,,,,,,,,,,,,,285,,,285,,,285,285,,,285,,',
',,,285,,,,,,,,,285,,,,,285,285,285,285,,285,285,285,285,,,,,285,285',
',,,,,,285,,285,285,285,290,290,290,290,290,,,,290,290,,,,290,,290,290',
'290,290,290,290,290,,,,,,290,290,290,290,290,290,290,,,290,,,,,,290',
'290,,290,290,290,290,290,290,290,290,290,,290,290,290,,290,290,290,290',
'290,,,,,,,,,,,,,,,,,,,,290,,,290,,,290,290,,,290,,290,,,,290,,,,,,,',
',290,,,,,290,290,290,290,,290,290,290,290,,,,,290,290,,,,29,29,29,290',
'29,290,290,290,29,29,,,,29,,29,29,29,29,29,29,29,,,,,,29,29,29,29,29',
'29,29,,,29,,,,,,,29,,,29,29,29,29,29,29,29,29,29,29,29,29,,29,29,29',
'29,29,,,,,,,,,,,,,,,,,,,,29,,,29,,,29,29,,,29,,29,,29,,29,,,29,,,,,',
'29,,,,,29,29,29,29,,29,29,29,29,,,,,29,29,,,,30,30,30,29,30,29,29,29',
'30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30,,,',
',,,30,,,30,30,30,30,30,30,30,30,30,30,30,30,,30,30,30,30,30,,,,,,,,',
',,,,,,,,,,,30,,,30,,,30,30,,,30,,30,,30,,30,,,30,,,,,,30,,,,,30,30,30',
'30,,30,30,30,30,,,,,30,30,,,,31,31,31,30,31,30,30,30,31,31,,,,31,,31',
'31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31',
'31,31,31,31,31,31,31,31,31,,31,31,31,31,31,,,,,,,,,,,,,,,,,,,,31,,,31',
',,31,31,,,31,,31,,31,,31,,,31,,,,,,31,,,,,31,31,31,31,,31,31,31,31,',
',,,31,31,,,,298,298,298,31,298,31,31,31,298,298,,,,298,,298,298,298',
'298,298,298,298,,,,,,298,298,298,298,298,298,298,,,298,,,,,,,298,,,298',
'298,298,298,298,298,298,298,,298,298,298,,298,298,,,298,,,,,,,,,,,,',
',,,,,,,298,,,298,,,298,298,,,298,,,987,,987,987,987,987,987,,,,,,,,',
'987,,298,298,298,298,,298,298,298,298,,,,,298,298,,,,298,,987,298,,298',
'298,298,837,837,837,,837,987,987,,837,837,987,,,837,,837,837,837,837',
'837,837,837,,,,,,837,837,837,837,837,837,837,,,837,,,,,,,837,,,837,837',
'837,837,837,837,837,837,,837,837,837,,837,837,837,837,837,,,,,,,,,,',
',,,,,,,,,837,,,837,,,837,837,,,837,,,,,,837,,,,,,,,,837,,,,,837,837',
'837,837,,837,837,837,837,,,,,837,837,,,,842,842,842,837,842,837,837',
'837,842,842,,,,842,,842,842,842,842,842,842,842,,,,,,842,842,842,842',
'842,842,842,,,842,,,,,,,842,,,842,842,842,842,842,842,842,842,,842,842',
'842,,842,842,842,842,842,,,,,,,,,,,,,,,,,,,,842,,,842,,,842,842,,,842',
',842,,,,842,,,,,,,,,842,,,,,842,842,842,842,,842,842,842,842,,,,,842',
'842,,,,34,34,34,842,34,842,842,842,34,34,,,,34,,34,34,34,34,34,34,34',
',,,,,34,34,34,34,34,34,34,,,34,,,,,,,34,,,34,34,34,34,34,34,34,34,,34',
'34,34,,34,34,,,34,,,,,,,,,,,,,,,,,,,,34,,,34,,,34,34,,,34,,34,,,,,,',
',,,,,,,,,,,34,34,34,34,,34,34,34,34,,,,,34,34,,,,35,35,35,34,35,34,34',
'34,35,35,,,,35,,35,35,35,35,35,35,35,,,,,,35,35,35,35,35,35,35,,,35',
',,,,,,35,,,35,35,35,35,35,35,35,35,,35,35,35,,35,35,,,35,,,,,,,,,,,',
',,,,,,,,35,,,35,,,35,35,,,35,,,869,,869,869,869,869,869,,,,,,,,,869',
',35,35,35,35,,35,35,35,35,,,,,35,35,,,,35,,869,35,,35,35,35,859,859',
'859,,859,869,869,,859,859,869,,,859,,859,859,859,859,859,859,859,,,',
',,859,859,859,859,859,859,859,,,859,,,,,,,859,,,859,859,859,859,859',
'859,859,859,859,859,859,859,,859,859,859,859,859,,,,,,,,,,,,,,,,,,,',
'859,,,859,,,859,859,,,859,,,,859,,859,,,859,,,,,,859,,,,,859,859,859',
'859,,859,859,859,859,,,,,859,859,,,,860,860,860,859,860,859,859,859',
'860,860,,,,860,,860,860,860,860,860,860,860,,,,,,860,860,860,860,860',
'860,860,,,860,,,,,,,860,,,860,860,860,860,860,860,860,860,,860,860,860',
',860,860,860,860,860,,,,,,,,,,,,,,,,,,,,860,,,860,,,860,860,,,860,,',
',,,860,,,,,,,,,860,,,,,860,860,860,860,,860,860,860,860,,,,,860,860',
',,,874,874,874,860,874,860,860,860,874,874,,,,874,,874,874,874,874,874',
'874,874,,,,,,874,874,874,874,874,874,874,,,874,,,,,,,874,,,874,874,874',
'874,874,874,874,874,,874,874,874,,874,874,,,874,,,,,,,,,,,,,,,,,,,,874',
',,874,,,874,874,,,874,,,895,,895,895,895,895,895,,,,,,,,,895,,874,874',
'874,874,,874,874,874,874,,,,,874,874,,,,,,895,874,,874,874,874,5,5,5',
'5,5,895,895,,5,5,895,,,5,,5,5,5,5,5,5,5,,,,,,5,5,5,5,5,5,5,,,5,,,,,',
'5,5,5,5,5,5,5,5,5,5,5,5,,5,5,5,,5,5,5,5,5,,,,,,,,,,,,,,,,,,,,5,,,5,',
',5,5,,,5,,5,,,,5,,,,,,,,,5,,,,,5,5,5,5,,5,5,5,5,,,,,5,5,,,,886,886,886',
'5,886,5,5,5,886,886,,,,886,,886,886,886,886,886,886,886,,,,,,886,886',
'886,886,886,886,886,,,886,,,,,,,886,,,886,886,886,886,886,886,886,886',
',886,886,886,,886,886,,,886,,,,,,,,,,,,,,,,,,,,886,,,886,,,886,886,',
',886,,,,,,,,,,,,,,,,,,,,886,886,886,886,,886,886,886,886,,,,,886,886',
',,,315,315,315,886,315,886,886,886,315,315,,,,315,,315,315,315,315,315',
'315,315,,,,,,315,315,315,315,315,315,315,,,315,,,,,,,315,,,315,315,315',
'315,315,315,315,315,,315,315,315,,315,315,,,315,,,,,,,,,,,,,,,,,,,,315',
',,315,,,315,315,,,315,,,,,,,,,,,,,,,,,,,,315,315,315,315,,315,315,315',
'315,,,,,315,315,,,,323,323,323,315,323,315,315,315,323,323,,,,323,,323',
'323,323,323,323,323,323,,,,,,323,323,323,323,323,323,323,,,323,,,,,',
',323,,,323,323,323,323,323,323,323,323,,323,323,323,,323,323,323,323',
'323,,,,,,,,,,,,,,,,,,,,323,,,323,323,,323,323,,,323,,,,,,323,,,,,,,',
',323,,,,,323,323,323,323,,323,323,323,323,,,,,323,323,,,,325,325,325',
'323,325,323,323,323,325,325,,,,325,,325,325,325,325,325,325,325,,,,',
',325,325,325,325,325,325,325,,,325,,,,,,,325,,,325,325,325,325,325,325',
'325,325,,325,325,325,,325,325,325,325,325,,,,,,,,,,,,,,,,,,,,325,,,325',
',,325,325,,,325,,,,,,325,,,,,,,,,325,,,,,325,325,325,325,,325,325,325',
'325,,,,,325,325,,,,42,42,42,325,42,325,325,325,42,42,,,,42,,42,42,42',
'42,42,42,42,,,,,,42,42,42,42,42,42,42,,,42,,,,,,,42,,,42,42,42,42,42',
'42,42,42,,42,42,42,,42,42,42,42,42,,,,,,,,,,,,,,,,,,,,42,,,42,,,42,42',
',,42,,,,,,42,,,,,,,,,42,,,,,42,42,42,42,,42,42,42,42,,,,,42,42,,,,43',
'43,43,42,43,42,42,42,43,43,,,,43,,43,43,43,43,43,43,43,,,,,,43,43,43',
'43,43,43,43,,,43,,,,,,,43,,,43,43,43,43,43,43,43,43,,43,43,43,,43,43',
'43,43,43,,,,,,,,,,,,,,,,,,,,43,,,43,,,43,43,,,43,,,,,,43,,,,,,,,,43',
',,,,43,43,43,43,,43,43,43,43,,,,,43,43,,,,44,44,44,43,44,43,43,43,44',
'44,,,,44,,44,44,44,44,44,44,44,,,,,,44,44,44,44,44,44,44,,,44,,,,,,',
'44,,,44,44,44,44,44,44,44,44,,44,44,44,,44,44,44,44,44,,,,,,,,,,,,,',
',,,,,,44,,,44,,,44,44,,,44,,,,,,44,,,,,,,,,44,,,,,44,44,44,44,,44,44',
'44,44,,,,,44,44,,,,340,340,340,44,340,44,44,44,340,340,,,,340,,340,340',
'340,340,340,340,340,,,,,,340,340,340,340,340,340,340,,,340,,,,,,,340',
',,340,340,340,340,340,340,340,340,,340,340,340,,340,340,340,340,340',
',,,,,,,,,,,,,,,,,,,340,,,340,,,340,340,,,340,,,,,,340,,,,,,,,,340,,',
',,340,340,340,340,,340,340,340,340,,,,,340,340,,,,341,341,341,340,341',
'340,340,340,341,341,,,,341,,341,341,341,341,341,341,341,,,,,,341,341',
'341,341,341,341,341,,,341,,,,,,,341,,,341,341,341,341,341,341,341,341',
',341,341,341,,341,341,341,341,341,,,,,,,,,,,,,,,,,,,,341,,,341,,,341',
'341,,,341,,,,,,341,,,,,,,,,341,,,,,341,341,341,341,,341,341,341,341',
',,,,341,341,,,,983,983,983,341,983,341,341,341,983,983,,,,983,,983,983',
'983,983,983,983,983,,,,,,983,983,983,983,983,983,983,,,983,,,,,,,983',
',,983,983,983,983,983,983,983,983,983,983,983,983,,983,983,983,983,983',
',,,,,,,,,,,,,,,,,,,983,,,983,,,983,983,,,983,,983,,983,,983,,,983,,',
',,,983,,,,,983,983,983,983,,983,983,983,983,,,,,983,983,,,,360,360,360',
'983,360,983,983,983,360,360,,,,360,,360,360,360,360,360,360,360,,,,',
',360,360,360,360,360,360,360,,,360,,,,,,,360,,,360,360,360,360,360,360',
'360,360,,360,360,360,,360,360,360,360,360,,,,,,,,,,,,,,,,,,,,360,,,360',
',,360,360,,,360,,,,,,360,,,,,,,,,360,,,,,360,360,360,360,,360,360,360',
'360,,,,,360,360,,,,376,376,376,360,376,360,360,360,376,376,,,,376,,376',
'376,376,376,376,376,376,,,,,,376,376,376,376,376,376,376,,,376,,,,,',
',376,,,376,376,376,376,376,376,376,376,,376,376,376,,376,376,376,376',
'376,,,,,,,,,,,,,,,,,,,,376,,,376,,,376,376,,,376,,,,,,376,,,,,,,,,376',
',,,,376,376,376,376,,376,376,376,376,,,,,376,376,,,,59,59,59,376,59',
'376,376,376,59,59,,,,59,,59,59,59,59,59,59,59,,,,,,59,59,59,59,59,59',
'59,,,59,,,,,,,59,,,59,59,59,59,59,59,59,59,59,59,59,59,,59,59,59,59',
'59,,,,,,,,,,,,,,,,,,,,59,,,59,,,59,59,,,59,,59,,,,59,,,59,,,,,,59,,',
',,59,59,59,59,,59,59,59,59,,,,,59,59,,,,60,60,60,59,60,59,59,59,60,60',
',,,60,,60,60,60,60,60,60,60,,,,,,60,60,60,60,60,60,60,,,60,,,,,,,60',
',,60,60,60,60,60,60,60,60,60,60,60,60,,60,60,60,60,60,,,,,,,,,,,,,,',
',,,,,60,,,60,,,60,60,,,60,,,,,,60,,,60,,,,,,60,,,,,60,60,60,60,,60,60',
'60,60,,,,,60,60,,,,404,404,404,60,404,60,60,60,404,404,,,,404,,404,404',
'404,404,404,404,404,,,,,,404,404,404,404,404,404,404,,,404,,,,,,,404',
',,404,404,404,404,404,404,404,404,,404,404,404,,404,404,404,404,404',
',,,,,,,,,,,,,,,,,,,404,,,404,,,404,404,,,404,,,,,,404,,,,,,,,,404,,',
',,404,404,404,404,,404,404,404,404,,,,,404,404,,,,63,63,63,404,63,404',
'404,404,63,63,,,,63,,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63',
',,63,,,,,,,63,,,63,63,63,63,63,63,63,63,,63,63,63,,63,63,63,63,63,,',
',,,,,,,,,,,,,,,,,63,,,63,,,63,63,,,63,,,,,,63,,,,,,,,,63,,,,,63,63,63',
'63,,63,63,63,63,,,,,63,63,,,,64,64,64,63,64,63,63,63,64,64,,,,64,,64',
'64,64,64,64,64,64,,,,,,64,64,64,64,64,64,64,,,64,,,,,,,64,,,64,64,64',
'64,64,64,64,64,,64,64,64,,64,64,64,64,64,,,,,,,,,,,,,,,,,,,,64,,,64',
',,64,64,,,64,,,,,,64,,,,,,,,,64,,,,,64,64,64,64,,64,64,64,64,,,,,64',
'64,,,,67,67,67,64,67,64,64,64,67,67,,,,67,,67,67,67,67,67,67,67,,,,',
',67,67,67,67,67,67,67,,,67,,,,,,,67,,,67,67,67,67,67,67,67,67,,67,67',
'67,,67,67,67,67,67,,,,,,,,,,,,,,,,,,,,67,,,67,,,67,67,,,67,,,,,,67,',
',,,,,,,67,,,,,67,67,67,67,,67,67,67,67,,,,,67,67,67,,,,,67,67,,67,67',
'67,68,68,68,,68,,,,68,68,,,,68,,68,68,68,68,68,68,68,,,,,,68,68,68,68',
'68,68,68,,,68,,,,,,,68,,,68,68,68,68,68,68,68,68,,68,68,68,,68,68,,',
'68,,,,,,,,,,,,,,,,,,,,68,,,68,,,68,68,,,68,,68,,,,,,,,,,,,,,,,,,68,68',
'68,68,,68,68,68,68,,,,,68,68,,,,69,69,69,68,69,68,68,68,69,69,,,,69',
',69,69,69,69,69,69,69,,,,,,69,69,69,69,69,69,69,,,69,,,,,,,69,,,69,69',
'69,69,69,69,69,69,,69,69,69,,69,69,,,69,,,,,,,,,,,,,,,,,69,,,69,,,69',
',,69,69,,,69,,,,,,,,,,,,,,,,,,,,69,69,69,69,,69,69,69,69,,,,,69,69,',
',,70,70,70,69,70,69,69,69,70,70,,,,70,,70,70,70,70,70,70,70,,,,,,70',
'70,70,70,70,70,70,,,70,,,,,,,70,,,70,70,70,70,70,70,70,70,,70,70,70',
',70,70,,,70,,,,,,,,,,,,,,,,,,,,70,,,70,,,70,70,,,70,,,,,,,,,,,,,,,,',
',,,70,70,70,70,,70,70,70,70,,,,,70,70,,,,442,442,442,70,442,70,70,70',
'442,442,,,,442,,442,442,442,442,442,442,442,,,,,,442,442,442,442,442',
'442,442,,,442,,,,,,,442,,,442,442,442,442,442,442,442,442,442,442,442',
'442,,442,442,442,442,442,,,,,,,,,,,,,,,,,,,,442,,,442,,,442,442,,,442',
',442,,442,,442,,,442,,,,,,442,,,,,442,442,442,442,,442,442,442,442,',
',,,442,442,,,,444,444,444,442,444,442,442,442,444,444,,,,444,,444,444',
'444,444,444,444,444,,,,,,444,444,444,444,444,444,444,,,444,,,,,,,444',
',,444,444,444,444,444,444,444,444,,444,444,444,,444,444,444,444,444',
',,,,,,,,,,,,,,,,,,,444,,,444,,,444,444,,,444,,,,,,444,,,,,,,,,444,,',
',,444,444,444,444,,444,444,444,444,,,,,444,444,,,,445,445,445,444,445',
'444,444,444,445,445,,,,445,,445,445,445,445,445,445,445,,,,,,445,445',
'445,445,445,445,445,,,445,,,,,,,445,,,445,445,445,445,445,445,445,445',
',445,445,445,,445,445,445,445,445,,,,,,,,,,,,,,,,,,,,445,,,445,,,445',
'445,,,445,,,,,,445,,,,,,,,,445,,,,,445,445,445,445,,445,445,445,445',
',,,,445,445,,,,446,446,446,445,446,445,445,445,446,446,,,,446,,446,446',
'446,446,446,446,446,,,,,,446,446,446,446,446,446,446,,,446,,,,,,,446',
',,446,446,446,446,446,446,446,446,,446,446,446,,446,446,446,446,446',
',,,,,,,,,,,,,,,,,,,446,,,446,,,446,446,,,446,,,,,,446,,,,,,,,,446,,',
',,446,446,446,446,,446,446,446,446,,,,,446,446,,,,,,,446,,446,446,446',
'111,111,111,111,111,,,,111,111,,,,111,,111,111,111,111,111,111,111,',
',,,,111,111,111,111,111,111,111,,,111,,,,,,111,111,111,111,111,111,111',
'111,111,111,111,111,,111,111,111,,111,111,111,111,111,,,,,,,,,,,,,,',
',,,,,111,,,111,,,111,111,,,111,,111,,,,111,,,,,,,,,111,,,,,111,111,111',
'111,,111,111,111,111,,,,,111,111,,,,,,111,111,,111,111,111,116,116,116',
',116,,,,116,116,,,,116,,116,116,116,116,116,116,116,,,,,,116,116,116',
'116,116,116,116,,,116,,,,,,,116,,,116,116,116,116,116,116,116,116,,116',
'116,116,,116,116,116,116,116,,,,,,,,,,,,,,,,,,,,116,,,116,,,116,116',
',,116,,,,,,116,,,,,,,,,116,,,,,116,116,116,116,,116,116,116,116,,,,',
'116,116,,,,486,486,486,116,486,116,116,116,486,486,,,,486,,486,486,486',
'486,486,486,486,,,,,,486,486,486,486,486,486,486,,,486,,,,,,,486,,,486',
'486,486,486,486,486,486,486,486,486,486,486,,486,486,486,486,486,,,',
',,,,,,,,,,,,,,,,486,,,486,,,486,486,,,486,,486,,486,,486,,,486,,,,,',
'486,,,,,486,486,486,486,,486,486,486,486,,,,,486,486,,,,488,488,488',
'486,488,486,486,486,488,488,,,,488,,488,488,488,488,488,488,488,,,,',
',488,488,488,488,488,488,488,,,488,,,,,,,488,,,488,488,488,488,488,488',
'488,488,488,488,488,488,,488,488,488,488,488,,,,,,,,,,,,,,,,,,,,488',
',,488,,,488,488,,,488,,,,488,,488,,,488,,,,,,488,,,,,488,488,488,488',
',488,488,488,488,,,,,488,488,,,,490,490,490,488,490,488,488,488,490',
'490,,,,490,,490,490,490,490,490,490,490,,,,,,490,490,490,490,490,490',
'490,,,490,,,,,,,490,,,490,490,490,490,490,490,490,490,,490,490,490,',
'490,490,490,490,490,,,,,,,,,,,,,,,,,,,,490,,,490,,,490,490,,,490,,,',
',,490,,,,,,,,,490,,,,,490,490,490,490,,490,490,490,490,,,,,490,490,',
',,,,,490,,490,490,490,496,496,496,496,496,,,,496,496,,,,496,,496,496',
'496,496,496,496,496,,,,,,496,496,496,496,496,496,496,,,496,,,,,,496',
'496,496,496,496,496,496,496,496,496,496,496,,496,496,496,,496,496,496',
'496,496,,,,,,,,,,,,,,,,,,,,496,,,496,,,496,496,,,496,,496,,,,496,,,',
',,,,,496,,,,,496,496,496,496,,496,496,496,496,,,,,496,496,,,,,,496,496',
',496,496,496,117,117,117,,117,,,,117,117,,,,117,,117,117,117,117,117',
'117,117,,,,,,117,117,117,117,117,117,117,,,117,,,,,,,117,,,117,117,117',
'117,117,117,117,117,,117,117,117,,117,117,117,117,117,,,,,,,,,,,,,,',
',,,,,117,,,117,,,117,117,,,117,,,,,,117,,,,,,,,,117,,,,,117,117,117',
'117,,117,117,117,117,,,,,117,117,,,,118,118,118,117,118,117,117,117',
'118,118,,,,118,,118,118,118,118,118,118,118,,,,,,118,118,118,118,118',
'118,118,,,118,,,,,,,118,,,118,118,118,118,118,118,118,118,,118,118,118',
',118,118,118,118,118,,,,,,,,,,,,,,,,,,,,118,,,118,,,118,118,,,118,,',
',,,118,,,,,,,,,118,,,,,118,118,118,118,,118,118,118,118,,,,,118,118',
',,,119,119,119,118,119,118,118,118,119,119,,,,119,,119,119,119,119,119',
'119,119,,,,,,119,119,119,119,119,119,119,,,119,,,,,,,119,,,119,119,119',
'119,119,119,119,119,,119,119,119,,119,119,119,119,119,,,,,,,,,,,,,,',
',,,,,119,,,119,,,119,119,,,119,,,,,,119,,,,,,,,,119,,,,,119,119,119',
'119,,119,119,119,119,,,,,119,119,,,,504,504,504,119,504,119,119,119',
'504,504,,,,504,,504,504,504,504,504,504,504,,,,,,504,504,504,504,504',
'504,504,,,504,,,,,,,504,,,504,504,504,504,504,504,504,504,,504,504,504',
',504,504,,,504,,,,,,,,,,,,,,,,,,,,504,,,504,,,504,504,,,504,,,897,,897',
'897,897,897,897,,,,,,,,,897,,504,504,504,504,,504,504,504,504,,,,,504',
'504,,,,,,897,504,,504,504,504,120,120,120,120,120,897,897,,120,120,897',
',,120,,120,120,120,120,120,120,120,,,,,,120,120,120,120,120,120,120',
',,120,,,,,,120,120,,120,120,120,120,120,120,120,120,120,,120,120,120',
',120,120,120,120,120,,,,,,,,,,,,,,,,,,,,120,,,120,,,120,120,,,120,,120',
',,,120,,,,,,,,,120,,,,,120,120,120,120,,120,120,120,120,,,,,120,120',
',,,506,506,506,120,506,120,120,120,506,506,,,,506,,506,506,506,506,506',
'506,506,,,,,,506,506,506,506,506,506,506,,,506,,,,,,,506,,,506,506,506',
'506,506,506,506,506,506,506,506,506,,506,506,506,506,506,,,,,,,,,,,',
',,,,,,,,506,,,506,,,506,506,,,506,,506,,506,,506,,,506,,,,,,506,,,,',
'506,506,506,506,,506,506,506,506,,,,,506,506,,,,512,512,512,506,512',
'506,506,506,512,512,,,,512,,512,512,512,512,512,512,512,,,,,,512,512',
'512,512,512,512,512,,,512,,,,,,,512,,,512,512,512,512,512,512,512,512',
',512,512,512,,512,512,,,512,,,,,,,,,,,,,,,,,,,,512,,,512,,,512,512,',
',512,,,,,,,,,,,,,,,,,,,,512,512,512,512,,512,512,512,512,,,,,512,512',
',,,515,515,515,512,515,512,512,512,515,515,,,,515,,515,515,515,515,515',
'515,515,,,,,,515,515,515,515,515,515,515,,,515,,,,,,,515,,,515,515,515',
'515,515,515,515,515,,515,515,515,,515,515,515,515,515,,,,,,,,,,,,,,',
',,,,,515,,,515,,,515,515,,,515,,,,,,515,,,,,,,,,515,,,,,515,515,515',
'515,,515,515,515,515,,,,,515,515,,,,516,516,516,515,516,515,515,515',
'516,516,,,,516,,516,516,516,516,516,516,516,,,,,,516,516,516,516,516',
'516,516,,,516,,,,,,,516,,,516,516,516,516,516,516,516,516,,516,516,516',
',516,516,516,516,516,,,,,,,,,,,,,,,,,,,,516,,,516,,,516,516,,,516,,',
',,,516,,,,,,,,,516,,,,,516,516,516,516,,516,516,516,516,,,,,516,516',
',,,520,520,520,516,520,516,516,516,520,520,,,,520,,520,520,520,520,520',
'520,520,,,,,,520,520,520,520,520,520,520,,,520,,,,,,,520,,,520,520,520',
'520,520,520,520,520,,520,520,520,,520,520,520,520,520,,,,,,,,,,,,,,',
',,,,,520,,,520,,,520,520,,,520,,,,,,520,,,,,,,,,520,,,,,520,520,520',
'520,,520,520,520,520,,,,,520,520,,,,207,207,207,520,207,520,520,520',
'207,207,,,,207,,207,207,207,207,207,207,207,,,,,,207,207,207,207,207',
'207,207,,,207,,,,,,,207,,,207,207,207,207,207,207,207,207,,207,207,207',
',207,207,207,207,207,,,,,,,,,,,,,,,,,,,,207,,,207,,,207,207,,,207,,207',
',,,207,,,,,,,,,207,,,,,207,207,207,207,,207,207,207,207,,,,,207,207',
',,,526,526,526,207,526,207,207,207,526,526,,,,526,,526,526,526,526,526',
'526,526,,,,,,526,526,526,526,526,526,526,,,526,,,,,,,526,,,526,526,526',
'526,526,526,526,526,526,526,526,526,,526,526,526,526,526,,,,,,,,,,,',
',,,,,,,,526,,,526,,,526,526,,,526,,526,,,,526,,,526,,,,,,526,,,,,526',
'526,526,526,,526,526,526,526,,,,,526,526,,,,529,529,529,526,529,526',
'526,526,529,529,,,,529,,529,529,529,529,529,529,529,,,,,,529,529,529',
'529,529,529,529,,,529,,,,,,,529,,,529,529,529,529,529,529,529,529,529',
'529,529,529,,529,529,529,529,529,,,,,,,,,,,,,,,,,,,,529,,,529,,,529',
'529,,,529,,,,,,529,,,529,,,,,,529,,,,,529,529,529,529,,529,529,529,529',
',,,,529,529,,,,208,208,208,529,208,529,529,529,208,208,,,,208,,208,208',
'208,208,208,208,208,,,,,,208,208,208,208,208,208,208,,,208,,,,,,,208',
',,208,208,208,208,208,208,208,208,,208,208,208,,208,208,208,208,208',
',,,,,,,,,,,,,,,,,,,208,,,208,,,208,208,,,208,,,,,,208,,,,,,,,,208,,',
',,208,208,208,208,,208,208,208,208,,,,,208,208,,,,209,209,209,208,209',
'208,208,208,209,209,,,,209,,209,209,209,209,209,209,209,,,,,,209,209',
'209,209,209,209,209,,,209,,,,,,,209,,,209,209,209,209,209,209,209,209',
'209,209,209,209,,209,209,209,209,209,,,,,,,,,,,,,,,,,,,,209,,,209,,',
'209,209,,,209,,209,,209,,209,,,209,,,,,,209,,,,,209,209,209,209,,209',
'209,209,209,,,,,209,209,,,,212,212,212,209,212,209,209,209,212,212,',
',,212,,212,212,212,212,212,212,212,,,,,,212,212,212,212,212,212,212',
',,212,,,,,,,212,,,212,212,212,212,212,212,212,212,,212,212,212,,212',
'212,212,212,212,,,,,,,,,,,,,,,,,,,,212,,,212,,,212,212,,,212,,,,,,212',
',,,,,,,,212,,,,,212,212,212,212,,212,212,212,212,,,,,212,212,,,,213',
'213,213,212,213,212,212,212,213,213,,,,213,,213,213,213,213,213,213',
'213,,,,,,213,213,213,213,213,213,213,,,213,,,,,,,213,,,213,213,213,213',
'213,213,213,213,,213,213,213,,213,213,213,213,213,,,,,,,,,,,,,,,,,,',
',213,,,213,,,213,213,,,213,,213,,,,213,,,,,,,,,213,,,,,213,213,213,213',
',213,213,213,213,,,,,213,213,,,,554,554,554,213,554,213,213,213,554',
'554,,,,554,,554,554,554,554,554,554,554,,,,,,554,554,554,554,554,554',
'554,,,554,,,,,,,554,,,554,554,554,554,554,554,554,554,,554,554,554,',
'554,554,554,554,554,,,,,,,,,,,,,,,,,,,,554,,,554,,,554,554,,,554,,,',
',,554,,,,,,,,,554,,,,,554,554,554,554,,554,554,554,554,,,,,554,554,',
',,214,214,214,554,214,554,554,554,214,214,,,,214,,214,214,214,214,214',
'214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,,214,,,214,214,214',
'214,214,214,214,214,,214,214,214,,214,214,214,214,214,,,,,,,,,,,,,,',
',,,,,214,,,214,,,214,214,,,214,,,,,,214,,,,,,,,,214,,,,,214,214,214',
'214,,214,214,214,214,,,,,214,214,,,,215,215,215,214,215,214,214,214',
'215,215,,,,215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215',
'215,215,,,215,,,,,,,215,,,215,215,215,215,215,215,215,215,,215,215,215',
',215,215,215,215,215,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,215,,,215,,',
',,,215,,,,,,,,,215,,,,,215,215,215,215,,215,215,215,215,,,,,215,215',
',,,216,216,216,215,216,215,215,215,216,216,,,,216,,216,216,216,216,216',
'216,216,,,,,,216,216,216,216,216,216,216,,,216,,,,,,,216,,,216,216,216',
'216,216,216,216,216,,216,216,216,,216,216,216,216,216,,,,,,,,,,,,,,',
',,,,,216,,,216,,,216,216,,,216,,,,,,216,,,,,,,,,216,,,,,216,216,216',
'216,,216,216,216,216,,,,,216,216,,,,217,217,217,216,217,216,216,216',
'217,217,,,,217,,217,217,217,217,217,217,217,,,,,,217,217,217,217,217',
'217,217,,,217,,,,,,,217,,,217,217,217,217,217,217,217,217,,217,217,217',
',217,217,217,217,217,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,217,,,217,,',
',,,217,,,,,,,,,217,,,,,217,217,217,217,,217,217,217,217,,,,,217,217',
'217,,,574,574,574,217,574,217,217,217,574,574,,,,574,,574,574,574,574',
'574,574,574,,,,,,574,574,574,574,574,574,574,,,574,,,,,,,574,,,574,574',
'574,574,574,574,574,574,,574,574,574,,574,574,574,574,574,,,,,,,,,,',
',,,,,,,,,574,,,574,,,574,574,,,574,,574,,,,574,,,,,,,,,574,,,,,574,574',
'574,574,,574,574,574,574,,,,,574,574,,,,575,575,575,574,575,574,574',
'574,575,575,,,,575,,575,575,575,575,575,575,575,,,,,,575,575,575,575',
'575,575,575,,,575,,,,,,,575,,,575,575,575,575,575,575,575,575,575,575',
'575,575,,575,575,575,575,575,,,,,,,,,,,,,,,,,,,,575,,,575,,,575,575',
',,575,,575,,575,,575,,,575,,,,,,575,,,,,575,575,575,575,,575,575,575',
'575,,,,,575,575,,,,585,585,585,575,585,575,575,575,585,585,,,,585,,585',
'585,585,585,585,585,585,,,,,,585,585,585,585,585,585,585,,,585,,,,,',
',585,,,585,585,585,585,585,585,585,585,585,585,585,585,,585,585,585',
'585,585,,,,,,,,,,,,,,,,,,,,585,,,585,,,585,585,,,585,,585,,585,,585',
',,585,,,,,,585,,,,,585,585,585,585,,585,585,585,585,,,,,585,585,,,,619',
'619,619,585,619,585,585,585,619,619,,,,619,,619,619,619,619,619,619',
'619,,,,,,619,619,619,619,619,619,619,,,619,,,,,,,619,,,619,619,619,619',
'619,619,619,619,,619,619,619,,619,619,619,619,619,,,,,,,,,,,,,,,,,,',
',619,,,619,,,619,619,,,619,,619,,,,619,,,,,,,,,619,,,,,619,619,619,619',
',619,619,619,619,,,,,619,619,,,,620,620,620,619,620,619,619,619,620',
'620,,,,620,,620,620,620,620,620,620,620,,,,,,620,620,620,620,620,620',
'620,,,620,,,,,,,620,,,620,620,620,620,620,620,620,620,,620,620,620,',
'620,620,620,620,620,,,,,,,,,,,,,,,,,,,,620,,,620,,,620,620,,,620,,,',
',,620,,,,,,,,,620,,,,,620,620,620,620,,620,620,620,620,,,,,620,620,',
',,228,228,228,620,228,620,620,620,228,228,,,,228,,228,228,228,228,228',
'228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,228',
'228,228,228,228,228,,228,228,228,,228,228,228,228,228,,,,,,,,,,,,,,',
',,,,,228,,,228,,,228,228,,,228,,,,,,228,,,,,,,,,228,,,,,228,228,228',
'228,,228,228,228,228,,,,,228,228,,,,623,623,623,228,623,228,228,228',
'623,623,,,,623,,623,623,623,623,623,623,623,,,,,,623,623,623,623,623',
'623,623,,,623,,,,,,,623,,,623,623,623,623,623,623,623,623,623,623,623',
'623,,623,623,623,623,623,,,,,,,,,,,,,,,,,,,,623,,,623,,,623,623,,,623',
',623,,623,,623,,,623,,,,,,623,,,,,623,623,623,623,,623,623,623,623,',
',,,623,623,,,,624,624,624,623,624,623,623,623,624,624,,,,624,,624,624',
'624,624,624,624,624,,,,,,624,624,624,624,624,624,624,,,624,,,,,,,624',
',,624,624,624,624,624,624,624,624,624,624,624,624,,624,624,624,624,624',
',,,,,,,,,,,,,,,,,,,624,,,624,,,624,624,,,624,,,,624,,624,,,624,,,,,',
'624,,,,,624,624,624,624,,624,624,624,624,,,,,624,624,,,,625,625,625',
'624,625,624,624,624,625,625,,,,625,,625,625,625,625,625,625,625,,,,',
',625,625,625,625,625,625,625,,,625,,,,,,,625,,,625,625,625,625,625,625',
'625,625,,625,625,625,,625,625,625,625,625,,,,,,,,,,,,,,,,,,,,625,,,625',
',,625,625,,,625,,,,,,625,,,,,,,,,625,,,,,625,625,625,625,,625,625,625',
'625,,,,,625,625,,,,626,626,626,625,626,625,625,625,626,626,,,,626,,626',
'626,626,626,626,626,626,,,,,,626,626,626,626,626,626,626,,,626,,,,,',
',626,,,626,626,626,626,626,626,626,626,,626,626,626,,626,626,626,626',
'626,,,,,,,,,,,,,,,,,,,,626,,,626,,,626,626,,,626,,,,,,626,,,,,,,,,626',
',,,,626,626,626,626,,626,626,626,626,,,,,626,626,,,,630,630,630,626',
'630,626,626,626,630,630,,,,630,,630,630,630,630,630,630,630,,,,,,630',
'630,630,630,630,630,630,,,630,,,,,,,630,,,630,630,630,630,630,630,630',
'630,,630,630,630,,630,630,630,630,630,,,,,,,,,,,,,,,,,,,,630,,,630,',
',630,630,,,630,,,,,,630,,,,,,,,,630,,,,,630,630,630,630,,630,630,630',
'630,,,,,630,630,,,,631,631,631,630,631,630,630,630,631,631,,,,631,,631',
'631,631,631,631,631,631,,,,,,631,631,631,631,631,631,631,,,631,,,,,',
',631,,,631,631,631,631,631,631,631,631,,631,631,631,,631,631,631,631',
'631,,,,,,,,,,,,,,,,,,,,631,,,631,,,631,631,,,631,,,,,,631,,,,,,,,,631',
',,,,631,631,631,631,,631,631,631,631,,,,,631,631,,,,20,20,20,631,20',
'631,631,631,20,20,,,,20,,20,20,20,20,20,20,20,,,,,,20,20,20,20,20,20',
'20,,,20,,,,,,,20,,,20,20,20,20,20,20,20,20,,20,20,20,,20,20,20,20,20',
',,,,,,,,,,,,,,,,,,,20,,,20,,,20,20,,,20,,,,,,20,,,,,,,,,20,,,,,20,20',
'20,20,,20,20,20,20,,,,,20,20,,,,634,634,634,20,634,20,20,20,634,634',
',,,634,,634,634,634,634,634,634,634,,,,,,634,634,634,634,634,634,634',
',,634,,,,,,,634,,,634,634,634,634,634,634,634,634,,634,634,634,,634',
'634,634,634,634,,,,,,,,,,,,,,,,,,,,634,,,634,,,634,634,,,634,,,,,,634',
',,,,,,,,634,,,,,634,634,634,634,,634,634,634,634,,,,,634,634,,,,635',
'635,635,634,635,634,634,634,635,635,,,,635,,635,635,635,635,635,635',
'635,,,,,,635,635,635,635,635,635,635,,,635,,,,,,,635,,,635,635,635,635',
'635,635,635,635,,635,635,635,,635,635,635,635,635,,,,,,,,,,,,,,,,,,',
',635,,,635,,,635,635,,,635,,,,,,635,,,,,,,,,635,,,,,635,635,635,635',
',635,635,635,635,,,,,635,635,,,,231,231,231,635,231,635,635,635,231',
'231,,,,231,,231,231,231,231,231,231,231,,,,,,231,231,231,231,231,231',
'231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231,,231,231,231,',
'231,231,231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,231,,,231,,,',
',,231,,,,,,,,,231,,,,,231,231,231,231,,231,231,231,231,,,,,231,231,',
',,232,232,232,231,232,231,231,231,232,232,,,,232,,232,232,232,232,232',
'232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,232',
'232,232,232,232,232,,232,232,232,,232,232,232,232,232,,,,,,,,,,,,,,',
',,,,,232,,,232,,,232,232,,,232,,,,,,232,,,,,,,,,232,,,,,232,232,232',
'232,,232,232,232,232,,,,,232,232,,,,233,233,233,232,233,232,232,232',
'233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233,233,233,233',
'233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,233,,233,233,233',
',233,233,233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,233,,,233,,',
',,,233,,,,,,,,,233,,,,,233,233,233,233,,233,233,233,233,,,,,233,233',
',,,234,234,234,233,234,233,233,233,234,234,,,,234,,234,234,234,234,234',
'234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234',
'234,234,234,234,234,,234,234,234,,234,234,234,234,234,,,,,,,,,,,,,,',
',,,,,234,,,234,,,234,234,,,234,,,,,,234,,,,,,,,,234,,,,,234,234,234',
'234,,234,234,234,234,,,,,234,234,,,,235,235,235,234,235,234,234,234',
'235,235,,,,235,,235,235,235,235,235,235,235,,,,,,235,235,235,235,235',
'235,235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,235,,235,235,235',
',235,235,235,235,235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,235,,,235,,',
',,,235,,,,,,,,,235,,,,,235,235,235,235,,235,235,235,235,,,,,235,235',
',,,659,659,659,235,659,235,235,235,659,659,,,,659,,659,659,659,659,659',
'659,659,,,,,,659,659,659,659,659,659,659,,,659,,,,,,,659,,,659,659,659',
'659,659,659,659,659,,659,659,659,,659,659,659,659,659,,,,,,,,,,,,,,',
',,,,,659,,,659,,,659,659,,,659,,,,,,659,,,,,,,,,659,,,,,659,659,659',
'659,,659,659,659,659,,,,,659,659,,,,662,662,662,659,662,659,659,659',
'662,662,,,,662,,662,662,662,662,662,662,662,,,,,,662,662,662,662,662',
'662,662,,,662,,,,,,,662,,,662,662,662,662,662,662,662,662,,662,662,662',
',662,662,662,662,662,,,,,,,,,,,,,,,,,,,,662,,,662,,,662,662,,,662,,',
',,,662,,,,,,,,,662,,,,,662,662,662,662,,662,662,662,662,,,,,662,662',
',,,236,236,236,662,236,662,662,662,236,236,,,,236,,236,236,236,236,236',
'236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236',
'236,236,236,236,236,,236,236,236,,236,236,236,236,236,,,,,,,,,,,,,,',
',,,,,236,,,236,,,236,236,,,236,,,,,,236,,,,,,,,,236,,,,,236,236,236',
'236,,236,236,236,236,,,,,236,236,,,,666,666,666,236,666,236,236,236',
'666,666,,,,666,,666,666,666,666,666,666,666,,,,,,666,666,666,666,666',
'666,666,,,666,,,,,,,666,,,666,666,666,666,666,666,666,666,,666,666,666',
',666,666,,,666,,,,,,,,,,,,,,,,,,,,666,,,666,,,666,666,,,666,,,,,,,,',
',,,,,,,,,,,666,666,666,666,,666,666,666,666,,,,,666,666,,,,237,237,237',
'666,237,666,666,666,237,237,,,,237,,237,237,237,237,237,237,237,,,,',
',237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237,237',
'237,237,,237,237,237,,237,237,237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237',
',,237,237,,,237,,,,,,237,,,,,,,,,237,,,,,237,237,237,237,,237,237,237',
'237,,,,,237,237,,,,238,238,238,237,238,237,237,237,238,238,,,,238,,238',
'238,238,238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,',
',238,,,238,238,238,238,238,238,238,238,,238,238,238,,238,238,238,238',
'238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,238,,,238,,,,,,238,,,,,,,,,238',
',,,,238,238,238,238,,238,238,238,238,,,,,238,238,,,,239,239,239,238',
'239,238,238,238,239,239,,,,239,,239,239,239,239,239,239,239,,,,,,239',
'239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,239,239,239,239,239',
'239,,239,239,239,,239,239,239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,',
',239,239,,,239,,,,,,239,,,,,,,,,239,,,,,239,239,239,239,,239,239,239',
'239,,,,,239,239,,,,240,240,240,239,240,239,239,239,240,240,,,,240,,240',
'240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,',
',240,,,240,240,240,240,240,240,240,240,,240,240,240,,240,240,240,240',
'240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,240,,,240,,,,,,240,,,,,,,,,240',
',,,,240,240,240,240,,240,240,240,240,,,,,240,240,,,,241,241,241,240',
'241,240,240,240,241,241,,,,241,,241,241,241,241,241,241,241,,,,,,241',
'241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241',
'241,,241,241,241,,241,241,241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,',
',241,241,,,241,,,,,,241,,,,,,,,,241,,,,,241,241,241,241,,241,241,241',
'241,,,,,241,241,,,,677,677,677,241,677,241,241,241,677,677,,,,677,,677',
'677,677,677,677,677,677,,,,,,677,677,677,677,677,677,677,,,677,,,,,',
',677,,,677,677,677,677,677,677,677,677,,677,677,677,,677,677,,,677,',
',,,,,,,,,,,,,,,,,,677,,,677,,,677,677,,,677,,,,,,,,,,,,,,,,,,,,677,677',
'677,677,,677,677,677,677,,,,,677,677,,,,242,242,242,677,242,677,677',
'677,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242,242,242',
'242,242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,242,,242,242',
'242,,242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,242,,,242',
',,,,,242,,,,,,,,,242,,,,,242,242,242,242,,242,242,242,242,,,,,242,242',
',,,243,243,243,242,243,242,242,242,243,243,,,,243,,243,243,243,243,243',
'243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,243',
'243,243,243,243,243,,243,243,243,,243,243,243,243,243,,,,,,,,,,,,,,',
',,,,,243,,,243,,,243,243,,,243,,,,,,243,,,,,,,,,243,,,,,243,243,243',
'243,,243,243,243,243,,,,,243,243,,,,682,682,682,243,682,243,243,243',
'682,682,,,,682,,682,682,682,682,682,682,682,,,,,,682,682,682,682,682',
'682,682,,,682,,,,,,,682,,,682,682,682,682,682,682,682,682,,682,682,682',
',682,682,682,682,682,,,,,,,,,,,,,,,,,,,,682,,,682,,,682,682,,,682,,682',
',,,682,,,,,,,,,682,,,,,682,682,682,682,,682,682,682,682,,,,,682,682',
',,,244,244,244,682,244,682,682,682,244,244,,,,244,,244,244,244,244,244',
'244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,244',
'244,244,244,244,244,,244,244,244,,244,244,244,244,244,,,,,,,,,,,,,,',
',,,,,244,,,244,,,244,244,,,244,,,,,,244,,,,,,,,,244,,,,,244,244,244',
'244,,244,244,244,244,,,,,244,244,,,,245,245,245,244,245,244,244,244',
'245,245,,,,245,,245,245,245,245,245,245,245,,,,,,245,245,245,245,245',
'245,245,,,245,,,,,,,245,,,245,245,245,245,245,245,245,245,,245,245,245',
',245,245,245,245,245,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,245,,,245,,',
',,,245,,,,,,,,,245,,,,,245,245,245,245,,245,245,245,245,,,,,245,245',
',,,699,699,699,245,699,245,245,245,699,699,,,,699,,699,699,699,699,699',
'699,699,,,,,,699,699,699,699,699,699,699,,,699,,,,,,,699,,,699,699,699',
'699,699,699,699,699,,699,699,699,,699,699,699,699,699,,,,,,,,,,,,,,',
',,,,,699,,,699,,,699,699,,,699,,,,,,699,,,,,,,,,699,,,,,699,699,699',
'699,,699,699,699,699,,,,,699,699,,,,246,246,246,699,246,699,699,699',
'246,246,,,,246,,246,246,246,246,246,246,246,,,,,,246,246,246,246,246',
'246,246,,,246,,,,,,,246,,,246,246,246,246,246,246,246,246,,246,246,246',
',246,246,246,246,246,,,,,,,,,,,,,,,,,,,,246,,,246,,,246,246,,,246,,',
',,,246,,,,,,,,,246,,,,,246,246,246,246,,246,246,246,246,,,,,246,246',
',,,,424,,246,,246,246,246,424,424,424,,,424,424,424,,424,,,,,,,,,424',
'424,424,424,,,,,,,,424,424,,424,424,424,424,424,,,,,,,,,,,,,,,,,,,,',
',,424,424,424,424,424,424,424,424,424,424,424,424,424,424,,,424,424',
'424,,,424,,,424,,,424,424,,424,,424,,424,,424,424,,424,424,424,424,424',
',424,424,424,,,,,,,,,,,,,,424,,,424,424,424,424,56,424,,424,,,,56,56',
'56,,,56,56,56,,56,,,,,,,,,,56,56,56,,,,,,,,56,56,,56,56,56,56,56,,,',
',,,,,,,,,,,,,,,,,,,56,56,56,56,56,56,56,56,56,56,56,56,56,56,,,56,56',
'56,,,56,,,56,,,56,56,,56,,56,,56,,56,56,,56,56,56,56,56,,56,,56,,,,',
',,,,,,,,,56,,,56,56,56,56,425,56,,56,,,,425,425,425,,,425,425,425,,425',
',,,,,,,,425,425,425,425,,,,,,,,425,425,,425,425,425,425,425,,,,,,,,',
',,,,,,,,,,,,,,425,425,425,425,425,425,425,425,425,425,425,425,425,425',
',,425,425,425,,,425,,,425,,,425,425,,425,,425,,425,,425,425,,425,425',
'425,425,425,,425,425,425,899,,899,899,899,899,899,,,,,,,425,,899,425',
'425,425,425,27,425,,425,,,,27,27,27,,,27,27,27,,27,899,,,,,,,,27,27',
'27,899,899,,,,899,,,27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,27,27',
'27,27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,27,',
'27,,27,,27,,27,27,,27,27,27,27,27,,27,27,27,,,,,,,,,,,,,,27,,474,27',
'27,,27,,27,474,474,474,,,474,474,474,646,474,646,646,646,646,646,,,',
'474,474,,,,646,,,,,,474,474,,474,474,474,474,474,,,,,,,,,646,,,,,,,',
',646,646,646,646,,,,646,,,,,,,,,474,,415,,,,,474,,415,415,415,474,474',
'415,415,415,646,415,,,,,,,,,415,415,415,,,,,,474,474,,415,415,,415,415',
'415,415,415,,,,,474,,,474,,,,,474,,,,,,,,,,415,415,415,415,415,415,415',
'415,415,415,415,415,415,415,,,415,415,415,,,415,,415,415,,,415,415,',
'415,,415,,415,,415,415,,415,415,415,415,415,28,415,415,415,,,,28,28',
'28,,,28,28,28,,28,415,,,415,415,,415,,415,28,28,,,,,,,,,28,28,,28,28',
'28,28,28,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,,,28,28,28,,,28,,28,28,,,28,28,,28,,28,,28,,28,28,,28,28,28,28,28',
',28,,28,,,,,,,,,,,,,,28,,,28,28,,28,,28,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,,,,,,8,8,8,8,8,8,8,8,8,8',
',8,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,,8,8,,8,8',
'8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,,,,,8,616,616,616,616,616,616,616',
'616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616',
',,,616,616,616,616,616,616,616,616,616,616,,,,,,616,616,616,616,616',
'616,616,616,616,,,616,,,,,,,,616,616,,616,616,616,616,616,616,616,,',
'616,616,,,,616,616,616,616,,,,,,,,,,,,,,616,616,,616,616,616,616,616',
'616,616,616,616,616,616,616,,,616,616,,,,,,,,,,,,,,616,9,9,9,9,9,9,9',
'9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,,,,9,9,9,9,9,9,9,9,9,9,,,,,,9,9,9',
'9,9,9,9,9,9,,,9,,,,,,,,9,9,,9,9,9,9,9,9,9,,,9,9,,,,9,9,9,9,,,,,,,,,',
',,,,9,9,,9,9,9,9,9,9,9,9,9,9,9,9,,,9,9,,,,,,,,,,,,,,9,395,395,395,395',
'395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395',
'395,395,395,,,,395,395,395,395,395,395,395,395,395,395,,,,,,395,395',
'395,395,395,395,395,395,395,,,395,,,,,,,,395,395,,395,395,395,395,395',
'395,395,,,395,395,,,,395,395,395,395,,,,,,,,,,,,,,395,395,,395,395,395',
'395,395,395,395,395,395,395,395,395,,,395,395,,,,,,,,,,,,,,395,71,71',
'71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,,',
',71,71,71,71,71,71,71,71,71,71,,,,,,71,71,71,71,71,71,71,71,71,71,71',
'71,,71,,,,,,71,71,,71,71,71,71,71,71,71,,,71,71,,,,71,71,71,71,,,,,',
'71,,,,,,,,71,71,,71,71,71,71,71,71,71,71,71,71,71,71,,,71,738,738,738',
'738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738',
'738,738,738,738,,,,738,738,738,738,738,738,738,738,738,738,,,,,,738',
'738,738,738,738,738,738,738,738,,,738,,,,,,,,738,738,,738,738,738,738',
'738,738,738,,,738,738,,,,738,738,738,738,,,,,,,,,,,,,,738,738,,738,738',
'738,738,738,738,738,738,738,738,738,738,441,441,738,,441,,,,,,,,441',
'441,,441,441,441,441,441,441,441,,,441,441,,,,441,441,441,441,,,,,,441',
',,,,,,,441,441,,441,441,441,441,441,441,441,441,441,441,441,441,508',
'508,441,,508,,,,,,,,508,508,,508,508,508,508,508,508,508,,,508,508,',
',,508,508,508,508,,,,,,508,,,,,,,,508,508,,508,508,508,508,508,508,508',
'508,508,508,508,508,584,584,508,,584,,,,,,,,584,584,,584,584,584,584',
'584,584,584,,,584,584,,,,584,584,584,584,,,,,,584,,,,,,,,584,584,,584',
'584,584,584,584,584,584,584,584,584,584,584,985,985,584,,985,,,,,,,',
'985,985,,985,985,985,985,985,985,985,,,985,985,,,,985,985,985,985,,',
',,,985,,,,,,,,985,985,,985,985,985,985,985,985,985,985,985,985,985,985',
'984,984,985,,984,,,,,,,,984,984,,984,984,984,984,984,984,984,,,984,984',
',,,984,984,984,984,,,,,,984,,,,,,,,984,984,,984,984,984,984,984,984',
'984,984,984,984,984,984,577,577,984,,577,,,,,,,,577,577,,577,577,577',
'577,577,577,577,,,577,577,,,,577,577,577,577,,,,,,577,,,,,,,,577,577',
',577,577,577,577,577,577,577,577,577,577,577,577,576,576,577,,576,,',
',,,,,576,576,,576,576,576,576,576,576,576,,,576,576,,,,576,576,576,576',
',,,,,576,,,,,,,,576,576,,576,576,576,576,576,576,576,576,576,576,576',
'576,259,259,576,,259,,,,,,,,259,259,,259,259,259,259,259,259,259,,,259',
'259,,,,259,259,259,259,,,,,,,,,,,,,,259,259,,259,259,259,259,259,259',
'259,259,259,259,259,259,938,938,259,,938,,,,,,,,938,938,,938,938,938',
'938,938,938,938,,,938,938,,,,938,938,938,938,,,,,,938,,,,,,,,938,938',
',938,938,938,938,938,938,938,938,938,938,938,938,583,583,938,,583,,',
',,,,,583,583,,583,583,583,583,583,583,583,,,583,583,,,,583,583,583,583',
',,,,,583,,,,,,,,583,583,,583,583,583,583,583,583,583,583,583,583,583',
'583,507,507,583,,507,,,,,,,,507,507,,507,507,507,507,507,507,507,,,507',
'507,,,,507,507,507,507,,,,,,507,,,,,,,,507,507,,507,507,507,507,507',
'507,507,507,507,507,507,507,211,211,507,,211,,,,,,,,211,211,,211,211',
'211,211,211,211,211,,,211,211,,,,211,211,211,211,,,,,,211,,,,,,,,211',
'211,,211,211,211,211,211,211,211,211,211,211,211,211,210,210,211,,210',
',,,,,,,210,210,,210,210,210,210,210,210,210,,,210,210,,,,210,210,210',
'210,,,,,,210,,,,,,,,210,210,,210,210,210,210,210,210,210,210,210,210',
'210,210,518,518,210,,518,,,,,,,,518,518,,518,518,518,518,518,518,518',
',,518,518,,,,518,518,518,518,,,,,,518,,,,,,,,518,518,,518,518,518,518',
'518,518,518,518,518,518,518,518,517,517,518,,517,,,,,,,,517,517,,517',
'517,517,517,517,517,517,,,517,517,,,,517,517,517,517,,,,,,517,,,,,,',
',517,517,,517,517,517,517,517,517,517,517,517,517,517,517,440,440,517',
',440,,,,,,,,440,440,,440,440,440,440,440,440,440,,,440,440,,,,440,440',
'440,440,,,,,,440,,,,,,,,440,440,,440,440,440,440,440,440,440,440,440',
'440,440,440,,336,440,336,336,336,336,336,,737,,737,737,737,737,737,336',
',,,,,,,737,,534,,534,534,534,534,534,,,,,,336,336,,534,,,,,737,336,336',
'336,336,,,,336,737,737,737,737,,,,737,534,,865,,865,865,865,865,865',
'534,534,534,534,,,,534,865,,867,,867,867,867,867,867,,736,,736,736,736',
'736,736,867,,,,,865,,,736,,,,,,865,865,865,865,,,,865,867,,,,,,,,736',
'867,867,867,867,,,,867,736,736,736,736,,,893,736,893,893,893,893,893',
',969,,969,969,969,969,969,893,,,,,,,,969,,971,,971,971,971,971,971,',
',,,,893,,,971,,,,,969,893,893,893,893,,,,893,969,969,969,969,,,,969',
'971,,973,,973,973,973,973,973,,,971,971,,,,971,973,,975,,975,975,975',
'975,975,,695,,695,695,695,695,695,975,,,,,973,,,695,,,,,,,,973,973,',
',,973,975,,,,,,,,695,,,975,975,,,,975,695,695,695,695,,,697,695,697',
'697,697,697,697,,693,,693,693,693,693,693,697,,,,,,,,693,,1013,,1013',
'1013,1013,1013,1013,,,,,,697,,,1013,,,,,693,,,697,697,,,,697,693,693',
'693,693,,,,693,1013,,,,,,,,,,,1013,1013,,,,1013' ]
        racc_action_check = arr = ::Array.new(25119, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  3546,    52,   nil,   -86,   nil, 10218,   731,   -48, 23044, 23300,
   -17,   nil,    38,    96,  1169,   302,    58,   630,   nil,   -74,
 18912,  2566,   198,   nil,   475,   nil,   169, 22592, 22910,  8753,
  8884,  9015,   nil,  1726,  9547,  9678,   nil,   102,   387,   441,
   191,   303, 10873, 11004, 11135,   167,   576,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil, 22324,   nil,   -69, 11921,
 12052,   -21,   nil, 12314, 12445,   nil,   nil, 12576, 12715, 12846,
 12977, 23556,   nil,   nil,   nil,   nil,   nil,   112,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   248,   nil,   nil,   136,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   299,
   nil, 13640,   nil,   nil,   nil,   nil, 13779, 14450, 14581, 14712,
 14982,   746,   nil,   254,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   168,   nil,  4946, 15768, 16161, 16292,
 24462, 24401, 16423, 16554, 16816, 16947, 17078, 17209,   nil,   nil,
   788,   -80,   194,   256,   -26,   195,   257,   nil, 17995,  1586,
   263, 19305, 19436, 19567, 19698, 19829, 20222, 20484, 20615, 20746,
 20877, 21008, 21270, 21401, 21663, 21794, 22056,  5077,  5208,  5339,
  5470,  5732,  5994,  6125,  6518,  7304,  7435,   nil,   nil, 24157,
   nil,   nil,   262,  7566,  7697,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,  7828,   nil,  1306,   nil,   235,   244,   nil,  8090,
   323,  8221,   nil,   nil,  8352,  8483,   nil,   nil,   298,   nil,
  8622,  1431,   306,   307,  3406,   345,   391,   350,  9146,  3266,
   310,  1208,   889,   449,  1306,   nil,   420,   393,    79,   nil,
   nil,   nil,   439,   301,   399, 10480,   nil,   412,   475,   749,
   nil,   487,   nil, 10611,  1166, 10742,   449,   nil,   476,   489,
   499,   497,   286,   527,   nil,   nil, 24707,   723,   -11,    -9,
 11266, 11397,   135,   607,   499,    21,     8,  1098,   582,     7,
   615,   nil,   nil,   387,   324,   231,   nil,  1029,   nil,    16,
 11659,   nil,   nil,   nil,   794,   615,   531,   395,   312,   345,
   551,   796,   111,   nil,   362,   nil, 11790,   nil,   418,   425,
   306,   464,   525,   -41,   -27,   531,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   535, 23428,   nil,   nil,   nil,   nil,
   539,   nil,   nil,   521, 12183,   525,   nil,   nil,   886,   534,
   nil,   535,   551,   383,   379, 22800,   nil,   nil,   nil,   494,
   384,   600,   nil,   nil, 22190, 22458,   nil,  1866,   nil,   551,
   nil,   nil,   746,   nil,   nil,   nil,   nil,   215,   nil,   611,
 24645, 23730, 13108,   151, 13239, 13370, 13501,  4946,  3966,   642,
  3137,   637,   648,   660,   664,  5470,  5339,  5208,  5077,  3266,
  4526,  3546,  3686,  3826,  4246,  3406,  4386,  4106,  3096,  3126,
  4666,  4806,  1726,   -52, 22721,   nil,   nil,   nil,   nil,   602,
   nil,   -56,   -54,   608,   nil,   nil, 13910,   nil, 14041,   nil,
 14172,   nil,   245,   nil,   nil,   nil, 14311,  1446,  1866,   655,
   669,   nil,   nil,   673, 14843,   697, 15113, 24340, 23791,  1166,
   743,   nil, 15244,   703,   nil, 15375, 15506, 24584, 24523,  2006,
 15637,   833,   836,   521,   760,   nil, 15899,   nil,   nil, 16030,
   nil,   nil,   nil,   nil, 24732,   nil,   725,   726,   nil,   727,
   737,   743,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   741,   665,   nil,   nil, 16685,   nil,   nil,   nil,   842,   nil,
   nil,   nil,   843,   nil,   nil,   847,  4526,   887,   nil,  3686,
    62,    54,   884,   901, 17340, 17471, 24096, 24035,     5,   nil,
   nil,   818,   nil, 24279, 23852, 17602,   nil,   nil,   nil,   124,
   -13,  2426,   823,   nil,   149,   nil,   nil,   nil,   729,   nil,
   nil,   nil,   794,   nil,   nil,   313,   nil,   280,   nil,   nil,
   780,   nil,   788,   nil,   nil,   nil, 23172,   nil,   790, 17733,
 17864,   -32,   831, 18126, 18257, 18388, 18519,   830,   nil,   nil,
 18650, 18781,   831,   nil, 19043, 19174,   nil,   nil,   167,   191,
     0,   604,   798,  1026,   810,   nil, 22685,   nil,  4106,   919,
   -15,   122,   nil,  2146,  3826,   nil,   834,   nil,   885, 19960,
   nil,   nil, 20091,   nil,   862,   -83, 20353,   843,   nil,   850,
    57,    91,   896,   322,   429,   901,   865, 21139,  2706,   933,
   180,   986, 21532,   nil,   880,   nil,   315,    30,   881,   482,
   nil,   nil,   229, 24997,   nil, 24937,   nil, 24989,   nil, 21925,
   nil,   608,   nil,   880,   241,   886,   nil,   nil,   nil,   nil,
   741,   nil,  1004,   nil,   nil,   nil,   nil,  1010,   nil,    26,
   890,     6,   -19,    68,    94,  5601,   283,   549,   nil,   893,
  3966,  5863,   nil,   nil,  1024,  4386, 24796, 24715, 23669,   nil,
   nil,   nil,   nil,   nil,   nil,   886,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   901,  6256,  1446,  6387,   nil,   905,   nil,
  1166,   nil,  2146,   nil,   nil,  1586,   nil,  2986,   nil,  2846,
  6649,  6780,  6911,  7042,   197,  7173,   906,   907,   nil,   917,
   919,   920,   nil,   945,   932,   928,   923,  7959,   nil,   nil,
  1057,   nil,   nil,  1446,   954,  1059,   nil,   nil,   nil,   nil,
   949,   463,   nil,   nil,  1078,   nil,  2286,   974,  1025,   nil,
   nil,  1025,   nil,   nil,  2706,  2846,  1026,   987,   nil,   nil,
   nil,   992,   997,   nil,  1005,  1006,   nil,  1007,   nil,   nil,
  1020,  3112,  1018,  3252,   nil,  1144,   nil,  9285,  1147,  3126,
  2986,   nil,  9416,  2566,    22,    63,   nil,  1149,   272,  2006,
   nil,  1150,  1030,   370,   nil,  1036,  1040,   nil,  2426,  9817,
  9948,  2286,   629,   nil,   nil, 24771,   nil, 24788,   nil,  9725,
   nil,   nil,  1065,  1152, 10079,   462,  1123,   nil,  1066,   nil,
   nil,   nil,  1306,   nil,   nil,    -1, 10349,   nil,   nil,  1067,
  1181,   nil,   nil, 24848,   nil, 10126,   nil, 14890,   nil, 22521,
   nil,   nil,   nil,   nil,   249,  3282,  1059,   nil,    35,   nil,
  1184,  1185,   nil,    49,   nil,   nil,   nil,  1193,   nil,   nil,
   nil,  1119,   nil,  1089,   nil,   nil,  1093,  1114,  1119,  1122,
   nil,  1123,   nil,   465,   nil,   nil,   nil,   886, 24218,   nil,
   nil,   nil,  1026,   928,   958,  1026,  1205,  1068,   nil,   nil,
   nil,  1132,  1137,  1145,  1146,  1147,   670,  1157,  3290,  4806,
   nil,   nil,   nil,   nil,   nil,  4666,   nil,  4246,   nil, 24856,
   nil, 24873,   nil, 24912,   nil, 24929,   nil,   nil,   nil,  1292,
  1202,  1204,  1289, 11528, 23974, 23913,  1238,  9193,   nil,   nil,
   nil,   nil,  3206,  1165,   729,  1290,  1291,  1170,  1180,  1181,
  1185,   nil,   nil,  1189,    36,   -10,    39,   746,  1187,  1197,
   nil,   nil,   nil, 25014,   nil,   nil,   nil,   nil,    23,   nil,
   -99,   nil ]

racc_action_default = [
    -3,  -595,    -1,  -581,    -4,  -595,    -7,  -595,  -595,  -595,
  -595,   -29,  -595,  -595,  -595,  -279,  -595,   -40,   -43,  -583,
  -595,   -48,   -50,   -51,   -52,   -56,  -256,  -256,  -256,  -293,
  -328,  -329,   -68,   -11,   -72,   -80,   -82,  -595,  -486,  -487,
  -595,  -595,  -595,  -595,  -595,  -583,  -237,  -270,  -271,  -272,
  -273,  -274,  -275,  -276,  -277,  -278,  -571,  -281,  -283,  -594,
  -561,  -301,  -389,  -595,  -595,  -306,  -309,  -581,  -595,  -595,
  -595,  -595,  -330,  -331,  -427,  -428,  -429,  -430,  -431,  -452,
  -434,  -435,  -454,  -456,  -439,  -444,  -448,  -450,  -466,  -454,
  -468,  -470,  -471,  -472,  -473,  -569,  -475,  -476,  -570,  -478,
  -479,  -480,  -481,  -482,  -483,  -484,  -485,  -490,  -491,  -595,
    -2,  -582,  -590,  -591,  -592,    -6,  -595,  -595,  -595,  -595,
  -595,    -3,   -17,  -595,  -111,  -112,  -113,  -114,  -115,  -116,
  -117,  -118,  -119,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,  -181,  -182,  -183,  -184,  -185,  -186,  -187,  -188,  -189,
  -190,  -191,  -192,  -193,   -22,  -120,   -11,  -595,  -595,  -246,
  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -583,  -584,   -47,
  -595,  -486,  -487,  -595,  -279,  -595,  -595,  -229,  -595,   -11,
  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,
  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,
  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -396,  -398,  -595,
  -579,  -580,   -57,  -246,  -595,  -300,  -402,  -411,  -413,   -63,
  -408,   -64,  -583,   -65,  -238,  -251,  -260,  -260,  -255,  -595,
  -261,  -595,  -452,  -563,  -595,  -595,   -66,   -67,  -581,   -12,
  -595,   -15,  -595,   -70,   -11,  -583,  -595,   -73,   -76,   -11,
   -88,   -89,  -595,  -595,   -96,  -293,  -296,  -583,  -595,  -328,
  -329,  -332,  -409,  -595,   -78,  -595,   -84,  -290,  -469,  -595,
  -214,  -215,  -230,  -595,   -11,  -595,  -583,  -239,  -587,  -587,
  -595,  -595,  -587,  -595,  -302,  -303,  -519,   -49,  -595,  -595,
  -595,  -595,  -581,  -595,  -582,  -486,  -487,  -595,  -595,  -279,
  -595,  -342,  -343,  -106,  -107,  -595,  -109,  -595,  -279,  -595,
  -595,  -486,  -487,  -321,  -111,  -112,  -153,  -154,  -155,  -171,
  -176,  -183,  -186,  -323,  -595,  -559,  -595,  -432,  -595,  -595,
  -595,  -595,  -595,  -595,  -595,  -595,  1022,    -5,  -593,   -23,
   -24,   -25,   -26,   -27,  -595,  -595,   -19,   -20,   -21,  -121,
  -595,   -30,   -39,  -266,  -595,  -595,  -265,   -31,  -196,  -583,
  -247,  -260,  -260,  -572,  -573,  -256,  -406,  -574,  -575,  -573,
  -572,  -256,  -405,  -407,  -574,  -575,   -37,  -204,   -38,  -595,
   -41,   -42,  -194,  -261,   -44,   -45,   -46,  -583,  -299,  -595,
  -595,  -595,  -246,  -290,  -595,  -595,  -595,  -205,  -206,  -207,
  -208,  -209,  -210,  -211,  -212,  -216,  -217,  -218,  -219,  -220,
  -221,  -222,  -223,  -224,  -225,  -226,  -227,  -228,  -231,  -232,
  -233,  -234,  -583,  -378,  -256,  -572,  -573,   -54,   -58,  -583,
  -257,  -378,  -378,  -583,  -295,  -252,  -595,  -253,  -595,  -258,
  -595,  -262,  -595,  -566,  -568,   -10,  -582,   -14,    -3,  -583,
   -69,  -288,   -85,   -74,  -595,  -583,  -246,  -595,  -595,   -95,
  -595,  -469,  -595,   -81,   -86,  -595,  -595,  -595,  -595,  -235,
  -595,  -419,  -595,  -284,  -595,  -240,  -589,  -588,  -242,  -589,
  -291,  -292,  -562,  -390,  -519,  -393,  -558,  -558,  -502,  -504,
  -504,  -504,  -518,  -520,  -521,  -522,  -523,  -524,  -525,  -526,
  -527,  -595,  -529,  -531,  -533,  -538,  -540,  -541,  -543,  -548,
  -550,  -551,  -553,  -554,  -555,  -595,   -11,  -333,  -334,   -11,
  -595,  -595,  -595,  -595,  -595,  -246,  -595,  -595,  -290,  -314,
  -106,  -107,  -108,  -595,  -595,  -246,  -317,  -492,  -493,  -595,
  -595,   -11,  -497,  -325,  -583,  -433,  -453,  -458,  -595,  -460,
  -436,  -455,  -595,  -457,  -438,  -595,  -441,  -595,  -443,  -446,
  -595,  -447,  -595,  -467,    -8,   -18,  -595,   -28,  -269,  -595,
  -595,  -410,  -595,  -248,  -250,  -595,  -595,   -59,  -245,  -403,
  -595,  -595,   -61,  -404,  -595,  -595,  -298,  -585,  -572,  -573,
  -572,  -573,  -583,  -194,  -595,  -379,  -583,  -381,   -11,   -53,
  -399,  -378,  -243,   -11,   -11,  -294,  -260,  -259,  -263,  -595,
  -564,  -565,  -595,   -13,  -595,   -71,  -595,   -77,   -83,  -583,
  -572,  -573,  -244,   -92,   -94,  -595,   -79,  -595,  -203,  -213,
  -583,  -594,  -594,  -282,  -583,  -287,  -587,  -595,  -583,  -595,
  -500,  -501,  -595,  -595,  -511,  -595,  -514,  -595,  -516,  -595,
  -344,  -595,  -346,  -348,  -355,  -583,  -532,  -542,  -552,  -556,
  -594,  -335,  -594,  -307,  -336,  -337,  -310,  -595,  -313,  -595,
  -583,  -572,  -573,  -576,  -289,  -595,  -106,  -107,  -110,  -583,
   -11,  -595,  -495,  -319,  -595,   -11,  -519,  -519,  -595,  -560,
  -459,  -462,  -463,  -464,  -465,   -11,  -437,  -440,  -442,  -445,
  -449,  -451,  -122,  -267,  -595,  -197,  -595,  -586,  -260,   -33,
  -199,   -34,  -200,   -60,   -35,  -202,   -36,  -201,   -62,  -195,
  -595,  -595,  -595,  -595,  -410,  -595,  -558,  -558,  -360,  -362,
  -362,  -362,  -377,  -595,  -583,  -383,  -527,  -535,  -536,  -546,
  -595,  -401,  -400,   -11,  -595,  -595,  -254,  -264,  -567,   -16,
   -75,   -90,   -87,  -297,  -594,  -340,   -11,  -420,  -594,  -421,
  -422,  -595,  -241,  -391,   -11,   -11,  -595,  -558,  -539,  -557,
  -503,  -504,  -504,  -530,  -504,  -504,  -549,  -504,  -527,  -544,
  -583,  -595,  -353,  -595,  -528,  -595,  -338,  -595,  -595,   -11,
   -11,  -312,  -595,   -11,  -410,  -595,  -410,  -595,  -595,   -11,
  -322,  -595,  -583,  -595,  -326,  -595,  -268,   -32,  -198,  -249,
  -595,  -236,  -595,  -358,  -359,  -368,  -370,  -595,  -373,  -595,
  -375,  -380,  -595,  -595,  -595,  -534,  -595,  -397,  -595,  -412,
  -414,    -9,   -11,  -426,  -341,  -595,  -595,  -424,  -285,  -595,
  -595,  -392,  -499,  -595,  -507,  -595,  -509,  -595,  -512,  -595,
  -515,  -517,  -345,  -347,  -351,  -595,  -356,  -304,  -595,  -305,
  -595,  -595,  -263,  -594,  -315,  -318,  -494,  -595,  -324,  -496,
  -498,  -497,  -461,  -558,  -537,  -361,  -362,  -362,  -362,  -362,
  -547,  -362,  -382,  -583,  -385,  -387,  -388,  -545,  -595,  -290,
   -55,  -425,   -11,   -97,   -98,  -595,  -595,  -105,  -423,  -394,
  -395,  -504,  -504,  -504,  -504,  -349,  -595,  -354,  -595,   -11,
  -308,  -311,  -415,  -416,  -417,   -11,  -320,   -11,  -357,  -595,
  -365,  -595,  -367,  -595,  -371,  -595,  -374,  -376,  -384,  -595,
  -289,  -576,  -419,  -246,  -595,  -595,  -104,  -595,  -505,  -508,
  -510,  -513,  -595,  -352,  -594,  -595,  -595,  -362,  -362,  -362,
  -362,  -386,  -418,  -583,  -572,  -573,  -576,  -103,  -504,  -350,
  -339,  -316,  -327,  -595,  -363,  -366,  -369,  -372,  -410,  -506,
  -362,  -364 ]

clist = [
'216,275,275,275,14,327,373,334,573,14,258,130,130,122,205,621,487,522',
'132,132,2,409,681,297,220,513,323,415,421,311,311,127,127,220,220,220',
'431,14,302,302,406,266,270,338,339,735,428,342,6,259,314,550,835,6,337',
'337,690,691,337,478,657,535,657,311,311,311,542,220,220,111,110,220',
'347,357,357,479,474,318,582,378,293,114,525,528,566,569,532,276,276',
'276,262,269,271,219,127,780,389,390,391,392,713,716,295,660,783,705',
'823,337,337,337,337,804,379,826,849,14,903,328,906,385,220,220,220,220',
'14,14,936,273,286,287,591,648,115,592,343,738,277,277,277,653,654,394',
'838,930,660,114,816,605,607,921,934,487,359,363,839,340,326,684,782',
'6,325,324,374,586,784,350,329,332,393,6,335,331,375,933,881,1,601,603',
'606,606,533,275,601,813,336,687,650,330,473,481,957,482,962,808,885',
'377,616,657,657,380,700,381,382,383,384,434,435,436,437,740,14,220,220',
'220,667,745,220,220,220,220,220,220,676,731,651,416,395,821,402,352',
'204,818,936,14,425,275,275,717,387,660,924,993,872,903,275,930,663,840',
'774,550,341,725,965,296,642,830,1001,415,421,688,730,,,,542,405,,220',
'220,,,405,,,,801,220,1009,823,,401,407,492,,734,426,430,,510,,,,,311',
'14,,863,864,14,,,,302,14,514,,728,524,,793,311,826,823,503,926,,523',
',669,302,570,571,276,266,672,,844,270,14,220,276,337,337,,672,846,1010',
'892,497,,,293,,963,220,220,293,,,511,700,590,26,832,496,495,,26,,,,786',
'480,499,220,,114,594,505,,483,277,26,,967,914,800,,,277,220,26,26,26',
'13,26,,720,823,13,622,,,672,,796,,729,130,593,615,672,748,,748,132,',
',550,572,550,,,,275,26,26,13,127,26,114,,,847,763,,400,,851,768,628',
',,657,,,633,587,,,812,,,968,,,220,,,296,,550,550,644,,416,,431,,,,852',
'853,26,425,843,542,542,26,26,26,26,26,26,660,,781,,275,627,700,,700',
'1002,,632,,,,628,,,,514,,13,,796,,311,14,514,14,,13,13,,311,302,,220',
'680,,,296,809,302,,664,296,,,416,822,220,824,,,,,,425,416,,,,,,649,',
',425,917,,,,6,275,,,,,,955,700,,,275,26,26,26,26,,,26,26,26,26,26,26',
'14,,,14,,,,777,964,220,786,26,786,,,,,,,220,13,416,,656,,14,792,,,416',
'425,,,,,700,425,700,550,1018,,,,13,,26,26,,,130,817,752,,622,26,,132',
'785,810,220,220,942,719,686,220,220,,791,220,127,,700,26,,,,26,438,714',
'714,622,26,14,,959,514,,14,14,,996,311,,,,811,802,732,733,785,302,,311',
'854,13,,26,26,13,,,302,,13,786,,,628,,,633,,26,26,,927,,928,759,761',
',622,484,764,766,845,,430,13,,622,848,26,,,,337,,,,,,337,951,,500,,',
'26,220,758,,,,14,220,,,,14,405,,,,,,,,,14,883,,,,887,,,,,,220,127,,',
',785,,,,694,696,698,,,,,,,,,,,311,,,,710,,,712,,875,,923,26,1003,777',
'14,777,997,777,672,,,,,,,,,14,,,,,,,908,14,14,,,,,,,,15,337,857,,,15',
',,,,,,,,220,,14,14,778,787,14,26,,26,,,14,,,,,26,,15,304,304,,,,,636',
'790,311,,,26,794,795,,,,937,,13,311,13,,,,14,,819,,945,819,,,,349,358',
'358,,,777,,777,,777,,777,,,652,,,,655,978,,,,26,,,26,,714,,,916,26,',
'665,,920,,,,668,,26,15,,,,,26,777,,14,15,15,,13,,,13,,275,,,,39,,425',
',14,39,855,,,,14,,14,,,,13,,26,26,,,,26,26,622,,26,220,,,,,39,301,301',
',,779,,416,26,,,,,26,26,,425,,,,,878,,,,,,,,,,,739,,884,346,362,362',
'362,,13,15,889,890,,13,13,,,,,,,,825,,827,,,894,896,,898,900,15,901',
',910,911,819,787,913,778,787,778,787,778,787,39,,,,,,,26,,39,39,,26',
'26,,,,26,,16,,,,,16,,,26,,,,,941,,,,,,26,,803,,,,13,,,15,,13,,15,16',
',,304,15,,,13,,,,,,834,,,,,,,304,,,26,,,,,,15,,,,,,351,26,,,,982,,,39',
'26,26,778,787,778,787,778,787,778,787,,13,,994,,988,989,990,991,995',
',,39,26,13,26,26,,,26,,,13,13,16,26,,,,,,,,16,16,,778,787,,,,,929,,931',
'38,,13,13,,38,13,866,868,870,,,13,26,,,,1019,,,,,,952,,953,,954,39,',
',,39,38,300,300,301,39,,902,,,,,,13,,,,,,,,301,,,,,,,,919,39,,,,,,345',
'361,361,361,,26,16,,,,,,,429,,,,,,,,,26,,,,,,26,16,26,998,,999,15,1000',
'15,13,,,,,304,38,,,26,,,1008,304,,38,38,13,,,,,,13,,13,,,,,,,,,,,,,1020',
',,,,,,,,,,970,972,974,976,16,977,,,16,,333,,,16,,,,,15,,,15,,,,,,,,',
',,,,,,,,16,,,,,15,,,,,,,744,,38,,,,,,,,,,,,,,,,,,,1014,1015,1016,1017',
'38,,,,,39,,39,,,,,,301,,,,,,1021,,301,,,,15,,,,,15,15,,,,,,,,,,,,304',
',,,,,,,,,,304,,,,,,,38,,,,38,,,,300,38,,,,,39,,,39,,,,403,,,,300,,433',
',,,,,,38,,,,,39,,,,,,,15,,,,,15,,,,,,,,,,15,,,,,,,,,,,,,16,,16,,,,,',
',,,,,,,,,,,489,,491,39,,493,494,,39,39,358,,,,,,15,,,,,301,,,,,,,,15',
',,301,,,,,15,15,,,,,,,,,,,,,16,,,16,,,,,,,,15,15,,,15,,,,,,15,,,,16',
',,,,,,,,39,,,,,39,,,,,,,358,,,39,,,,,15,,,,947,,,,38,,38,,,,429,,300',
',,,618,,,,300,,,,16,,,,,16,16,,,362,,,,,,39,,,,,,,,,,,,,39,,,,15,,,',
'39,39,,,,,,,,,,,,15,38,,,38,,15,,15,,,,39,39,,,39,,,,,,39,,,658,38,333',
',661,,,,16,,,,,16,,,,,,,,,362,16,,,,,,,39,,,,944,,,,,,658,,,333,,,,',
',,,,,,,,,,38,,,,,38,38,,,,706,,,16,,,,,300,,,,,,,,16,,227,300,433,,39',
',16,16,,274,274,274,,,,,,,,,,39,320,321,322,,,39,,39,,16,16,,,16,,,',
'274,274,16,,,,,,753,,,,658,333,,38,,,,,38,,,,,,,,,,38,,,,,16,,,,948',
',,,,,,,,797,,,798,,,,,,,,,,,,,,,,,,,,807,361,,,,,,38,,,,,,,,,,829,,',
'38,,,,16,,,,38,38,,,,,,,,,,,,16,,,,,,16,,16,,,,38,38,,,38,,,,,,38,,',
',,,,,,856,,,,,274,408,274,,,427,432,,,,,361,,,,,,,,38,,227,,943,447',
'448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464',
'465,466,467,468,469,470,471,472,,,,,,,274,274,,,,,,,,274,,,,,,,274,',
'274,,,274,274,38,,,,912,,,,,,,,,,,,,38,,,,333,,38,,38,,,,,,,,,,,,519',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,427,643,408',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,274,,274,,,,,,,,,,,,,,,',
'274,,,,,,,,,678,679,,,,,,,,,,274,,,274,,,,,,,,,,,,,,,,,,,,,,,,,274,',
',,,,,,,,,,,,,,,,,,274,274,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,274,755,,,274,274,760,762,,,,765,767,,,643,769,,,,,,,,,,,,,,,,,',
',,,,,,274,,,274,,,,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,274,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,858,,,,,,,,,,,,,,760',
'762,767,765,,861,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,274,858,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,274' ]
        racc_goto_table = arr = ::Array.new(2861, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'31,33,33,33,22,67,56,86,92,22,138,60,60,15,15,24,73,8,61,61,2,23,10',
'49,22,51,31,37,37,64,64,57,57,22,22,22,18,22,22,22,27,71,71,17,17,96',
'27,17,7,36,50,166,90,7,29,29,121,121,29,39,74,137,74,64,64,64,161,22',
'22,6,4,22,22,22,22,23,37,63,54,149,45,95,69,69,89,89,69,68,68,68,38',
'38,38,20,57,126,17,17,17,17,91,91,46,176,129,116,167,29,29,29,29,11',
'150,172,109,22,114,68,117,150,22,22,22,22,22,22,132,44,44,44,110,40',
'5,111,4,112,70,70,70,40,40,2,11,173,176,95,129,153,153,113,131,73,55',
'55,103,102,101,100,118,7,99,98,97,94,124,93,70,70,7,7,88,85,84,130,12',
'1,154,154,154,154,133,33,154,134,135,136,72,66,139,141,117,142,143,144',
'145,148,62,74,74,151,115,152,155,156,157,29,29,29,29,158,22,22,22,22',
'51,159,22,22,22,22,22,22,51,160,42,71,30,165,28,19,16,169,132,22,57',
'33,33,92,5,176,170,117,129,114,33,173,14,105,24,166,104,106,107,9,23',
'116,131,37,37,137,108,,,,161,68,,22,22,,,68,,,,24,22,117,167,,20,20',
'149,,8,20,20,,31,,,,,64,22,,121,121,22,,,,22,22,49,,54,31,,40,64,172',
'167,50,126,,29,,23,22,17,17,68,71,37,,24,71,22,22,68,29,29,,37,24,90',
'121,7,,,45,,11,22,22,45,,,63,115,29,41,115,6,4,,41,,,,166,44,46,22,',
'95,29,46,,44,70,41,,96,91,51,,,70,22,41,41,41,21,41,,23,167,21,31,,',
'37,,73,,23,60,36,15,37,154,,154,61,,,166,4,166,,,,33,41,41,21,57,41',
'95,,,8,39,,9,,8,39,71,,,74,,,71,95,,,69,,,121,,,22,,,9,,166,166,31,',
'71,,18,,,,137,137,41,57,89,161,161,41,41,41,41,41,41,176,,127,,33,38',
'115,,115,10,,38,,,,71,,,,49,,21,,73,,64,22,49,22,,21,21,,64,22,,22,29',
',,9,27,22,,2,9,,,71,127,22,127,,,,,,57,71,,,,,,38,,,57,8,,,,7,33,,,',
',,115,115,,,33,41,41,41,41,,,41,41,41,41,41,41,22,,,22,,,,120,92,22',
'166,41,166,,,,,,,22,21,71,,70,,22,86,,,71,57,,,,,115,57,115,166,24,',
',,21,,41,41,,,60,120,15,,31,41,,61,31,67,22,22,89,68,70,22,22,,138,22',
'57,,115,41,,,,41,47,95,95,31,41,22,,89,49,,22,22,,8,64,,,,31,49,95,95',
'31,22,,64,56,21,,41,41,21,,,22,,21,166,,,71,,,71,,41,41,,127,,127,20',
'20,,31,47,20,20,17,,20,21,,31,17,41,,,,29,,,,,,29,127,,47,,,41,22,70',
',,,22,22,,,,22,68,,,,,,,,,22,67,,,,67,,,,,,22,57,,,,31,,,,164,164,164',
',,,,,,,,,,64,,,,9,,,9,,22,,120,41,23,120,22,120,127,120,37,,,,,,,,,22',
',,,,,,17,22,22,,,,,,,,25,29,20,,,25,,,,,,,,,22,,22,22,122,168,22,41',
',41,,,22,,,,,41,,25,25,25,,,,,47,9,64,,,41,9,9,,,,22,,21,64,21,,,,22',
',122,,22,122,,,,25,25,25,,,120,,120,,120,,120,,,47,,,,47,31,,,,41,,',
'41,,95,,,95,41,,47,,95,,,,47,,41,25,,,,,41,120,,22,25,25,,21,,,21,,33',
',,,53,,57,,22,53,9,,,,22,,22,,,,21,,41,41,,,,41,41,31,,41,22,,,,,53',
'53,53,,,125,,71,41,,,,,41,41,,57,,,,,9,,,,,,,,,,,47,,9,53,53,53,53,',
'21,25,9,9,,21,21,,,,,,,,125,,125,,,164,164,,164,164,25,164,,9,9,122',
'168,9,122,168,122,168,122,168,53,,,,,,,41,,53,53,,41,41,,,,41,,26,,',
',,26,,,41,,,,,9,,,,,,41,,47,,,,21,,,25,,21,,25,26,,,25,25,,,21,,,,,',
'47,,,,,,,25,,,41,,,,,,25,,,,,,26,41,,,,9,,,53,41,41,122,168,122,168',
'122,168,122,168,,21,,9,,164,164,164,164,9,,,53,41,21,41,41,,,41,,,21',
'21,26,41,,,,,,,,26,26,,122,168,,,,,125,,125,52,,21,21,,52,21,123,123',
'123,,,21,41,,,,164,,,,,,125,,125,,125,53,,,,53,52,52,52,53,53,,47,,',
',,,21,,,,,,,,53,,,,,,,,47,53,,,,,,52,52,52,52,,41,26,,,,,,,26,,,,,,',
',,41,,,,,,41,26,41,125,,125,25,125,25,21,,,,,25,52,,,41,,,125,25,,52',
'52,21,,,,,,21,,21,,,,,,,,,,,,,125,,,,,,,,,,,123,123,123,123,26,123,',
',26,,65,,,26,,,,,25,,,25,,,,,,,,,,,,,,,,,26,,,,,25,,,,,,,25,,52,,,,',
',,,,,,,,,,,,,,123,123,123,123,52,,,,,53,,53,,,,,,53,,,,,,123,,53,,,',
'25,,,,,25,25,,,,,,,,,,,,25,,,,,,,,,,,25,,,,,,,52,,,,52,,,,52,52,,,,',
'53,,,53,,,,65,,,,52,,65,,,,,,,52,,,,,53,,,,,,,25,,,,,25,,,,,,,,,,25',
',,,,,,,,,,,,26,,26,,,,,,,,,,,,,,,,,65,,65,53,,65,65,,53,53,25,,,,,,25',
',,,,53,,,,,,,,25,,,53,,,,,25,25,,,,,,,,,,,,,26,,,26,,,,,,,,25,25,,,25',
',,,,,25,,,,26,,,,,,,,,53,,,,,53,,,,,,,25,,,53,,,,,25,,,,25,,,,52,,52',
',,,26,,52,,,,65,,,,52,,,,26,,,,,26,26,,,53,,,,,,53,,,,,,,,,,,,,53,,',
',25,,,,53,53,,,,,,,,,,,,25,52,,,52,,25,,25,,,,53,53,,,53,,,,,,53,,,65',
'52,65,,65,,,,26,,,,,26,,,,,,,,,53,26,,,,,,,53,,,,53,,,,,,65,,,65,,,',
',,,,,,,,,,,52,,,,,52,52,,,,65,,,26,,,,,52,,,,,,,,26,,32,52,65,,53,,26',
'26,,32,32,32,,,,,,,,,,53,32,32,32,,,53,,53,,26,26,,,26,,,,32,32,26,',
',,,,65,,,,65,65,,52,,,,,52,,,,,,,,,,52,,,,,26,,,,26,,,,,,,,,65,,,65',
',,,,,,,,,,,,,,,,,,,65,52,,,,,,52,,,,,,,,,,65,,,52,,,,26,,,,52,52,,,',
',,,,,,,,26,,,,,,26,,26,,,,52,52,,,52,,,,,,52,,,,,,,,,65,,,,,32,32,32',
',,32,32,,,,,52,,,,,,,,52,,32,,52,32,32,32,32,32,32,32,32,32,32,32,32',
'32,32,32,32,32,32,32,32,32,32,32,32,32,32,,,,,,,32,32,,,,,,,,32,,,,',
',,32,,32,,,32,32,52,,,,65,,,,,,,,,,,,,52,,,,65,,52,,52,,,,,,,,,,,,32',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,32,32,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,,32,,,,,,,,,,,,,,,,32,,,',
',,,,,32,32,,,,,,,,,,32,,,32,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,',
',,,,,,32,32,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,32,,,32',
'32,32,32,,,,32,32,,,32,32,,,,,,,,,,,,,,,,,,,,,,,,32,,,32,,,,,,,,,,,',
',,,,,,,,32,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,32,,32,,,,,,,,,,,,,,32,32,32,32,,32,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,',
',32,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32' ]
        racc_goto_check = arr = ::Array.new(2861, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   175,    20,   nil,    67,   127,    66,    48,  -307,   220,
  -499,  -570,  -630,   nil,  -250,     5,   221,   -20,  -177,   161,
    73,   384,     4,  -188,  -394,   827,  1089,  -167,    21,    -9,
   104,   -19,  1877,   -28,   nil,   nil,    25,  -183,    64,  -203,
  -342,   352,  -253,   nil,    98,    47,    69,   430,   nil,   -11,
    15,  -290,  1221,   959,  -277,    83,   -65,    23,   nil,   nil,
     3,    10,  -203,    36,    -5,  1325,   128,   -54,    58,  -246,
   107,    15,  -288,  -261,  -426,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   101,   111,   -54,   nil,   108,  -254,
  -658,  -470,  -335,    97,  -196,    78,  -547,    91,   104,   102,
  -366,    98,    90,  -559,   184,  -469,  -328,  -662,  -326,  -619,
  -233,  -240,  -458,  -705,  -715,  -351,  -446,  -715,  -488,   nil,
   -69,  -480,   199,   449,  -482,   351,  -551,  -170,   nil,  -542,
  -700,  -723,  -747,  -156,  -504,   122,  -348,  -275,   -12,   -69,
   nil,   -78,   -77,  -721,  -489,  -614,   nil,   nil,   118,     0,
    30,   116,   117,  -234,  -203,   117,   117,   117,  -389,  -384,
  -365,  -270,   nil,   nil,   230,  -466,  -285,  -587,   200,  -458,
  -622,   nil,  -582,  -724,   nil,   nil,  -385 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   344,   291,   nil,   521,
   nil,   836,   nil,   288,   289,   nil,   nil,   nil,    11,    12,
    18,   226,   319,   nil,   nil,   224,   225,   nil,   nil,    17,
   nil,   439,    21,    22,    23,    24,   nil,   675,   nil,   nil,
   nil,   308,   nil,    25,   410,    32,   nil,   nil,    34,    37,
    36,   nil,   221,   222,   356,   nil,   129,   418,   128,   131,
    75,    76,   nil,    90,    46,   280,   nil,   805,   411,   nil,
   412,   423,   629,   485,   278,   264,    47,    48,    49,    50,
    51,    52,    53,    54,    55,   nil,   265,    61,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   567,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   702,   549,   nil,   703,   925,   776,
   537,   nil,   538,   nil,   nil,   539,   nil,   541,   645,   nil,
   nil,   nil,   547,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   422,   nil,   nil,   nil,   nil,   nil,    74,    77,    78,   nil,
   nil,   nil,   nil,   nil,   596,   nil,   nil,   nil,   nil,   nil,
   nil,   820,   737,   536,   nil,   540,   828,   552,   554,   555,
   788,   558,   559,   789,   562,   565,   283 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 145, :_reduce_none,
  2, 146, :_reduce_2,
  0, 147, :_reduce_3,
  1, 147, :_reduce_4,
  3, 147, :_reduce_5,
  2, 147, :_reduce_6,
  1, 149, :_reduce_none,
  4, 149, :_reduce_8,
  4, 152, :_reduce_9,
  2, 153, :_reduce_10,
  0, 157, :_reduce_11,
  1, 157, :_reduce_12,
  3, 157, :_reduce_13,
  2, 157, :_reduce_14,
  1, 158, :_reduce_none,
  4, 158, :_reduce_16,
  0, 174, :_reduce_17,
  4, 151, :_reduce_18,
  3, 151, :_reduce_19,
  3, 151, :_reduce_20,
  3, 151, :_reduce_21,
  2, 151, :_reduce_22,
  3, 151, :_reduce_23,
  3, 151, :_reduce_24,
  3, 151, :_reduce_25,
  3, 151, :_reduce_26,
  3, 151, :_reduce_27,
  4, 151, :_reduce_28,
  1, 151, :_reduce_none,
  3, 151, :_reduce_30,
  3, 151, :_reduce_31,
  6, 151, :_reduce_32,
  5, 151, :_reduce_33,
  5, 151, :_reduce_34,
  5, 151, :_reduce_35,
  5, 151, :_reduce_36,
  3, 151, :_reduce_37,
  3, 151, :_reduce_38,
  3, 151, :_reduce_39,
  1, 151, :_reduce_none,
  3, 162, :_reduce_41,
  3, 162, :_reduce_42,
  1, 173, :_reduce_none,
  3, 173, :_reduce_44,
  3, 173, :_reduce_45,
  3, 173, :_reduce_46,
  2, 173, :_reduce_47,
  1, 173, :_reduce_none,
  1, 161, :_reduce_none,
  1, 164, :_reduce_none,
  1, 164, :_reduce_none,
  1, 178, :_reduce_none,
  4, 178, :_reduce_53,
  0, 186, :_reduce_54,
  5, 183, :_reduce_55,
  1, 185, :_reduce_none,
  2, 177, :_reduce_57,
  3, 177, :_reduce_58,
  4, 177, :_reduce_59,
  5, 177, :_reduce_60,
  4, 177, :_reduce_61,
  5, 177, :_reduce_62,
  2, 177, :_reduce_63,
  2, 177, :_reduce_64,
  2, 177, :_reduce_65,
  2, 177, :_reduce_66,
  2, 177, :_reduce_67,
  1, 163, :_reduce_68,
  3, 163, :_reduce_69,
  1, 190, :_reduce_70,
  3, 190, :_reduce_71,
  1, 189, :_reduce_none,
  2, 189, :_reduce_73,
  3, 189, :_reduce_74,
  5, 189, :_reduce_75,
  2, 189, :_reduce_76,
  4, 189, :_reduce_77,
  2, 189, :_reduce_78,
  4, 189, :_reduce_79,
  1, 189, :_reduce_80,
  3, 189, :_reduce_81,
  1, 193, :_reduce_none,
  3, 193, :_reduce_83,
  2, 192, :_reduce_84,
  3, 192, :_reduce_85,
  1, 195, :_reduce_86,
  3, 195, :_reduce_87,
  1, 194, :_reduce_88,
  1, 194, :_reduce_89,
  4, 194, :_reduce_90,
  3, 194, :_reduce_91,
  3, 194, :_reduce_92,
  3, 194, :_reduce_93,
  3, 194, :_reduce_94,
  2, 194, :_reduce_95,
  1, 194, :_reduce_96,
  1, 170, :_reduce_97,
  1, 170, :_reduce_98,
  4, 170, :_reduce_99,
  3, 170, :_reduce_100,
  3, 170, :_reduce_101,
  3, 170, :_reduce_102,
  3, 170, :_reduce_103,
  2, 170, :_reduce_104,
  1, 170, :_reduce_105,
  1, 198, :_reduce_106,
  1, 198, :_reduce_none,
  2, 199, :_reduce_108,
  1, 199, :_reduce_109,
  3, 199, :_reduce_110,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 203, :_reduce_116,
  1, 203, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 160, :_reduce_120,
  0, 206, :_reduce_121,
  4, 160, :_reduce_122,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  3, 176, :_reduce_194,
  5, 176, :_reduce_195,
  3, 176, :_reduce_196,
  5, 176, :_reduce_197,
  6, 176, :_reduce_198,
  5, 176, :_reduce_199,
  5, 176, :_reduce_200,
  5, 176, :_reduce_201,
  5, 176, :_reduce_202,
  4, 176, :_reduce_203,
  3, 176, :_reduce_204,
  3, 176, :_reduce_205,
  3, 176, :_reduce_206,
  3, 176, :_reduce_207,
  3, 176, :_reduce_208,
  3, 176, :_reduce_209,
  3, 176, :_reduce_210,
  3, 176, :_reduce_211,
  3, 176, :_reduce_212,
  4, 176, :_reduce_213,
  2, 176, :_reduce_214,
  2, 176, :_reduce_215,
  3, 176, :_reduce_216,
  3, 176, :_reduce_217,
  3, 176, :_reduce_218,
  3, 176, :_reduce_219,
  3, 176, :_reduce_220,
  3, 176, :_reduce_221,
  3, 176, :_reduce_222,
  3, 176, :_reduce_223,
  3, 176, :_reduce_224,
  3, 176, :_reduce_225,
  3, 176, :_reduce_226,
  3, 176, :_reduce_227,
  3, 176, :_reduce_228,
  2, 176, :_reduce_229,
  2, 176, :_reduce_230,
  3, 176, :_reduce_231,
  3, 176, :_reduce_232,
  3, 176, :_reduce_233,
  3, 176, :_reduce_234,
  3, 176, :_reduce_235,
  6, 176, :_reduce_236,
  1, 176, :_reduce_none,
  1, 209, :_reduce_none,
  1, 210, :_reduce_none,
  2, 210, :_reduce_none,
  4, 210, :_reduce_241,
  2, 210, :_reduce_242,
  3, 215, :_reduce_243,
  0, 216, :_reduce_244,
  1, 216, :_reduce_none,
  0, 167, :_reduce_246,
  1, 167, :_reduce_none,
  2, 167, :_reduce_none,
  4, 167, :_reduce_249,
  2, 167, :_reduce_250,
  1, 188, :_reduce_251,
  2, 188, :_reduce_252,
  2, 188, :_reduce_253,
  4, 188, :_reduce_254,
  1, 188, :_reduce_255,
  0, 219, :_reduce_256,
  2, 182, :_reduce_257,
  2, 218, :_reduce_258,
  2, 217, :_reduce_259,
  0, 217, :_reduce_260,
  1, 212, :_reduce_261,
  2, 212, :_reduce_262,
  3, 212, :_reduce_263,
  4, 212, :_reduce_264,
  1, 172, :_reduce_265,
  1, 172, :_reduce_none,
  3, 171, :_reduce_267,
  4, 171, :_reduce_268,
  2, 171, :_reduce_269,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_280,
  0, 242, :_reduce_281,
  4, 208, :_reduce_282,
  0, 243, :_reduce_283,
  0, 244, :_reduce_284,
  6, 208, :_reduce_285,
  0, 245, :_reduce_286,
  4, 208, :_reduce_287,
  3, 208, :_reduce_288,
  3, 208, :_reduce_289,
  2, 208, :_reduce_290,
  3, 208, :_reduce_291,
  3, 208, :_reduce_292,
  1, 208, :_reduce_293,
  4, 208, :_reduce_294,
  3, 208, :_reduce_295,
  1, 208, :_reduce_296,
  5, 208, :_reduce_297,
  4, 208, :_reduce_298,
  3, 208, :_reduce_299,
  2, 208, :_reduce_300,
  1, 208, :_reduce_none,
  2, 208, :_reduce_302,
  2, 208, :_reduce_303,
  6, 208, :_reduce_304,
  6, 208, :_reduce_305,
  0, 246, :_reduce_306,
  0, 247, :_reduce_307,
  7, 208, :_reduce_308,
  0, 248, :_reduce_309,
  0, 249, :_reduce_310,
  7, 208, :_reduce_311,
  5, 208, :_reduce_312,
  4, 208, :_reduce_313,
  0, 250, :_reduce_314,
  0, 251, :_reduce_315,
  9, 208, :_reduce_316,
  0, 252, :_reduce_317,
  6, 208, :_reduce_318,
  0, 253, :_reduce_319,
  7, 208, :_reduce_320,
  0, 254, :_reduce_321,
  5, 208, :_reduce_322,
  0, 255, :_reduce_323,
  6, 208, :_reduce_324,
  0, 256, :_reduce_325,
  0, 257, :_reduce_326,
  9, 208, :_reduce_327,
  1, 208, :_reduce_328,
  1, 208, :_reduce_329,
  1, 208, :_reduce_330,
  1, 208, :_reduce_331,
  1, 166, :_reduce_none,
  1, 233, :_reduce_none,
  1, 233, :_reduce_none,
  2, 233, :_reduce_335,
  1, 235, :_reduce_none,
  1, 235, :_reduce_none,
  1, 234, :_reduce_none,
  5, 234, :_reduce_339,
  1, 155, :_reduce_none,
  2, 155, :_reduce_341,
  1, 237, :_reduce_none,
  1, 237, :_reduce_none,
  1, 258, :_reduce_344,
  3, 258, :_reduce_345,
  1, 261, :_reduce_346,
  3, 261, :_reduce_347,
  1, 260, :_reduce_none,
  4, 260, :_reduce_349,
  6, 260, :_reduce_350,
  3, 260, :_reduce_351,
  5, 260, :_reduce_352,
  2, 260, :_reduce_353,
  4, 260, :_reduce_354,
  1, 260, :_reduce_355,
  3, 260, :_reduce_356,
  4, 262, :_reduce_357,
  2, 262, :_reduce_358,
  2, 262, :_reduce_359,
  1, 262, :_reduce_360,
  2, 267, :_reduce_361,
  0, 267, :_reduce_362,
  6, 268, :_reduce_363,
  8, 268, :_reduce_364,
  4, 268, :_reduce_365,
  6, 268, :_reduce_366,
  4, 268, :_reduce_367,
  2, 268, :_reduce_none,
  6, 268, :_reduce_369,
  2, 268, :_reduce_370,
  4, 268, :_reduce_371,
  6, 268, :_reduce_372,
  2, 268, :_reduce_373,
  4, 268, :_reduce_374,
  2, 268, :_reduce_375,
  4, 268, :_reduce_376,
  1, 268, :_reduce_none,
  0, 184, :_reduce_378,
  1, 184, :_reduce_379,
  3, 272, :_reduce_380,
  1, 272, :_reduce_381,
  4, 272, :_reduce_382,
  1, 273, :_reduce_383,
  4, 273, :_reduce_384,
  1, 274, :_reduce_385,
  3, 274, :_reduce_386,
  1, 275, :_reduce_387,
  1, 275, :_reduce_none,
  0, 279, :_reduce_389,
  0, 280, :_reduce_390,
  4, 232, :_reduce_391,
  4, 277, :_reduce_392,
  1, 277, :_reduce_393,
  3, 278, :_reduce_394,
  3, 278, :_reduce_395,
  0, 283, :_reduce_396,
  5, 282, :_reduce_397,
  2, 179, :_reduce_398,
  4, 179, :_reduce_399,
  5, 179, :_reduce_400,
  5, 179, :_reduce_401,
  2, 231, :_reduce_402,
  4, 231, :_reduce_403,
  4, 231, :_reduce_404,
  3, 231, :_reduce_405,
  3, 231, :_reduce_406,
  3, 231, :_reduce_407,
  2, 231, :_reduce_408,
  1, 231, :_reduce_409,
  4, 231, :_reduce_410,
  0, 285, :_reduce_411,
  5, 230, :_reduce_412,
  0, 286, :_reduce_413,
  5, 230, :_reduce_414,
  5, 236, :_reduce_415,
  1, 287, :_reduce_416,
  1, 287, :_reduce_none,
  6, 154, :_reduce_418,
  0, 154, :_reduce_419,
  1, 288, :_reduce_420,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  2, 289, :_reduce_423,
  1, 289, :_reduce_none,
  2, 156, :_reduce_425,
  1, 156, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 221, :_reduce_430,
  1, 291, :_reduce_431,
  2, 291, :_reduce_432,
  3, 292, :_reduce_433,
  1, 292, :_reduce_434,
  1, 292, :_reduce_435,
  3, 222, :_reduce_436,
  4, 223, :_reduce_437,
  3, 224, :_reduce_438,
  0, 296, :_reduce_439,
  3, 296, :_reduce_440,
  1, 297, :_reduce_441,
  2, 297, :_reduce_442,
  3, 226, :_reduce_443,
  0, 299, :_reduce_444,
  3, 299, :_reduce_445,
  3, 225, :_reduce_446,
  3, 227, :_reduce_447,
  0, 300, :_reduce_448,
  3, 300, :_reduce_449,
  0, 301, :_reduce_450,
  3, 301, :_reduce_451,
  0, 293, :_reduce_452,
  2, 293, :_reduce_453,
  0, 294, :_reduce_454,
  2, 294, :_reduce_455,
  0, 295, :_reduce_456,
  2, 295, :_reduce_457,
  1, 298, :_reduce_458,
  2, 298, :_reduce_459,
  0, 303, :_reduce_460,
  4, 298, :_reduce_461,
  1, 302, :_reduce_462,
  1, 302, :_reduce_463,
  1, 302, :_reduce_464,
  1, 302, :_reduce_none,
  1, 204, :_reduce_466,
  3, 205, :_reduce_467,
  1, 290, :_reduce_468,
  2, 290, :_reduce_469,
  1, 207, :_reduce_470,
  1, 207, :_reduce_471,
  1, 207, :_reduce_472,
  1, 207, :_reduce_473,
  1, 196, :_reduce_474,
  1, 196, :_reduce_475,
  1, 196, :_reduce_476,
  1, 196, :_reduce_477,
  1, 196, :_reduce_478,
  1, 197, :_reduce_479,
  1, 197, :_reduce_480,
  1, 197, :_reduce_481,
  1, 197, :_reduce_482,
  1, 197, :_reduce_483,
  1, 197, :_reduce_484,
  1, 197, :_reduce_485,
  1, 228, :_reduce_486,
  1, 228, :_reduce_487,
  1, 165, :_reduce_488,
  1, 165, :_reduce_489,
  1, 169, :_reduce_490,
  1, 169, :_reduce_491,
  1, 238, :_reduce_492,
  0, 304, :_reduce_493,
  4, 238, :_reduce_494,
  2, 238, :_reduce_495,
  3, 240, :_reduce_496,
  0, 306, :_reduce_497,
  3, 240, :_reduce_498,
  4, 305, :_reduce_499,
  2, 305, :_reduce_500,
  2, 305, :_reduce_501,
  1, 305, :_reduce_502,
  2, 308, :_reduce_503,
  0, 308, :_reduce_504,
  6, 281, :_reduce_505,
  8, 281, :_reduce_506,
  4, 281, :_reduce_507,
  6, 281, :_reduce_508,
  4, 281, :_reduce_509,
  6, 281, :_reduce_510,
  2, 281, :_reduce_511,
  4, 281, :_reduce_512,
  6, 281, :_reduce_513,
  2, 281, :_reduce_514,
  4, 281, :_reduce_515,
  2, 281, :_reduce_516,
  4, 281, :_reduce_517,
  1, 281, :_reduce_518,
  0, 281, :_reduce_519,
  1, 276, :_reduce_520,
  1, 276, :_reduce_521,
  1, 276, :_reduce_522,
  1, 276, :_reduce_523,
  1, 259, :_reduce_none,
  1, 259, :_reduce_525,
  1, 310, :_reduce_526,
  1, 311, :_reduce_527,
  3, 311, :_reduce_528,
  1, 269, :_reduce_529,
  3, 269, :_reduce_530,
  1, 312, :_reduce_531,
  2, 313, :_reduce_532,
  1, 313, :_reduce_533,
  2, 314, :_reduce_534,
  1, 314, :_reduce_535,
  1, 263, :_reduce_536,
  3, 263, :_reduce_537,
  1, 307, :_reduce_538,
  3, 307, :_reduce_539,
  1, 315, :_reduce_none,
  1, 315, :_reduce_none,
  2, 264, :_reduce_542,
  1, 264, :_reduce_543,
  3, 316, :_reduce_544,
  3, 317, :_reduce_545,
  1, 270, :_reduce_546,
  3, 270, :_reduce_547,
  1, 309, :_reduce_548,
  3, 309, :_reduce_549,
  1, 318, :_reduce_none,
  1, 318, :_reduce_none,
  2, 271, :_reduce_552,
  1, 271, :_reduce_553,
  1, 319, :_reduce_none,
  1, 319, :_reduce_none,
  2, 266, :_reduce_556,
  2, 265, :_reduce_557,
  0, 265, :_reduce_558,
  1, 241, :_reduce_none,
  3, 241, :_reduce_560,
  0, 229, :_reduce_561,
  2, 229, :_reduce_none,
  1, 214, :_reduce_563,
  3, 214, :_reduce_564,
  3, 320, :_reduce_565,
  2, 320, :_reduce_566,
  4, 320, :_reduce_567,
  2, 320, :_reduce_568,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  0, 148, :_reduce_none,
  1, 148, :_reduce_none,
  0, 175, :_reduce_none,
  1, 175, :_reduce_none,
  2, 191, :_reduce_585,
  2, 168, :_reduce_586,
  0, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 239, :_reduce_590,
  1, 239, :_reduce_none,
  1, 150, :_reduce_none,
  2, 150, :_reduce_none,
  0, 211, :_reduce_594 ]

racc_reduce_n = 595

racc_shift_n = 1022

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tDSTAR => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tREGEXP_OPT => 119,
  :tWORDS_BEG => 120,
  :tQWORDS_BEG => 121,
  :tSYMBOLS_BEG => 122,
  :tQSYMBOLS_BEG => 123,
  :tSTRING_DBEG => 124,
  :tSTRING_DVAR => 125,
  :tSTRING_END => 126,
  :tSTRING_DEND => 127,
  :tSTRING => 128,
  :tSYMBOL => 129,
  :tNL => 130,
  :tEH => 131,
  :tCOLON => 132,
  :tCOMMA => 133,
  :tSPACE => 134,
  :tSEMI => 135,
  :tLAMBDA => 136,
  :tLAMBEG => 137,
  :tCHARACTER => 138,
  :tRATIONAL => 139,
  :tIMAGINARY => 140,
  :tLABEL_END => 141,
  :tEQL => 142,
  :tLOWEST => 143 }

racc_nt_base = 144

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tDSTAR",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSYMBOLS_BEG",
  "tQSYMBOLS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING_DEND",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tRATIONAL",
  "tIMAGINARY",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "stmt_or_begin",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "mrhs_arg",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "dot_or_colon",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "fcall",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "simple_numeric",
  "primary",
  "arg_value",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "symbols",
  "qsymbols",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@21",
  "@22",
  "f_args",
  "do_block",
  "@23",
  "operation3",
  "@24",
  "@25",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "symbol_list",
  "qword_list",
  "qsym_list",
  "string_dvar",
  "@26",
  "@27",
  "args_tail",
  "@28",
  "f_kwarg",
  "opt_args_tail",
  "f_optarg",
  "f_arg_asgn",
  "f_arg_item",
  "f_label",
  "f_kw",
  "f_block_kw",
  "kwrest_mark",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby22.y', 52)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 57)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 61)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 65)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 69)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby22.y', 75)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 80)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 96)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 101)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 105)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 109)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 113)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'ruby22.y', 119)
  def _reduce_16(val, _values, result)
                          diagnostic :error, :begin_in_method, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 124)
  def _reduce_17(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 128)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 132)
  def _reduce_19(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 138)
  def _reduce_20(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 144)
  def _reduce_21(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 148)
  def _reduce_22(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 152)
  def _reduce_23(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 157)
  def _reduce_24(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 162)
  def _reduce_25(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 166)
  def _reduce_26(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 170)
  def _reduce_27(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 178)
  def _reduce_28(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'ruby22.y', 183)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 187)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 191)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 198)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 205)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 212)
  def _reduce_35(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 219)
  def _reduce_36(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 226)
  def _reduce_37(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 230)
  def _reduce_38(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 235)
  def _reduce_39(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'ruby22.y', 241)
  def _reduce_41(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 245)
  def _reduce_42(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'ruby22.y', 251)
  def _reduce_44(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 255)
  def _reduce_45(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 259)
  def _reduce_46(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 263)
  def _reduce_47(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'ruby22.y', 275)
  def _reduce_53(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 281)
  def _reduce_54(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 285)
  def _reduce_55(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby22.y', 294)
  def _reduce_57(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 299)
  def _reduce_58(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 308)
  def _reduce_59(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 313)
  def _reduce_60(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 322)
  def _reduce_61(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 327)
  def _reduce_62(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 336)
  def _reduce_63(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 341)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 346)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 351)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 356)
  def _reduce_67(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 362)
  def _reduce_68(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 366)
  def _reduce_69(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 371)
  def _reduce_70(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 375)
  def _reduce_71(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'ruby22.y', 381)
  def _reduce_73(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 386)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 391)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 397)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 402)
  def _reduce_77(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 408)
  def _reduce_78(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 412)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 417)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 421)
  def _reduce_81(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 82 omitted

module_eval(<<'.,.,', 'ruby22.y', 428)
  def _reduce_83(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 433)
  def _reduce_84(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 437)
  def _reduce_85(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 442)
  def _reduce_86(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 446)
  def _reduce_87(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 451)
  def _reduce_88(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 455)
  def _reduce_89(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 459)
  def _reduce_90(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 463)
  def _reduce_91(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 467)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 471)
  def _reduce_93(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 475)
  def _reduce_94(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 480)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 485)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 490)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 494)
  def _reduce_98(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 498)
  def _reduce_99(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 502)
  def _reduce_100(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 506)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 510)
  def _reduce_102(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 514)
  def _reduce_103(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 519)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 524)
  def _reduce_105(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 529)
  def _reduce_106(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'ruby22.y', 535)
  def _reduce_108(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 539)
  def _reduce_109(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 543)
  def _reduce_110(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'ruby22.y', 552)
  def _reduce_116(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'ruby22.y', 561)
  def _reduce_120(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 565)
  def _reduce_121(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 569)
  def _reduce_122(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

module_eval(<<'.,.,', 'ruby22.y', 590)
  def _reduce_194(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 594)
  def _reduce_195(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 604)
  def _reduce_196(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 608)
  def _reduce_197(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 618)
  def _reduce_198(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 625)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 632)
  def _reduce_200(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 639)
  def _reduce_201(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 646)
  def _reduce_202(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                      result = @builder.op_assign(const, val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 652)
  def _reduce_203(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_global(val[0], val[1]))
                      result = @builder.op_assign(const, val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 658)
  def _reduce_204(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 662)
  def _reduce_205(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 666)
  def _reduce_206(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 670)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 674)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 678)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 682)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 686)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 690)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 694)
  def _reduce_213(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    val[1], val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 700)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 704)
  def _reduce_215(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 708)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 712)
  def _reduce_217(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 716)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 720)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 724)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 728)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 732)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 736)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 740)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 744)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 748)
  def _reduce_226(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 752)
  def _reduce_227(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 756)
  def _reduce_228(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 760)
  def _reduce_229(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 764)
  def _reduce_230(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 768)
  def _reduce_231(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 772)
  def _reduce_232(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 776)
  def _reduce_233(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 780)
  def _reduce_234(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 784)
  def _reduce_235(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 788)
  def _reduce_236(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

# reduce 240 omitted

module_eval(<<'.,.,', 'ruby22.y', 799)
  def _reduce_241(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 803)
  def _reduce_242(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 808)
  def _reduce_243(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 813)
  def _reduce_244(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 245 omitted

module_eval(<<'.,.,', 'ruby22.y', 819)
  def _reduce_246(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 247 omitted

# reduce 248 omitted

module_eval(<<'.,.,', 'ruby22.y', 825)
  def _reduce_249(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 829)
  def _reduce_250(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 834)
  def _reduce_251(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 838)
  def _reduce_252(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 842)
  def _reduce_253(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 847)
  def _reduce_254(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 853)
  def _reduce_255(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 857)
  def _reduce_256(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 862)
  def _reduce_257(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 869)
  def _reduce_258(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 874)
  def _reduce_259(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 878)
  def _reduce_260(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 883)
  def _reduce_261(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 887)
  def _reduce_262(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 891)
  def _reduce_263(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 895)
  def _reduce_264(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 900)
  def _reduce_265(val, _values, result)
                          result = @builder.array(nil, val[0], nil)
                    
    result
  end
.,.,

# reduce 266 omitted

module_eval(<<'.,.,', 'ruby22.y', 906)
  def _reduce_267(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 910)
  def _reduce_268(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 914)
  def _reduce_269(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

module_eval(<<'.,.,', 'ruby22.y', 929)
  def _reduce_280(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 933)
  def _reduce_281(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 938)
  def _reduce_282(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin_keyword(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 944)
  def _reduce_283(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 949)
  def _reduce_284(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 953)
  def _reduce_285(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 959)
  def _reduce_286(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 963)
  def _reduce_287(val, _values, result)
                          result = @builder.begin(val[0], nil, val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 967)
  def _reduce_288(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 971)
  def _reduce_289(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 975)
  def _reduce_290(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 979)
  def _reduce_291(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 983)
  def _reduce_292(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 987)
  def _reduce_293(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 991)
  def _reduce_294(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 995)
  def _reduce_295(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 999)
  def _reduce_296(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1003)
  def _reduce_297(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1008)
  def _reduce_298(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1012)
  def _reduce_299(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1016)
  def _reduce_300(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 301 omitted

module_eval(<<'.,.,', 'ruby22.y', 1025)
  def _reduce_302(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1031)
  def _reduce_303(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1039)
  def _reduce_304(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1046)
  def _reduce_305(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1053)
  def _reduce_306(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1057)
  def _reduce_307(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1061)
  def _reduce_308(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1066)
  def _reduce_309(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1070)
  def _reduce_310(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1074)
  def _reduce_311(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1079)
  def _reduce_312(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1087)
  def _reduce_313(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1095)
  def _reduce_314(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1099)
  def _reduce_315(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1103)
  def _reduce_316(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1109)
  def _reduce_317(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1114)
  def _reduce_318(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1128)
  def _reduce_319(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1136)
  def _reduce_320(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1146)
  def _reduce_321(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1151)
  def _reduce_322(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1163)
  def _reduce_323(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1169)
  def _reduce_324(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1178)
  def _reduce_325(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1182)
  def _reduce_326(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1188)
  def _reduce_327(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1197)
  def _reduce_328(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1201)
  def _reduce_329(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1205)
  def _reduce_330(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1209)
  def _reduce_331(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

module_eval(<<'.,.,', 'ruby22.y', 1218)
  def _reduce_335(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

module_eval(<<'.,.,', 'ruby22.y', 1227)
  def _reduce_339(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby22.y', 1238)
  def _reduce_341(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 342 omitted

# reduce 343 omitted

module_eval(<<'.,.,', 'ruby22.y', 1246)
  def _reduce_344(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1250)
  def _reduce_345(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1255)
  def _reduce_346(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1259)
  def _reduce_347(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 348 omitted

module_eval(<<'.,.,', 'ruby22.y', 1265)
  def _reduce_349(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1270)
  def _reduce_350(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1276)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1281)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1287)
  def _reduce_353(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1291)
  def _reduce_354(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1296)
  def _reduce_355(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1300)
  def _reduce_356(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1306)
  def _reduce_357(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1310)
  def _reduce_358(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1314)
  def _reduce_359(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1318)
  def _reduce_360(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1324)
  def _reduce_361(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1328)
  def _reduce_362(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1333)
  def _reduce_363(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1340)
  def _reduce_364(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1348)
  def _reduce_365(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1354)
  def _reduce_366(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1361)
  def _reduce_367(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 368 omitted

module_eval(<<'.,.,', 'ruby22.y', 1368)
  def _reduce_369(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1375)
  def _reduce_370(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1379)
  def _reduce_371(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1385)
  def _reduce_372(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1392)
  def _reduce_373(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1397)
  def _reduce_374(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1403)
  def _reduce_375(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1408)
  def _reduce_376(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 377 omitted

module_eval(<<'.,.,', 'ruby22.y', 1416)
  def _reduce_378(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1420)
  def _reduce_379(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1425)
  def _reduce_380(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1429)
  def _reduce_381(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1433)
  def _reduce_382(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1438)
  def _reduce_383(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1442)
  def _reduce_384(val, _values, result)
                          result = val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1447)
  def _reduce_385(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1451)
  def _reduce_386(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1456)
  def _reduce_387(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 388 omitted

module_eval(<<'.,.,', 'ruby22.y', 1461)
  def _reduce_389(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1465)
  def _reduce_390(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1470)
  def _reduce_391(val, _values, result)
                          @lexer.cmdarg = val[2]
                      @lexer.cmdarg.lexpop

                      result = [ val[1], val[3] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1480)
  def _reduce_392(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1484)
  def _reduce_393(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1489)
  def _reduce_394(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1493)
  def _reduce_395(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1498)
  def _reduce_396(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1502)
  def _reduce_397(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1509)
  def _reduce_398(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1515)
  def _reduce_399(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1521)
  def _reduce_400(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      method_call = @builder.call_method(val[0], val[1], val[2],
                                      lparen_t, args, rparen_t)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1531)
  def _reduce_401(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                      nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1541)
  def _reduce_402(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1547)
  def _reduce_403(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1553)
  def _reduce_404(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1559)
  def _reduce_405(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1563)
  def _reduce_406(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1569)
  def _reduce_407(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1575)
  def _reduce_408(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1581)
  def _reduce_409(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1585)
  def _reduce_410(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1590)
  def _reduce_411(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1594)
  def _reduce_412(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1600)
  def _reduce_413(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1604)
  def _reduce_414(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1611)
  def _reduce_415(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1617)
  def _reduce_416(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 417 omitted

module_eval(<<'.,.,', 'ruby22.y', 1623)
  def _reduce_418(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1636)
  def _reduce_419(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1641)
  def _reduce_420(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 421 omitted

# reduce 422 omitted

module_eval(<<'.,.,', 'ruby22.y', 1648)
  def _reduce_423(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 424 omitted

module_eval(<<'.,.,', 'ruby22.y', 1654)
  def _reduce_425(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

module_eval(<<'.,.,', 'ruby22.y', 1664)
  def _reduce_430(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1669)
  def _reduce_431(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1673)
  def _reduce_432(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1678)
  def _reduce_433(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1682)
  def _reduce_434(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1686)
  def _reduce_435(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1691)
  def _reduce_436(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1696)
  def _reduce_437(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1702)
  def _reduce_438(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1707)
  def _reduce_439(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1711)
  def _reduce_440(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1716)
  def _reduce_441(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1720)
  def _reduce_442(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1725)
  def _reduce_443(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1730)
  def _reduce_444(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1734)
  def _reduce_445(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1739)
  def _reduce_446(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1744)
  def _reduce_447(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1749)
  def _reduce_448(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1753)
  def _reduce_449(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1758)
  def _reduce_450(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1762)
  def _reduce_451(val, _values, result)
                          result = val[0] << @builder.symbol_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1767)
  def _reduce_452(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1771)
  def _reduce_453(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1776)
  def _reduce_454(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1780)
  def _reduce_455(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1785)
  def _reduce_456(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1789)
  def _reduce_457(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1794)
  def _reduce_458(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1798)
  def _reduce_459(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1802)
  def _reduce_460(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1807)
  def _reduce_461(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1815)
  def _reduce_462(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1819)
  def _reduce_463(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1823)
  def _reduce_464(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 465 omitted

module_eval(<<'.,.,', 'ruby22.y', 1830)
  def _reduce_466(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1835)
  def _reduce_467(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1840)
  def _reduce_468(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1844)
  def _reduce_469(val, _values, result)
                          result = @builder.negate(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1849)
  def _reduce_470(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1853)
  def _reduce_471(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1857)
  def _reduce_472(val, _values, result)
                          result = @builder.rational(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1861)
  def _reduce_473(val, _values, result)
                          result = @builder.complex(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1866)
  def _reduce_474(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1870)
  def _reduce_475(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1874)
  def _reduce_476(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1878)
  def _reduce_477(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1882)
  def _reduce_478(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1887)
  def _reduce_479(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1891)
  def _reduce_480(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1895)
  def _reduce_481(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1899)
  def _reduce_482(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1903)
  def _reduce_483(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1907)
  def _reduce_484(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1911)
  def _reduce_485(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1916)
  def _reduce_486(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1920)
  def _reduce_487(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1925)
  def _reduce_488(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1929)
  def _reduce_489(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1934)
  def _reduce_490(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1938)
  def _reduce_491(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1943)
  def _reduce_492(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1947)
  def _reduce_493(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1951)
  def _reduce_494(val, _values, result)
                          result = [ val[0], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1955)
  def _reduce_495(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1961)
  def _reduce_496(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1966)
  def _reduce_497(val, _values, result)
                          result = @lexer.in_kwarg
                      @lexer.in_kwarg = true
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1971)
  def _reduce_498(val, _values, result)
                          @lexer.in_kwarg = val[0]
                      result = @builder.args(nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1977)
  def _reduce_499(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1981)
  def _reduce_500(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1985)
  def _reduce_501(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1989)
  def _reduce_502(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1994)
  def _reduce_503(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1998)
  def _reduce_504(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2003)
  def _reduce_505(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2010)
  def _reduce_506(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2018)
  def _reduce_507(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2024)
  def _reduce_508(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2031)
  def _reduce_509(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2037)
  def _reduce_510(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2044)
  def _reduce_511(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2049)
  def _reduce_512(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2055)
  def _reduce_513(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2062)
  def _reduce_514(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2067)
  def _reduce_515(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2073)
  def _reduce_516(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2078)
  def _reduce_517(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2084)
  def _reduce_518(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2088)
  def _reduce_519(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2093)
  def _reduce_520(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2097)
  def _reduce_521(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2101)
  def _reduce_522(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2105)
  def _reduce_523(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 524 omitted

module_eval(<<'.,.,', 'ruby22.y', 2111)
  def _reduce_525(val, _values, result)
                          @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2118)
  def _reduce_526(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2123)
  def _reduce_527(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2127)
  def _reduce_528(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2132)
  def _reduce_529(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2136)
  def _reduce_530(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2141)
  def _reduce_531(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2150)
  def _reduce_532(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2154)
  def _reduce_533(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2159)
  def _reduce_534(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2163)
  def _reduce_535(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2168)
  def _reduce_536(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2172)
  def _reduce_537(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2177)
  def _reduce_538(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2181)
  def _reduce_539(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 540 omitted

# reduce 541 omitted

module_eval(<<'.,.,', 'ruby22.y', 2188)
  def _reduce_542(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.kwrestarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2194)
  def _reduce_543(val, _values, result)
                          result = [ @builder.kwrestarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2199)
  def _reduce_544(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2204)
  def _reduce_545(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2209)
  def _reduce_546(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2213)
  def _reduce_547(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2218)
  def _reduce_548(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2222)
  def _reduce_549(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 550 omitted

# reduce 551 omitted

module_eval(<<'.,.,', 'ruby22.y', 2229)
  def _reduce_552(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2235)
  def _reduce_553(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 554 omitted

# reduce 555 omitted

module_eval(<<'.,.,', 'ruby22.y', 2242)
  def _reduce_556(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2249)
  def _reduce_557(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2253)
  def _reduce_558(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 559 omitted

module_eval(<<'.,.,', 'ruby22.y', 2259)
  def _reduce_560(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2264)
  def _reduce_561(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 562 omitted

module_eval(<<'.,.,', 'ruby22.y', 2270)
  def _reduce_563(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2274)
  def _reduce_564(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2279)
  def _reduce_565(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2283)
  def _reduce_566(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2287)
  def _reduce_567(val, _values, result)
                          result = @builder.pair_quoted(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2291)
  def _reduce_568(val, _values, result)
                          result = @builder.kwsplat(val[0], val[1])
                    
    result
  end
.,.,

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

# reduce 581 omitted

# reduce 582 omitted

# reduce 583 omitted

# reduce 584 omitted

module_eval(<<'.,.,', 'ruby22.y', 2302)
  def _reduce_585(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2306)
  def _reduce_586(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 587 omitted

# reduce 588 omitted

# reduce 589 omitted

module_eval(<<'.,.,', 'ruby22.y', 2312)
  def _reduce_590(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 591 omitted

# reduce 592 omitted

# reduce 593 omitted

module_eval(<<'.,.,', 'ruby22.y', 2321)
  def _reduce_594(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby22
  end   # module Parser
