# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class Ruby19 < Parser::Base

module_eval(<<'...end ruby19.y/module_eval...', 'ruby19.y', 2141)

  def version
    19
  end

  def default_encoding
    Encoding::BINARY
  end
...end ruby19.y/module_eval...
##### State transition tables begin ###

clist = [
'-281,542,205,206,817,-98,-103,-281,-281,-281,741,597,-281,-281,-281',
'381,-281,584,-100,229,383,382,-282,-461,542,542,-281,-281,-281,-282',
'-461,563,498,205,206,-98,-281,-281,-282,-281,-281,-281,-281,-281,-101',
'542,542,656,-102,665,-96,226,-99,-98,-90,228,227,205,206,-99,-99,798',
'208,-99,-101,-100,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281',
'-281,-281,-281,-281,583,-103,-281,-281,-281,-97,744,-281,229,688,-281',
'-104,105,-281,-281,-524,-281,104,-281,209,-281,688,-281,-281,-281,-281',
'-281,-281,-281,-528,-281,-94,-281,-525,-458,105,-528,-528,-528,-98,104',
'-458,-528,-528,-98,-528,-281,-281,-281,-281,-524,-281,-100,-281,-528',
'-102,562,-100,105,105,-89,205,206,104,104,-528,-528,209,-528,-528,-528',
'-528,-528,-93,664,-87,105,209,-101,105,105,104,799,-101,104,104,-99',
'-92,-90,-92,-91,-99,258,205,206,-528,-528,-528,-528,-528,-528,-528,-528',
'-528,-528,-528,-528,-528,-528,105,-88,-528,-528,-528,104,603,-95,609',
'619,-528,258,105,-528,258,428,-465,104,-528,598,-528,606,-528,-528,-528',
'-528,-528,-528,-528,619,-528,-528,-528,619,573,-90,656,253,548,-528',
'-394,-464,209,618,-92,-528,-528,-528,596,-91,595,-528,-528,-528,-528',
'-100,742,-528,-528,-528,688,-528,-92,618,-104,-97,209,618,-101,257,-528',
'-528,-528,-528,209,253,619,855,253,209,-92,-528,-528,-92,-528,-528,-528',
'-528,-528,-92,-96,-528,-394,498,591,575,574,257,-528,-394,257,-90,250',
'-524,720,-101,807,-528,-394,251,618,-528,-528,-528,-528,-528,-528,-528',
'-528,-528,-528,-528,-528,-528,-528,-528,-394,-528,-528,-528,511,743',
'-528,513,-465,-528,-94,-90,-528,-528,-90,-528,-103,-528,-260,-528,-90',
'-528,-528,-528,-528,-528,-528,-528,-281,-528,-528,-528,493,494,105,-281',
'-281,-281,-464,104,76,-281,-281,589,-281,-528,-528,-528,-528,77,-528',
'-88,-528,229,-100,-457,-522,-97,105,78,-82,586,-457,104,-281,-281,-68',
'-281,-281,-281,-281,-281,679,203,526,525,524,-262,527,816,679,-87,526',
'525,524,226,527,-96,105,228,227,224,225,104,-281,-281,-281,-281,-281',
'-281,-281,-281,-281,-281,-281,-281,-281,-281,-453,553,-281,-281,-281',
'573,602,-453,-95,552,-281,-521,-522,-281,-104,573,-453,554,-281,373',
'-281,555,-281,-281,-281,-281,-281,-281,-281,-450,-281,573,-281,548,-522',
'819,-450,-453,573,-528,727,-456,790,573,-453,-453,-281,-281,-456,-93',
'897,-281,-453,-453,-453,-102,821,-453,-453,-453,105,-453,824,-450,825',
'104,575,574,576,-453,-450,-453,-453,-453,753,-521,575,574,571,-450,831',
'-453,-453,-89,-453,-453,-453,-453,-453,-98,832,-528,575,574,585,-455',
'834,-521,-528,575,574,578,-455,-524,575,574,580,-528,794,656,835,-453',
'-453,-453,-453,-453,-453,-453,-453,-453,-453,-453,-453,-453,-453,-528',
'201,-453,-453,-453,-324,-453,-453,202,649,-453,475,-324,-453,-453,515',
'-453,200,-453,844,-453,-324,-453,-453,-453,-453,-453,-453,-453,105,-453',
'845,-453,754,104,526,525,524,679,527,526,525,524,846,527,424,-453,-453',
'-453,-453,-450,-453,425,-453,209,-453,848,-450,-450,-450,851,426,-450',
'-450,-450,679,-450,526,525,524,531,527,205,206,-450,675,-450,-450,-450',
'535,534,538,537,853,859,855,-450,-450,-460,-450,-450,-450,-450,-450',
'679,-460,526,525,524,-462,527,679,675,526,525,524,-462,527,855,105,209',
'678,514,753,104,-462,-450,-450,-450,-450,-450,-450,-450,-450,-450,-450',
'-450,-450,-450,-450,860,675,-450,-450,-450,-463,-450,-450,675,862,-450',
'864,-463,-450,-450,507,-450,678,-450,506,-450,-463,-450,-450,-450,-450',
'-450,-450,-450,489,-450,679,-450,526,525,524,490,527,829,229,526,525',
'524,-459,527,488,-450,-450,-450,-450,-459,-450,500,-450,499,-450,278',
'66,67,68,9,54,568,495,511,60,61,510,531,569,64,870,62,63,65,29,30,69',
'70,538,537,794,656,872,28,27,26,93,92,94,95,229,829,19,526,525,524,209',
'527,8,44,875,10,97,96,98,87,53,89,88,90,-263,91,99,100,253,85,86,41',
'42,40,105,511,226,209,513,104,228,227,679,262,526,525,524,511,527,491',
'513,304,305,39,484,-274,32,205,206,55,56,483,-274,57,679,34,526,525',
'524,43,527,-274,529,501,526,525,524,20,527,531,502,209,84,76,79,80,882',
'81,82,426,538,537,77,83,278,66,67,68,9,54,59,675,78,60,61,883,-67,886',
'64,531,62,63,65,29,30,69,70,-525,535,534,538,537,28,27,26,93,92,94,95',
'714,715,19,-524,716,99,100,891,8,44,855,10,97,96,98,87,53,89,88,90,475',
'91,99,100,473,85,86,41,42,40,679,471,526,525,524,462,527,208,679,899',
'526,525,524,430,527,901,902,907,429,39,909,912,32,914,855,55,56,855',
'899,57,679,34,526,525,524,43,527,675,754,550,526,525,524,20,527,531',
'551,919,84,76,79,80,506,81,82,549,538,537,77,83,278,66,67,68,9,54,59',
'675,78,60,61,427,384,101,64,531,62,63,65,29,30,69,70,927,535,534,538',
'537,28,27,26,93,92,94,95,855,855,19,855,931,371,899,607,8,44,209,10',
'97,96,98,87,53,89,88,90,303,91,99,100,302,85,86,41,42,40,229,233,238',
'239,240,235,237,245,246,241,242,558,222,223,-282,248,243,244,557,39',
'204,-282,32,209,199,55,56,559,198,57,-282,34,226,197,232,43,228,227',
'224,225,236,234,230,20,231,855,113,899,84,76,79,80,946,81,82,229,947',
'-462,77,83,949,247,-275,-237,-462,855,59,462,78,-275,-275,-275,462,-462',
'-275,-275,-275,529,-275,526,525,524,728,527,-261,722,719,226,-275,-275',
'-275,228,227,224,225,691,209,746,-275,-275,-463,-275,-275,-275,-275',
'-275,679,-463,526,525,524,889,527,548,531,518,-463,684,890,682,681,673',
'473,535,534,538,537,888,-275,-275,-275,-275,-275,-275,-275,-275,-275',
'-275,-275,-275,-275,-275,475,675,-275,-275,-275,-281,672,-275,669,649',
'-275,209,-281,-275,-275,667,-275,-525,-275,253,-275,-281,-275,-275,-275',
'-275,-275,-275,-275,-281,-275,656,-275,855,253,649,-281,649,504,229',
'229,-525,209,767,638,-281,-275,-275,-275,-275,-260,-275,771,-275,278',
'66,67,68,9,54,209,-82,-274,60,61,209,753,209,64,-274,62,63,65,29,30',
'69,70,209,-274,229,229,788,28,27,26,93,92,94,95,229,209,19,108,109,110',
'111,112,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
'558,,-282,,,,,918,679,-282,526,525,524,,527,,559,,-282,39,-281,,280',
',,55,56,-281,,57,,34,-525,,,43,-281,,754,,526,525,524,20,527,531,,,84',
'76,79,80,,81,82,,538,537,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64',
'531,62,63,65,29,30,69,70,,535,534,538,537,28,27,26,93,92,94,95,,,19',
'108,109,110,111,112,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,108,109,110,111,112,,,,679,,526,525,524,,527,,,,,39,,,32',
',,55,56,,,57,,34,,,,43,,,529,,526,525,524,20,527,531,,,84,76,79,80,',
'81,82,,538,537,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,531,62,63',
'65,29,30,69,70,,535,534,538,537,28,27,26,93,92,94,95,,,19,108,109,110',
'111,112,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,679,,526,525,524,,527,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,529',
',526,525,524,20,527,531,,,84,76,79,80,,81,82,,538,537,77,83,5,66,67',
'68,9,54,59,,78,60,61,,,,64,531,62,63,65,29,30,69,70,,535,534,538,537',
'28,27,26,93,92,94,95,,,19,,,,,,8,44,7,10,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,41,42,40,,,,,,,,679,,526,525,524,,527,,,,,,39,,,32,,,55',
'56,,,57,,34,,,,43,679,,526,525,524,,527,20,531,,,,84,76,79,80,,81,82',
'538,537,,77,83,278,66,67,68,9,54,59,,78,60,61,,,531,64,,62,63,65,29',
'30,69,70,,538,537,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,679,,526,525,524,',
'527,,,,,39,,,280,,,55,56,,,57,,34,,,,43,,,529,,526,525,524,20,527,531',
',,84,76,79,80,,81,82,,538,537,77,83,278,66,67,68,9,54,59,,78,60,61,',
',,64,531,62,63,65,29,30,69,70,,535,534,538,537,28,27,26,93,92,94,95',
',,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,39,,,280,,,55,56,,,57,,34,,,,43,,,529,,526,525,524',
'20,527,,,,84,76,79,80,,81,82,,,,77,83,5,66,67,68,9,54,59,,78,60,61,',
',,64,531,62,63,65,29,30,69,70,,535,534,538,537,28,27,26,93,92,94,95',
',,19,,,,,,8,44,7,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,754,,526,525',
'524,20,527,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60',
'61,,,,64,531,62,63,65,29,30,69,70,,535,534,538,537,28,27,26,93,92,94',
'95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,229,-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243,244,,39,,,32',
',,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84',
'76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,592,8,44,,10,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,233,238,239,240,235',
'237,245,246,241,242,,222,223,,,243,244,,39,,,32,,,55,56,,,57,,34,226',
',232,43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,',
'77,83,,247,-530,,,,59,,78,-530,-530,-530,,,-530,-530,-530,529,-530,526',
'525,524,,527,,,,-530,-530,-530,-530,,,,,,,,-530,-530,,-530,-530,-530',
'-530,-530,,,,,,,,,531,709,,,,,,,,535,534,538,537,,-530,-530,-530,-530',
'-530,-530,-530,-530,-530,-530,-530,-530,-530,-530,,,-530,-530,-530,',
',-530,,,-530,,,-530,-530,,-530,,-530,,-530,,-530,-530,-530,-530,-530',
'-530,-530,,-530,-530,-530,,,,,,,,,,,,,,-530,-530,-530,-530,,-530,,-530',
'278,66,67,68,9,54,,,,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,229,233,238,239,240,235,237,,,241,242,,,,,,243,244,,39,',
',32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231',
',,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64',
',62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,233,238,239,240',
'235,237,245,246,241,242,,-547,-547,,,243,244,,39,,,32,,,55,56,,,57,',
'34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81',
'82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69',
'70,,,,,,28,27,26,93,92,94,95,,,19,,,,,607,8,44,,10,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,229,233,238,239,240,235,237,245,246',
'241,242,,222,223,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228',
'227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,,247,-529',
',,,59,,78,-529,-529,-529,,,-529,-529,-529,529,-529,526,525,524,,527',
',,,-529,-529,-529,-529,,,,,,,,-529,-529,,-529,-529,-529,-529,-529,,',
',,,,,,531,709,,,,,,,,535,534,538,537,,-529,-529,-529,-529,-529,-529',
'-529,-529,-529,-529,-529,-529,-529,-529,,,-529,-529,-529,,,-529,,,-529',
',,-529,-529,,-529,,-529,,-529,,-529,-529,-529,-529,-529,-529,-529,,-529',
'-529,-529,,,,,,,,,,,,,,-529,-529,-529,-529,,-529,,-529,278,66,67,68',
'9,54,,,,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95',
',,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
'229,233,238,239,240,235,237,245,,241,242,,,,,,243,244,,39,,,32,,,55',
'56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84,76',
'79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,41,42,40,229,233,238,239,240,235,237,245',
'246,241,242,,-547,-547,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232',
'43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83',
'278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27',
'26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,229,-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243',
'244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230',
'20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44',
',10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,,,,,,,,,',
',,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225',
',,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78',
'60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,',
',,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,,',
',,,,,,,,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224',
'225,,,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59',
',78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19',
',,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229',
',,,,,,,,,,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227',
'224,225,,,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
'229,,,,,,,,,,,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228',
'227,224,225,,,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68',
'9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,229,-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243,244,,39,,,32',
',,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84',
'76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,-547,-547,-547,-547,235',
'237,,,-547,-547,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228',
'227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66',
'67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93',
'92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
'41,42,40,229,-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243,244,,39',
',,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231',
',,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64',
',62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,-547,-547,-547,-547',
'235,237,,,-547,-547,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232',
'43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83',
'278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27',
'26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,229,,,,,,,,,,,,,,,,243,244,,39,,,32,,,55,56,,,57,,34',
'226,,,43,228,227,224,225,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,278,66',
'67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93',
'92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
'41,42,40,229,,,,,,,,,,,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232',
'43,228,227,224,225,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68',
'9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,229,,,,,,,,,,,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43',
'228,227,224,225,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9',
'54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95',
',,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,',
',,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,9,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,389,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,',
'66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,',
',219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,',
',,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70',
',,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57',
',,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55',
'56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,389,,,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67',
'68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92',
'94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55',
'56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,209,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,7,10,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,39,,,32,,',
'55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67',
'68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93',
'92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
',,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,,,289,,,285',
',,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41',
'42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,',
',219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,',
',,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70',
',,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57',
',,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60',
'61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,9,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
'229,233,238,239,240,235,237,245,246,241,242,,222,223,,,243,244,,39,',
',32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231',
',,,84,76,79,80,,81,82,,,,77,83,,247,,,,373,59,,78,66,67,68,,54,,,,60',
'61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,',
',44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,',
',,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55',
'56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93',
'92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43',
',,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,209,66,67,68,,54,59,,78,60',
'61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55',
'56,,,57,,,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67',
'68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93',
'92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,633,,269,,43',
',,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,9,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,39,,,32',
',,55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,,,299,,,,,,,,,,,,,,,,,,,,885,,,220,,,55,56,,,57,,,,,,,,,,,,,,,,,',
',84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,,,299,229,233,238,239,240,235,237,245,246,241',
'242,,222,223,,,243,244,,289,,,220,,,55,56,,,57,,,226,,232,,228,227,224',
'225,236,234,230,,231,,,,84,76,79,80,,81,82,,,,77,83,,247,,486,,,59,',
'78,66,67,68,,54,,,,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,',
',,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,725,,,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,269,,43',
',,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,,299,,,,,,,,,,,',
',,,,,,,,289,,,285,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,',
',28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99',
'100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43',
',,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,633,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,504,,55',
'56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92',
'94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41',
'42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69',
'70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57',
',,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,633,,269,,43,,,,,,,,219',
',,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,',
',,214,,,220,,,55,56,,,57,,,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,',
',28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99',
'100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43',
',,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,',
',,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,',
',28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99',
'100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43',
',,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,',
',,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,',
',28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99',
'100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43',
',,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,',
',,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,271,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77',
'83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27',
'26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269',
',43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,',
',,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,',
',,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53',
'89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,,284,,,,,,,,',
',,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,,299,229,233,238,239,240',
'235,237,245,246,241,242,,222,223,,,243,244,,289,,,220,,,55,56,,,57,',
',226,,232,,228,227,224,225,236,234,230,,231,,,,84,76,79,80,,81,82,,',
',77,83,209,247,,301,,,59,,78,66,67,68,,54,,,,60,61,,,,64,,62,63,65,295',
'296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,',
',219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,',
',,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,',
',,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57',
',,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,',
',,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,',
',,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,',
',,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,,',
',,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60',
'61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,',
'44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,',
',,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,',
',,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,',
',,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,233,238',
'239,240,235,237,245,246,241,242,,222,223,,,243,244,,214,,,220,,,55,56',
',,57,,,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80',
',81,82,,,,77,83,105,247,,,,104,59,,78,66,67,68,,54,,,,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,,,335',
',,32,,,55,56,,,57,,34,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,293,,,97,96,98,340,53,89,88,341,,91,99,100,',
'85,86,,,299,,,,,,,,,,,,,,,,,347,,,342,,,220,,,55,56,,,57,,,,,,,,,,,',
',,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293',
',,97,96,98,340,53,89,88,341,,91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,',
',,,342,,,220,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77',
'83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291',
'292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91',
'99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,',
',,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,',
',,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,633,,,,43,,,,,,,,219,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,389,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,',
'66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,19,,,,,,8,44,7,10,97,96,98,87,53,89,88,90,,91,99,100,',
'85,86,41,42,40,229,233,238,239,240,235,237,245,246,241,242,,222,223',
',,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236',
'234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,,247,,,,373,59,,78,66',
'67,68,,54,,,,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67',
'68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92',
'94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93',
'92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41',
'42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,',
',,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67',
'68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92',
'94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,,,299,,,,,,,,,,,,,,,,,,,,841,,,220,,,55,56,,,57,,,,,,,,,,,,,,,,,',
',84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67',
'68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93',
'92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
'41,42,40,229,233,238,239,240,235,237,245,246,241,242,,222,223,,,243',
'244,,214,,,220,,,55,56,,,57,,,226,,232,43,228,227,224,225,236,234,230',
'219,231,,,,84,76,79,80,,81,82,,,,77,83,,247,-243,,,,59,,78,-243,-243',
'-243,,,-243,-243,-243,,-243,,,,,,,,,-243,-243,-243,,,,,,,,,-243,-243',
',-243,-243,-243,-243,-243,,,,,,,,,,,,,,,,,,,,,,,-243,-243,-243,-243',
'-243,-243,-243,-243,-243,-243,-243,-243,-243,-243,,,-243,-243,-243,',
',-243,,253,-243,,,-243,-243,,-243,,-243,,-243,,-243,-243,-243,-243,-243',
'-243,-243,-393,-243,-243,-243,,,,-393,-393,-393,,,-393,-393,-393,,-393',
'-243,-243,,-243,,-243,,,-393,-393,-393,,,,,,,,,-393,-393,,-393,-393',
'-393,-393,-393,,,,,,,,,,,,,,,,,,,,,,,-393,-393,-393,-393,-393,-393,-393',
'-393,-393,-393,-393,-393,-393,-393,,,-393,-393,-393,,,-393,,253,-393',
',,-393,-393,,-393,,-393,,-393,,-393,-393,-393,-393,-393,-393,-393,-243',
'-393,-393,-393,,,,-243,-243,-243,,,-243,-243,-243,,-243,-393,-393,,-393',
',-393,,,,-243,,,,,,,,,,-243,-243,,-243,-243,-243,-243,-243,,,,,,,,,',
',,,,,,,,,,,,,-288,,,,,,,-288,-288,-288,,-243,-288,-288,-288,,-288,,-243',
',,,,253,-243,,-288,-288,,,,,,,,,-288,-288,,-288,-288,-288,-288,-288',
',,-243,,,,,,,,,,,,,,-243,,,,,-243,-288,-288,-288,-288,-288,-288,-288',
'-288,-288,-288,-288,-288,-288,-288,,,-288,-288,-288,,,-288,,262,-288',
',,-288,-288,,-288,,-288,,-288,,-288,-288,-288,-288,-288,-288,-288,-243',
'-288,,-288,,,,-243,-243,-243,,,-243,-243,-243,,-243,-288,-288,,-288',
',-288,,,,-243,,,,,,,,,,-243,-243,,-243,-243,-243,-243,-243,,,,,,404',
'408,,,403,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,-243',
'151,152,138,139,,,-243,,,253,,253,-243,,,,,143,142,,127,148,145,144',
'140,141,135,133,125,147,126,,,153,-243,,,,,,,,,,,,,,-243,,,,,-243,164',
'175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194,173',
'162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178,',
',,,,159,166,157,158,154,155,156,116,118,,,117,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,,,153,84,,,,,,,,,,,83,164',
'175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194,173',
'162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178,',
',,,,159,166,157,158,154,155,156,116,118,115,,117,,,,,,,,149,150,,146',
'128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143',
'142,,127,148,145,144,140,141,135,133,125,147,126,,,153,84,,,,,,,,,,',
'83,164,175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194',
'173,162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178',
',,,,,159,166,157,158,154,155,156,116,118,,,117,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,,,153,84,,,,,,,,,,,83,164',
'175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194,173',
'162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178,',
',,,,159,166,157,158,154,155,156,116,118,,,117,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,,,153,84,,,,,,,,,,,83,164',
'175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194,173',
'162,176,180,182,174,167,,,,183,190,185,358,357,359,356,160,179,178,',
',,,,159,166,157,158,353,354,355,351,118,89,88,352,,91,,,,,,149,150,',
'146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,363,,',
',,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126,,,153,164',
'175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194,173',
'162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178,',
',,,,159,166,157,158,154,155,156,116,118,,,117,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,612,408,153,,613,,,,,,',
',149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,',
',,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126',
'924,408,153,,925,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132',
',,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141',
'135,133,125,147,126,610,401,153,,611,,,,,,,,149,150,,146,128,129,130',
'137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127',
'148,145,144,140,141,135,133,125,147,126,612,408,153,,613,,,,,,,,149',
'150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253',
',,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126,645,408',
'153,,646,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151',
'152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133',
'125,147,126,941,408,153,,940,,,,,,,,149,150,,146,128,129,130,137,134',
'136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145',
'144,140,141,135,133,125,147,126,459,401,153,,460,,,,,,,,149,150,,146',
'128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,',
',143,142,,127,148,145,144,140,141,135,133,125,147,126,699,408,153,,700',
',,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147',
'126,642,401,153,,643,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131',
'132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140',
'141,135,133,125,147,126,696,408,153,,697,,,,,,,,149,150,,146,128,129',
'130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,694,401,153,,695,,,,,,',
',149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,',
',,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126',
'922,401,153,,923,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132',
',,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141',
'135,133,125,147,126,459,401,153,,460,,,,,,,,149,150,,146,128,129,130',
'137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142,,127,148',
'145,144,140,141,135,133,125,147,126,459,401,153,,460,,,,,,,,149,150',
',146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,',
',,,143,142,,127,148,145,144,140,141,135,133,125,147,126,610,401,153',
',611,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152',
'138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125',
'147,126,397,401,153,,398,,,,,,,,149,150,,146,128,129,130,137,134,136',
',,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144',
'140,141,135,133,125,147,126,,,153,229,233,238,239,240,235,237,245,246',
'241,242,,222,223,,,243,244,,,,,,,,,,,,,,,226,,232,,228,227,224,225,236',
'234,230,,231,,229,233,238,239,240,235,237,245,246,241,242,,222,223,',
'247,243,244,,,,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231',
',229,233,238,239,240,235,237,245,246,241,242,,222,223,,247,243,244,',
',,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231,,229,233,238',
'239,240,235,237,245,246,241,242,,222,223,,247,243,244,,,,,,,,,,,,,,',
'226,,232,,228,227,224,225,236,234,230,,231,,229,233,238,239,240,235',
'237,245,246,241,242,,222,223,,247,243,244,,,,,,,,,,,,,,,226,,232,,228',
'227,224,225,236,234,230,,231,,229,233,238,239,240,235,237,245,246,241',
'242,,222,223,,247,243,244,,,,,,,,,,,,,,,226,,232,,228,227,224,225,236',
'234,230,,231,,229,233,238,239,240,235,237,245,246,241,242,,222,223,',
'247,243,244,,,,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231',
',229,233,238,239,240,235,237,245,246,241,242,,222,223,,247,243,244,',
',,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231,,,,,,,,,,,,',
',,,,247' ]
        racc_action_table = arr = ::Array.new(23398, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'613,863,564,564,745,942,552,613,613,613,610,397,613,613,613,115,613',
'369,924,434,115,115,491,355,325,770,613,613,613,491,355,346,427,17,17',
'801,613,613,491,613,613,613,613,613,923,692,326,685,697,517,332,434',
'922,745,397,434,434,570,570,610,397,690,19,694,695,696,613,613,613,613',
'613,613,613,613,613,613,613,613,613,613,369,427,613,613,613,333,613',
'613,435,544,613,336,564,613,613,924,613,564,613,19,613,545,613,613,613',
'613,613,613,613,404,613,552,613,697,356,863,404,404,404,942,863,356',
'404,404,942,404,613,613,613,613,696,613,924,613,404,613,346,924,325',
'770,801,653,653,325,770,404,404,570,404,404,404,404,404,697,517,332',
'346,693,923,692,326,346,692,923,692,326,922,643,694,695,696,922,58,421',
'421,404,404,404,404,404,404,404,404,404,404,404,404,404,404,544,333',
'404,404,404,544,404,336,423,467,404,294,545,404,25,215,213,545,404,398',
'404,413,404,404,404,404,404,404,404,466,404,404,404,457,581,642,868',
'405,868,699,763,212,653,467,643,612,404,404,396,404,395,404,612,612',
'612,404,611,612,612,612,802,612,398,466,215,213,393,457,398,58,612,612',
'612,612,421,294,625,939,25,702,643,612,612,643,612,612,612,612,612,643',
'212,699,763,303,390,581,581,294,699,763,25,642,24,699,581,611,707,699',
'763,24,625,612,612,612,612,612,612,612,612,612,612,612,612,612,612,699',
'763,612,612,612,319,612,612,319,38,612,303,642,612,612,642,612,303,612',
'387,612,642,612,612,612,612,612,612,612,403,612,612,612,299,299,802',
'403,403,403,37,802,74,403,403,385,403,612,612,612,612,74,612,38,612',
'452,612,359,341,38,710,74,637,379,359,710,403,403,637,403,403,403,403',
'403,678,15,678,678,678,724,678,729,859,37,859,859,859,452,859,37,276',
'452,452,452,452,276,403,403,403,403,403,403,403,403,403,403,403,403',
'403,403,341,337,403,403,403,366,403,341,15,335,403,340,341,403,15,365',
'341,342,403,331,403,342,403,403,403,403,403,403,403,351,403,370,403',
'330,341,747,351,352,367,645,593,358,678,368,352,90,403,403,358,403,859',
'403,90,90,90,403,748,90,90,90,3,90,749,340,751,3,366,366,366,90,340',
'90,90,90,752,340,365,365,365,340,754,90,90,593,90,90,90,90,90,593,756',
'645,370,370,370,357,758,340,645,367,367,367,357,645,368,368,368,645',
'933,933,759,90,90,90,90,90,90,90,90,90,90,90,90,90,90,645,14,90,90,90',
'45,90,90,14,762,90,320,45,90,90,318,90,14,90,773,90,45,90,90,90,90,90',
'90,90,329,90,775,90,618,329,618,618,618,788,618,788,788,788,776,788',
'211,90,90,90,90,87,90,211,90,777,90,778,87,87,87,779,211,87,87,87,675',
'87,675,675,675,618,675,508,508,87,788,87,87,87,618,618,618,618,782,788',
'783,87,87,353,87,87,87,87,87,860,353,860,860,860,286,860,531,675,531',
'531,531,286,531,785,704,787,675,317,618,704,286,87,87,87,87,87,87,87',
'87,87,87,87,87,87,87,789,860,87,87,87,287,87,87,531,792,87,795,287,87',
'87,312,87,531,87,311,87,287,87,87,87,87,87,87,87,288,87,912,87,912,912',
'912,288,912,753,308,753,753,753,354,753,288,87,87,87,87,354,87,305,87',
'304,87,628,628,628,628,628,628,361,300,315,628,628,315,912,361,628,804',
'628,628,628,628,628,628,628,912,912,683,683,808,628,628,628,628,628',
'628,628,433,883,628,883,883,883,809,883,628,628,812,628,628,628,628',
'628,628,628,628,628,813,628,628,628,298,628,628,628,628,628,563,662',
'433,293,662,563,433,433,927,292,927,927,927,316,927,289,316,40,40,628',
'283,290,628,324,324,628,628,282,290,628,899,628,899,899,899,628,899',
'290,709,306,709,709,709,628,709,927,306,281,628,628,628,628,826,628',
'628,306,927,927,628,628,708,708,708,708,708,708,628,899,628,708,708',
'827,279,833,708,709,708,708,708,708,708,708,708,940,709,709,709,709',
'708,708,708,708,708,708,708,574,574,708,941,574,574,574,841,708,708',
'943,708,708,708,708,708,708,708,708,708,270,708,708,708,267,708,708',
'708,708,708,897,266,897,897,897,252,897,221,824,861,824,824,824,217',
'824,865,866,871,216,708,876,877,708,878,879,708,708,881,944,708,931',
'708,931,931,931,708,931,897,819,334,819,819,819,708,819,824,334,885',
'708,708,708,708,887,708,708,334,824,824,708,708,837,837,837,837,837',
'837,708,931,708,837,837,214,195,1,837,819,837,837,837,837,837,837,837',
'892,819,819,819,819,837,837,837,837,837,837,837,893,894,837,895,896',
'101,898,416,837,837,44,837,837,837,837,837,837,837,837,837,39,837,837',
'837,36,837,837,837,837,837,416,416,416,416,416,416,416,416,416,416,416',
'344,416,416,555,22,416,416,344,837,16,555,837,921,13,837,837,344,12',
'837,555,837,416,10,416,837,416,416,416,416,416,416,416,837,416,954,7',
'932,837,837,837,837,934,837,837,453,935,838,837,837,936,416,53,416,838',
'937,837,599,837,53,53,53,604,838,53,53,53,323,53,323,323,323,594,323',
'590,584,578,453,53,53,53,453,453,453,453,547,614,616,53,53,839,53,53',
'53,53,53,790,839,790,790,790,840,790,546,323,323,839,541,840,539,536',
'529,630,323,323,323,323,840,53,53,53,53,53,53,53,53,53,53,53,53,53,53',
'632,790,53,53,53,646,522,53,521,639,53,641,646,53,53,520,53,646,53,644',
'53,646,53,53,53,53,53,53,53,700,53,505,53,938,647,648,700,496,492,651',
'652,700,487,654,485,700,53,53,53,53,657,53,658,53,280,280,280,280,280',
'280,661,482,842,280,280,481,666,468,280,842,280,280,280,280,280,280',
'280,464,842,438,437,677,280,280,280,280,280,280,280,436,680,280,636',
'636,636,636,636,280,280,,280,280,280,280,280,280,280,280,280,,280,280',
'280,,280,280,280,280,280,884,,891,,,,,884,851,891,851,851,851,,851,',
'884,,891,280,925,,280,,,280,280,925,,280,,280,925,,,280,925,,821,,821',
'821,821,280,821,851,,,280,280,280,280,,280,280,,851,851,280,280,54,54',
'54,54,54,54,280,,280,54,54,,,,54,821,54,54,54,54,54,54,54,,821,821,821',
'821,54,54,54,54,54,54,54,,,54,277,277,277,277,277,54,54,,54,54,54,54',
'54,54,54,54,54,,54,54,54,,54,54,54,54,54,6,6,6,6,6,,,,672,,672,672,672',
',672,,,,,54,,,54,,,54,54,,,54,,54,,,,54,,,848,,848,848,848,54,848,672',
',,54,54,54,54,,54,54,,672,672,54,54,565,565,565,565,565,565,54,,54,565',
'565,,,,565,848,565,565,565,565,565,565,565,,848,848,848,848,565,565',
'565,565,565,565,565,,,565,480,480,480,480,480,565,565,,565,565,565,565',
'565,565,565,565,565,,565,565,565,,565,565,565,565,565,,,,,,,,,853,,853',
'853,853,,853,,,,,565,,,565,,,565,565,,,565,,565,,,,565,,,669,,669,669',
'669,565,669,853,,,565,565,565,565,,565,565,,853,853,565,565,0,0,0,0',
'0,0,565,,565,0,0,,,,0,669,0,0,0,0,0,0,0,,669,669,669,669,0,0,0,0,0,0',
'0,,,0,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,,0,0,0,,0,0,0,0,0,,,,,,,,855,,855',
'855,855,,855,,,,,,0,,,0,,,0,0,,,0,,0,,,,0,949,,949,949,949,,949,0,855',
',,,0,0,0,0,,0,0,855,855,,0,0,32,32,32,32,32,32,0,,0,32,32,,,949,32,',
'32,32,32,32,32,32,32,,949,949,,,32,32,32,32,32,32,32,,,32,,,,,,32,32',
',32,32,32,32,32,32,32,32,32,,32,32,32,,32,32,32,32,32,,,,,,,,,914,,914',
'914,914,,914,,,,,32,,,32,,,32,32,,,32,,32,,,,32,,,667,,667,667,667,32',
'667,914,,,32,32,32,32,,32,32,,914,914,32,32,285,285,285,285,285,285',
'32,,32,285,285,,,,285,667,285,285,285,285,285,285,285,,667,667,667,667',
'285,285,285,285,285,285,285,,,285,,,,,,285,285,,285,285,285,285,285',
'285,285,285,285,,285,285,285,,285,285,285,285,285,,,,,,,,,,,,,,,,,,',
',285,,,285,,,285,285,,,285,,285,,,,285,,,518,,518,518,518,285,518,,',
',285,285,285,285,,285,285,,,,285,285,113,113,113,113,113,113,285,,285',
'113,113,,,,113,518,113,113,113,113,113,113,113,,518,518,518,518,113',
'113,113,113,113,113,113,,,113,,,,,,113,113,113,113,113,113,113,113,113',
'113,113,113,,113,113,113,,113,113,113,113,113,,,,,,,,,,,,,,,,,,,,113',
',,113,,,113,113,,,113,,113,,,,113,,,909,,909,909,909,113,909,,,,113',
'113,113,113,,113,113,,,,113,113,543,543,543,543,543,543,113,,113,543',
'543,,,,543,909,543,543,543,543,543,543,543,,909,909,909,909,543,543',
'543,543,543,543,543,,,543,,,,,,543,543,,543,543,543,543,543,543,543',
'543,543,,543,543,543,,543,543,543,543,543,448,448,448,448,448,448,448',
',,448,448,,,,,,448,448,,543,,,543,,,543,543,,,543,,543,448,,448,543',
'448,448,448,448,448,448,448,543,448,,,,543,543,543,543,,543,543,,,,543',
'543,220,220,220,220,220,220,543,,543,220,220,,,,220,,220,220,220,220',
'220,220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,392,220,220,',
'220,220,220,220,220,220,220,220,220,,220,220,220,,220,220,220,220,220',
'392,392,392,392,392,392,392,392,392,392,392,,392,392,,,392,392,,220',
',,220,,,220,220,,,220,,220,392,,392,220,392,392,392,392,392,392,392',
'220,392,,,,220,220,220,220,,220,220,,,,220,220,,392,409,,,,220,,220',
'409,409,409,,,409,409,409,874,409,874,874,874,,874,,,,409,409,409,409',
',,,,,,,409,409,,409,409,409,409,409,,,,,,,,,874,874,,,,,,,,874,874,874',
'874,,409,409,409,409,409,409,409,409,409,409,409,409,409,409,,,409,409',
'409,,,409,,,409,,,409,409,,409,,409,,409,,409,409,409,409,409,409,409',
',409,409,409,,,,,,,,,,,,,,409,409,409,409,,409,,409,656,656,656,656',
'656,656,,,,656,656,,,,656,,656,656,656,656,656,656,656,,,,,,656,656',
'656,656,656,656,656,,,656,,,,,,656,656,,656,656,656,656,656,656,656',
'656,656,,656,656,656,,656,656,656,656,656,454,454,454,454,454,454,454',
',,454,454,,,,,,454,454,,656,,,656,,,656,656,,,656,,656,454,,454,656',
'454,454,454,454,454,454,454,656,454,,,,656,656,656,656,,656,656,,,,656',
'656,620,620,620,620,620,620,656,,656,620,620,,,,620,,620,620,620,620',
'620,620,620,,,,,,620,620,620,620,620,620,620,,,620,,,,,,620,620,,620',
'620,620,620,620,620,620,620,620,,620,620,620,,620,620,620,620,620,432',
'432,432,432,432,432,432,432,432,432,432,,432,432,,,432,432,,620,,,620',
',,620,620,,,620,,620,432,,432,620,432,432,432,432,432,432,432,620,432',
',,,620,620,620,620,,620,620,,,,620,620,197,197,197,197,197,197,620,',
'620,197,197,,,,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197',
'197,197,197,,,197,,,,,615,197,197,,197,197,197,197,197,197,197,197,197',
',197,197,197,,197,197,197,197,197,615,615,615,615,615,615,615,615,615',
'615,615,,615,615,,,615,615,,197,,,197,,,197,197,,,197,,197,615,,615',
'197,615,615,615,615,615,615,615,197,615,,,,197,197,197,197,,197,197',
',,,197,197,,615,408,,,,197,,197,408,408,408,,,408,408,408,566,408,566',
'566,566,,566,,,,408,408,408,408,,,,,,,,408,408,,408,408,408,408,408',
',,,,,,,,566,566,,,,,,,,566,566,566,566,,408,408,408,408,408,408,408',
'408,408,408,408,408,408,408,,,408,408,408,,,408,,,408,,,408,408,,408',
',408,,408,,408,408,408,408,408,408,408,,408,408,408,,,,,,,,,,,,,,408',
'408,408,408,,408,,408,806,806,806,806,806,806,,,,806,806,,,,806,,806',
'806,806,806,806,806,806,,,,,,806,806,806,806,806,806,806,,,806,,,,,',
'806,806,,806,806,806,806,806,806,806,806,806,,806,806,806,,806,806,806',
'806,806,455,455,455,455,455,455,455,455,,455,455,,,,,,455,455,,806,',
',806,,,806,806,,,806,,806,455,,455,806,455,455,455,455,455,455,455,806',
'455,,,,806,806,806,806,,806,806,,,,806,806,908,908,908,908,908,908,806',
',806,908,908,,,,908,,908,908,908,908,908,908,908,,,,,,908,908,908,908',
'908,908,908,,,908,,,,,,908,908,,908,908,908,908,908,908,908,908,908',
',908,908,908,,908,908,908,908,908,431,431,431,431,431,431,431,431,431',
'431,431,,431,431,,,431,431,,908,,,908,,,908,908,,,908,,908,431,,431',
'908,431,431,431,431,431,431,431,908,431,,,,908,908,908,908,,908,908',
',,,908,908,796,796,796,796,796,796,908,,908,796,796,,,,796,,796,796',
'796,796,796,796,796,,,,,,796,796,796,796,796,796,796,,,796,,,,,,796',
'796,,796,796,796,796,796,796,796,796,796,,796,796,796,,796,796,796,796',
'796,447,447,447,447,447,447,447,,,447,447,,,,,,447,447,,796,,,796,,',
'796,796,,,796,,796,447,,447,796,447,447,447,447,447,447,447,796,447',
',,,796,796,796,796,,796,796,,,,796,796,664,664,664,664,664,664,796,',
'796,664,664,,,,664,,664,664,664,664,664,664,664,,,,,,664,664,664,664',
'664,664,664,,,664,,,,,,664,664,,664,664,664,664,664,664,664,664,664',
',664,664,664,,664,664,664,664,664,446,,,,,,,,,,,,,,,,446,446,,664,,',
'664,,,664,664,,,664,,664,446,,446,664,446,446,446,446,,,446,664,446',
',,,664,664,664,664,,664,664,,,,664,664,800,800,800,800,800,800,664,',
'664,800,800,,,,800,,800,800,800,800,800,800,800,,,,,,800,800,800,800',
'800,800,800,,,800,,,,,,800,800,,800,800,800,800,800,800,800,800,800',
',800,800,800,,800,800,800,800,800,445,,,,,,,,,,,,,,,,445,445,,800,,',
'800,,,800,800,,,800,,800,445,,445,800,445,445,445,445,,,445,800,445',
',,,800,800,800,800,,800,800,,,,800,800,703,703,703,703,703,703,800,',
'800,703,703,,,,703,,703,703,703,703,703,703,703,,,,,,703,703,703,703',
'703,703,703,,,703,,,,,,703,703,,703,703,703,703,703,703,703,703,703',
',703,703,703,,703,703,703,703,703,444,,,,,,,,,,,,,,,,444,444,,703,,',
'703,,,703,703,,,703,,703,444,,444,703,444,444,444,444,,,444,703,444',
',,,703,703,703,703,,703,703,,,,703,703,665,665,665,665,665,665,703,',
'703,665,665,,,,665,,665,665,665,665,665,665,665,,,,,,665,665,665,665',
'665,665,665,,,665,,,,,,665,665,,665,665,665,665,665,665,665,665,665',
',665,665,665,,665,665,665,665,665,443,,,,,,,,,,,,,,,,443,443,,665,,',
'665,,,665,665,,,665,,665,443,,443,665,443,443,443,443,,,443,665,443',
',,,665,665,665,665,,665,665,,,,665,665,540,540,540,540,540,540,665,',
'665,540,540,,,,540,,540,540,540,540,540,540,540,,,,,,540,540,540,540',
'540,540,540,,,540,,,,,,540,540,,540,540,540,540,540,540,540,540,540',
',540,540,540,,540,540,540,540,540,451,451,451,451,451,451,451,,,451',
'451,,,,,,451,451,,540,,,540,,,540,540,,,540,,540,451,,451,540,451,451',
'451,451,451,451,451,540,451,,,,540,540,540,540,,540,540,,,,540,540,627',
'627,627,627,627,627,540,,540,627,627,,,,627,,627,627,627,627,627,627',
'627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,627,627,,627,627,627',
'627,627,627,627,627,627,,627,627,627,,627,627,627,627,627,442,442,442',
'442,442,442,442,,,442,442,,,,,,442,442,,627,,,627,,,627,627,,,627,,627',
'442,,442,627,442,442,442,442,442,442,442,627,442,,,,627,627,627,627',
',627,627,,,,627,627,797,797,797,797,797,797,627,,627,797,797,,,,797',
',797,797,797,797,797,797,797,,,,,,797,797,797,797,797,797,797,,,797',
',,,,,797,797,,797,797,797,797,797,797,797,797,797,,797,797,797,,797',
'797,797,797,797,450,450,450,450,450,450,450,,,450,450,,,,,,450,450,',
'797,,,797,,,797,797,,,797,,797,450,,450,797,450,450,450,450,450,450',
'450,797,450,,,,797,797,797,797,,797,797,,,,797,797,906,906,906,906,906',
'906,797,,797,906,906,,,,906,,906,906,906,906,906,906,906,,,,,,906,906',
'906,906,906,906,906,,,906,,,,,,906,906,,906,906,906,906,906,906,906',
'906,906,,906,906,906,,906,906,906,906,906,449,449,449,449,449,449,449',
',,449,449,,,,,,449,449,,906,,,906,,,906,906,,,906,,906,449,,449,906',
'449,449,449,449,449,449,449,906,449,,,,906,906,906,906,,906,906,,,,906',
'906,900,900,900,900,900,900,906,,906,900,900,,,,900,,900,900,900,900',
'900,900,900,,,,,,900,900,900,900,900,900,900,,,900,,,,,,900,900,,900',
'900,900,900,900,900,900,900,900,,900,900,900,,900,900,900,900,900,441',
',,,,,,,,,,,,,,,441,441,,900,,,900,,,900,900,,,900,,900,441,,,900,441',
'441,441,441,,,,900,,,,,900,900,900,900,,900,900,,,,900,900,757,757,757',
'757,757,757,900,,900,757,757,,,,757,,757,757,757,757,757,757,757,,,',
',,757,757,757,757,757,757,757,,,757,,,,,,757,757,,757,757,757,757,757',
'757,757,757,757,,757,757,757,,757,757,757,757,757,440,,,,,,,,,,,,,,',
',440,440,,757,,,757,,,757,757,,,757,,757,440,,440,757,440,440,440,440',
',,,757,,,,,757,757,757,757,,757,757,,,,757,757,718,718,718,718,718,718',
'757,,757,718,718,,,,718,,718,718,718,718,718,718,718,,,,,,718,718,718',
'718,718,718,718,,,718,,,,,,718,718,,718,718,718,718,718,718,718,718',
'718,,718,718,718,,718,718,718,718,718,439,,,,,,,,,,,,,,,,439,439,,718',
',,718,,,718,718,,,718,,718,439,,439,718,439,439,439,439,,,,718,,,,,718',
'718,718,718,,718,718,,,,718,718,767,767,767,767,767,767,718,,718,767',
'767,,,,767,,767,767,767,767,767,767,767,,,,,,767,767,767,767,767,767',
'767,,,767,,,,,,767,767,,767,767,767,767,767,767,767,767,767,,767,767',
'767,,767,767,767,767,767,,,,,,,,,,,,,,,,,,,,767,,,767,,,767,767,,,767',
',767,,,,767,,,,,,,,767,,,,,767,767,767,767,,767,767,,,,767,767,,109',
'109,109,,109,767,,767,109,109,,,,109,,109,109,109,109,109,109,109,,',
',,,109,109,109,109,109,109,109,,,109,,,,,,,109,,,109,109,109,109,109',
'109,109,109,,109,109,109,,109,109,109,109,109,,,,,,,,,,,,,,,,,,,,109',
',,109,,,109,109,,,109,,,,,,109,,,,,,,,109,,,,,109,109,109,109,,109,109',
',,,109,109,,110,110,110,,110,109,,109,110,110,,,,110,,110,110,110,110',
'110,110,110,,,,,,110,110,110,110,110,110,110,,,110,,,,,,,110,,,110,110',
'110,110,110,110,110,110,,110,110,110,,110,110,110,110,110,,,,,,,,,,',
',,,,,,,,,110,,,110,,,110,110,,,110,,,,,,110,,,,,,,,110,,,,,110,110,110',
'110,,110,110,,,,110,110,,111,111,111,,111,110,,110,111,111,,,,111,,111',
'111,111,111,111,111,111,,,,,,111,111,111,111,111,111,111,,,111,,,,,',
',111,,,111,111,111,111,111,111,111,111,,111,111,111,,111,111,111,111',
'111,,,,,,,,,,,,,,,,,,,,111,,,111,,,111,111,,,111,,,,,,111,,,,,,,,111',
',,,,111,111,111,111,,111,111,,,,111,111,,112,112,112,112,112,111,,111',
'112,112,,,,112,,112,112,112,112,112,112,112,,,,,,112,112,112,112,112',
'112,112,,,112,,,,,,112,112,,112,112,112,112,112,112,112,112,112,,112',
'112,112,,112,112,112,112,112,,,,,,,,,,,,,,,,,,,,112,,,112,,,112,112',
',,112,,112,,,,112,,,,,,,,112,,,,,112,112,112,112,,112,112,,,,112,112',
',504,504,504,,504,112,,112,504,504,,,,504,,504,504,504,504,504,504,504',
',,,,,504,504,504,504,504,504,504,,,504,,,,,,,504,,,504,504,504,504,504',
'504,504,504,,504,504,504,,504,504,504,504,504,,,,,,,,,,,,,,,,,,,,504',
',,504,,,504,504,,,504,,,,,,504,,,,,,,,504,,,,,504,504,504,504,,504,504',
',,,504,504,,500,500,500,,500,504,,504,500,500,,,,500,,500,500,500,500',
'500,500,500,,,,,,500,500,500,500,500,500,500,,,500,,,,,,,500,,,500,500',
'500,500,500,500,500,500,,500,500,500,,500,500,500,500,500,,,,,,,,,,',
',,,,,,,,,500,,,500,,,500,500,,,500,,,,,,500,,,,,,,,500,,,,,500,500,500',
'500,,500,500,,,,500,500,,198,198,198,,198,500,,500,198,198,,,,198,,198',
'198,198,198,198,198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,',
',198,,,198,198,198,198,198,198,198,198,,198,198,198,,198,198,198,198',
'198,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,198,,,198,,198,,,,198,,,,,,,',
'198,,,,,198,198,198,198,,198,198,,,,198,198,,199,199,199,,199,198,,198',
'199,199,,,,199,,199,199,199,199,199,199,199,,,,,,199,199,199,199,199',
'199,199,,,199,,,,,,,199,,,199,199,199,199,199,199,199,199,,199,199,199',
',199,199,199,199,199,,,,,,,,,,,,,,,,,,,,199,,,199,,,199,199,,,199,,',
',,,199,,,,,,,,199,,,,,199,199,199,199,,199,199,,,,199,199,,200,200,200',
',200,199,,199,200,200,,,,200,,200,200,200,200,200,200,200,,,,,,200,200',
'200,200,200,200,200,,,200,,,,,,,200,,,200,200,200,200,200,200,200,200',
'200,200,200,200,,200,200,200,200,200,,,,,,,,,,,,,,,,,,,,200,,,200,,',
'200,200,,,200,,200,,200,,200,,,,,,,,200,,,,,200,200,200,200,,200,200',
',,,200,200,,499,499,499,,499,200,,200,499,499,,,,499,,499,499,499,499',
'499,499,499,,,,,,499,499,499,499,499,499,499,,,499,,,,,,,499,,,499,499',
'499,499,499,499,499,499,,499,499,499,,499,499,499,499,499,,,,,,,,,,',
',,,,,,,,,499,,,499,,,499,499,,,499,,,,,,499,,,,,,,,499,,,,,499,499,499',
'499,,499,499,,,,499,499,,498,498,498,,498,499,,499,498,498,,,,498,,498',
'498,498,498,498,498,498,,,,,,498,498,498,498,498,498,498,,,498,,,,,',
',498,,,498,498,498,498,498,498,498,498,,498,498,498,,498,498,498,498',
'498,,,,,,,,,,,,,,,,,,,,498,,,498,,,498,498,,,498,,,,,,498,,,,,,,,498',
',,,,498,498,498,498,,498,498,,,,498,498,,203,203,203,,203,498,,498,203',
'203,,,,203,,203,203,203,203,203,203,203,,,,,,203,203,203,203,203,203',
'203,,,203,,,,,,,203,,,203,203,203,203,203,203,203,203,,203,203,203,',
'203,203,203,203,203,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,203,,,203,,,',
',,203,,,,,,,,203,,,,,203,203,203,203,,203,203,,,,203,203,,204,204,204',
',204,203,,203,204,204,,,,204,,204,204,204,204,204,204,204,,,,,,204,204',
'204,204,204,204,204,,,204,,,,,,,204,,,204,204,204,204,204,204,204,204',
',204,204,204,,204,204,204,204,204,,,,,,,,,,,,,,,,,,,,204,,,204,,,204',
'204,,,204,,204,,,,204,,,,,,,,204,,,,,204,204,204,204,,204,204,,,,204',
'204,,205,205,205,,205,204,,204,205,205,,,,205,,205,205,205,205,205,205',
'205,,,,,,205,205,205,205,205,205,205,,,205,,,,,,,205,,,205,205,205,205',
'205,205,205,205,,205,205,205,,205,205,205,205,205,,,,,,,,,,,,,,,,,,',
',205,,,205,,,205,205,,,205,,,,,,205,,,,,,,,205,,,,,205,205,205,205,',
'205,205,,,,205,205,,206,206,206,,206,205,,205,206,206,,,,206,,206,206',
'206,206,206,206,206,,,,,,206,206,206,206,206,206,206,,,206,,,,,,,206',
',,206,206,206,206,206,206,206,206,,206,206,206,,206,206,206,206,206',
',,,,,,,,,,,,,,,,,,,206,,,206,,,206,206,,,206,,,,,,206,,,,,,,,206,,,',
',206,206,206,206,,206,206,,,,206,206,,207,207,207,,207,206,,206,207',
'207,,,,207,,207,207,207,207,207,207,207,,,,,,207,207,207,207,207,207',
'207,,,207,,,,,,,207,,,207,207,207,207,207,207,207,207,,207,207,207,',
'207,207,207,207,207,,,,,,,,,,,,,,,,,,,,207,,,207,,,207,207,,,207,,,',
',,207,,,,,,,,207,,,,,207,207,207,207,,207,207,,,,207,207,,208,208,208',
',208,207,,207,208,208,,,,208,,208,208,208,208,208,208,208,,,,,,208,208',
'208,208,208,208,208,,,208,,,,,,,208,,,208,208,208,208,208,208,208,208',
',208,208,208,,208,208,208,208,208,,,,,,,,,,,,,,,,,,,,208,,,208,,,208',
'208,,,208,,,,,,208,,,,,,,,208,,,,,208,208,208,208,,208,208,,,,208,208',
'208,5,5,5,5,5,208,,208,5,5,,,,5,,5,5,5,5,5,5,5,,,,,,5,5,5,5,5,5,5,,',
'5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,,5,5,5,,5,5,5,5,5,,,,,,,,,,,,,,,,,,,',
'5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,5,,,,,5,5,5,5,,5,5,,,,5,5,,649,649,649',
',649,5,,5,649,649,,,,649,,649,649,649,649,649,649,649,,,,,,649,649,649',
'649,649,649,649,,,649,,,,,,,649,,,649,649,649,649,649,649,649,649,,649',
'649,649,,649,649,,,649,,,,,,,,,,,,,,,,,,,,649,,,649,,,649,649,,,649',
',,,,,,,,,,,,,,,,,,649,649,649,649,,649,649,,,,649,649,,495,495,495,',
'495,649,,649,495,495,,,,495,,495,495,495,495,495,495,495,,,,,,495,495',
'495,495,495,495,495,,,495,,,,,,,495,,,495,495,495,495,495,495,495,495',
',495,495,495,,495,495,,,495,,,,,,,,,,,,,,,,,,,,495,,,495,,,495,495,',
',495,,,,,,,,,,,,,,,,,,,495,495,495,495,,495,495,,,,495,495,,888,888',
'888,,888,495,,495,888,888,,,,888,,888,888,888,888,888,888,888,,,,,,888',
'888,888,888,888,888,888,,,888,,,,,,,888,,,888,888,888,888,888,888,888',
'888,888,888,888,888,,888,888,888,888,888,,,,,,,,,,,,,,,,,,,,888,,,888',
',,888,888,,,888,,888,,888,,888,,,,,,,,888,,,,,888,888,888,888,,888,888',
',,,888,888,,488,488,488,,488,888,,888,488,488,,,,488,,488,488,488,488',
'488,488,488,,,,,,488,488,488,488,488,488,488,,,488,,,,,,,488,,,488,488',
'488,488,488,488,488,488,488,488,488,488,,488,488,488,488,488,,,,,,,',
',,,,,,,,,,,,488,,,488,,,488,488,,,488,,488,,488,,488,,,,,,,,488,,,,',
'488,488,488,488,,488,488,,,,488,488,,486,486,486,,486,488,,488,486,486',
',,,486,,486,486,486,486,486,486,486,,,,,,486,486,486,486,486,486,486',
',,486,,,,,,,486,,,486,486,486,486,486,486,486,486,,486,486,486,,486',
'486,,,486,,,,,,,,,,,,,,,,,,,,486,,,486,,,486,486,,,486,,,,,,,,,,,,,',
',,,,,486,486,486,486,,486,486,,,,486,486,,219,219,219,,219,486,,486',
'219,219,,,,219,,219,219,219,219,219,219,219,,,,,,219,219,219,219,219',
'219,219,,,219,,,,,,,219,,,219,219,219,219,219,219,219,219,,219,219,219',
',219,219,219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,219,,,219,,',
',,,219,,,,,,,,219,,,,,219,219,219,219,,219,219,,,,219,219,,222,222,222',
',222,219,,219,222,222,,,,222,,222,222,222,222,222,222,222,,,,,,222,222',
'222,222,222,222,222,,,222,,,,,,,222,,,222,222,222,222,222,222,222,222',
',222,222,222,,222,222,222,222,222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222',
'222,,,222,,,,,,222,,,,,,,,222,,,,,222,222,222,222,,222,222,,,,222,222',
',223,223,223,,223,222,,222,223,223,,,,223,,223,223,223,223,223,223,223',
',,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223,223,223,223',
'223,223,223,,223,223,223,,223,223,223,223,223,,,,,,,,,,,,,,,,,,,,223',
',,223,,,223,223,,,223,,,,,,223,,,,,,,,223,,,,,223,223,223,223,,223,223',
',,,223,223,,224,224,224,,224,223,,223,224,224,,,,224,,224,224,224,224',
'224,224,224,,,,,,224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224',
'224,224,224,224,224,224,,224,224,224,,224,224,224,224,224,,,,,,,,,,',
',,,,,,,,,224,,,224,,,224,224,,,224,,,,,,224,,,,,,,,224,,,,,224,224,224',
'224,,224,224,,,,224,224,,225,225,225,,225,224,,224,225,225,,,,225,,225',
'225,225,225,225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,',
',225,,,225,225,225,225,225,225,225,225,,225,225,225,,225,225,225,225',
'225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,225,,,225,,,,,,225,,,,,,,,225',
',,,,225,225,225,225,,225,225,,,,225,225,,226,226,226,,226,225,,225,226',
'226,,,,226,,226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226',
'226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,226,,226,226,226,',
'226,226,226,226,226,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,226,,,226,,,',
',,226,,,,,,,,226,,,,,226,226,226,226,,226,226,,,,226,226,,227,227,227',
',227,226,,226,227,227,,,,227,,227,227,227,227,227,227,227,,,,,,227,227',
'227,227,227,227,227,,,227,,,,,,,227,,,227,227,227,227,227,227,227,227',
',227,227,227,,227,227,227,227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227',
'227,,,227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,,227,227,,,,227,227',
',228,228,228,,228,227,,227,228,228,,,,228,,228,228,228,228,228,228,228',
',,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,228,228,228',
'228,228,228,,228,228,228,,228,228,228,228,228,,,,,,,,,,,,,,,,,,,,228',
',,228,,,228,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,,228,228',
',,,228,228,,229,229,229,,229,228,,228,229,229,,,,229,,229,229,229,229',
'229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229',
'229,229,229,229,229,229,,229,229,229,,229,229,229,229,229,,,,,,,,,,',
',,,,,,,,,229,,,229,,,229,229,,,229,,,,,,229,,,,,,,,229,,,,,229,229,229',
'229,,229,229,,,,229,229,,230,230,230,,230,229,,229,230,230,,,,230,,230',
'230,230,230,230,230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,',
',230,,,230,230,230,230,230,230,230,230,,230,230,230,,230,230,230,230',
'230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,230,,,230,,,,,,230,,,,,,,,230',
',,,,230,230,230,230,,230,230,,,,230,230,,231,231,231,,231,230,,230,231',
'231,,,,231,,231,231,231,231,231,231,231,,,,,,231,231,231,231,231,231',
'231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231,,231,231,231,',
'231,231,231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,231,,,231,,,',
',,231,,,,,,,,231,,,,,231,231,231,231,,231,231,,,,231,231,,232,232,232',
',232,231,,231,232,232,,,,232,,232,232,232,232,232,232,232,,,,,,232,232',
'232,232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232',
',232,232,232,,232,232,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232',
'232,,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232,,232,232,,,,232,232',
',233,233,233,,233,232,,232,233,233,,,,233,,233,233,233,233,233,233,233',
',,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233',
'233,233,233,,233,233,233,,233,233,233,233,233,,,,,,,,,,,,,,,,,,,,233',
',,233,,,233,233,,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,,233,233',
',,,233,233,,234,234,234,,234,233,,233,234,234,,,,234,,234,234,234,234',
'234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234',
'234,234,234,234,234,234,,234,234,234,,234,234,234,234,234,,,,,,,,,,',
',,,,,,,,,234,,,234,,,234,234,,,234,,,,,,234,,,,,,,,234,,,,,234,234,234',
'234,,234,234,,,,234,234,,235,235,235,,235,234,,234,235,235,,,,235,,235',
'235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,',
',235,,,235,235,235,235,235,235,235,235,,235,235,235,,235,235,235,235',
'235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,235,,,235,,,,,,235,,,,,,,,235',
',,,,235,235,235,235,,235,235,,,,235,235,,236,236,236,,236,235,,235,236',
'236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236,236',
'236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,236,,236,236,236,',
'236,236,236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,236,,,236,,,',
',,236,,,,,,,,236,,,,,236,236,236,236,,236,236,,,,236,236,,237,237,237',
',237,236,,236,237,237,,,,237,,237,237,237,237,237,237,237,,,,,,237,237',
'237,237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237',
',237,237,237,,237,237,237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237',
'237,,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,,237,237,,,,237,237',
',238,238,238,,238,237,,237,238,238,,,,238,,238,238,238,238,238,238,238',
',,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238',
'238,238,238,,238,238,238,,238,238,238,238,238,,,,,,,,,,,,,,,,,,,,238',
',,238,,,238,238,,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238,,238,238',
',,,238,238,,239,239,239,,239,238,,238,239,239,,,,239,,239,239,239,239',
'239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239',
'239,239,239,239,239,239,,239,239,239,,239,239,239,239,239,,,,,,,,,,',
',,,,,,,,,239,,,239,,,239,239,,,239,,,,,,239,,,,,,,,239,,,,,239,239,239',
'239,,239,239,,,,239,239,,240,240,240,,240,239,,239,240,240,,,,240,,240',
'240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,',
',240,,,240,240,240,240,240,240,240,240,,240,240,240,,240,240,240,240',
'240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,240,,,240,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,,240,240,,,,240,240,,241,241,241,,241,240,,240,241',
'241,,,,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241,241,241',
'241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,,241,241,241,',
'241,241,241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,241,,,241,,,',
',,241,,,,,,,,241,,,,,241,241,241,241,,241,241,,,,241,241,,242,242,242',
',242,241,,241,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242',
'242,242,242,242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,242',
',242,242,242,,242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242',
'242,,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,,242,242,,,,242,242',
',742,742,742,,742,242,,242,742,742,,,,742,,742,742,742,742,742,742,742',
',,,,,742,742,742,742,742,742,742,,,742,,,,,,,742,,,742,742,742,742,742',
'742,742,742,,742,742,742,,742,742,742,742,742,,,,,,,,,,,,,,,,,,,,742',
',,742,,,742,742,,,742,,,,,,742,,,,,,,,742,,,,,742,742,742,742,,742,742',
',,,742,742,,244,244,244,,244,742,,742,244,244,,,,244,,244,244,244,244',
'244,244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244',
'244,244,244,244,244,244,,244,244,244,,244,244,244,244,244,,,,,,,,,,',
',,,,,,,,,244,,,244,,,244,244,,,244,,,,,,244,,,,,,,,244,,,,,244,244,244',
'244,,244,244,,,,244,244,,245,245,245,,245,244,,244,245,245,,,,245,,245',
'245,245,245,245,245,245,,,,,,245,245,245,245,245,245,245,,,245,,,,,',
',245,,,245,245,245,245,245,245,245,245,,245,245,245,,245,245,245,245',
'245,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,245,,,245,,,,,,245,,,,,,,,245',
',,,,245,245,245,245,,245,245,,,,245,245,,246,246,246,,246,245,,245,246',
'246,,,,246,,246,246,246,246,246,246,246,,,,,,246,246,246,246,246,246',
'246,,,246,,,,,,,246,,,246,246,246,246,246,246,246,246,,246,246,246,',
'246,246,246,246,246,,,,,,,,,,,,,,,,,,,,246,,,246,,,246,246,,,246,,,',
',,246,,,,,,,,246,,,,,246,246,246,246,,246,246,,,,246,246,,247,247,247',
',247,246,,246,247,247,,,,247,,247,247,247,247,247,247,247,,,,,,247,247',
'247,247,247,247,247,,,247,,,,,,,247,,,247,247,247,247,247,247,247,247',
',247,247,247,,247,247,247,247,247,,,,,,,,,,,,,,,,,,,,247,,,247,,,247',
'247,,,247,,,,,,247,,,,,,,,247,,,,,247,247,247,247,,247,247,,,,247,247',
',479,479,479,479,479,247,,247,479,479,,,,479,,479,479,479,479,479,479',
'479,,,,,,479,479,479,479,479,479,479,,,479,,,,,,479,479,,479,479,479',
'479,479,479,479,479,479,,479,479,479,,479,479,479,479,479,736,736,736',
'736,736,736,736,736,736,736,736,,736,736,,,736,736,,479,,,479,,,479',
'479,,,479,,479,736,,736,479,736,736,736,736,736,736,736,479,736,,,,479',
'479,479,479,,479,479,,,,479,479,,736,,,,479,479,,479,253,253,253,,253',
',,,253,253,,,,253,,253,253,253,253,253,253,253,,,,,,253,253,253,253',
'253,253,253,,,253,,,,,,,253,,,253,253,253,253,253,253,253,253,253,253',
'253,253,,253,253,253,253,253,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,253',
',,253,,253,,253,,253,,,,,,,,253,,,,,253,253,253,253,,253,253,,,,253',
'253,,254,254,254,,254,253,,253,254,254,,,,254,,254,254,254,254,254,254',
'254,,,,,,254,254,254,254,254,254,254,,,254,,,,,,,254,,,254,254,254,254',
'254,254,254,254,254,254,254,254,,254,254,254,254,254,,,,,,,,,,,,,,,',
',,,,254,,,254,,,254,254,,,254,,254,,254,,254,,,,,,,,254,,,,,254,254',
'254,254,,254,254,,,,254,254,,262,262,262,,262,254,,254,262,262,,,,262',
',262,262,262,262,262,262,262,,,,,,262,262,262,262,262,262,262,,,262',
',,,,,,262,,,262,262,262,262,262,262,262,262,262,262,262,262,,262,262',
'262,262,262,,,,,,,,,,,,,,,,,,,,262,,,262,,,262,262,,,262,,262,,262,',
'262,,,,,,,,262,,,,,262,262,262,262,,262,262,,,,262,262,262,475,475,475',
',475,262,,262,475,475,,,,475,,475,475,475,475,475,475,475,,,,,,475,475',
'475,475,475,475,475,,,475,,,,,,,475,,,475,475,475,475,475,475,475,475',
',475,475,475,,475,475,475,475,475,,,,,,,,,,,,,,,,,,,,475,,,475,,,475',
'475,,,475,,,,,,475,,,,,,,,475,,,,,475,475,475,475,,475,475,,,,475,475',
',473,473,473,,473,475,,475,473,473,,,,473,,473,473,473,473,473,473,473',
',,,,,473,473,473,473,473,473,473,,,473,,,,,,,473,,,473,473,473,473,473',
'473,473,473,473,473,473,473,,473,473,473,473,473,,,,,,,,,,,,,,,,,,,',
'473,,,473,,,473,473,,,473,,,,473,,473,,,,,,,,473,,,,,473,473,473,473',
',473,473,,,,473,473,,471,471,471,,471,473,,473,471,471,,,,471,,471,471',
'471,471,471,471,471,,,,,,471,471,471,471,471,471,471,,,471,,,,,,,471',
',,471,471,471,471,471,471,471,471,471,471,471,471,,471,471,471,471,471',
',,,,,,,,,,,,,,,,,,,471,,,471,,,471,471,,,471,,471,,471,,471,,,,,,,,471',
',,,,471,471,471,471,,471,471,,,,471,471,,269,269,269,,269,471,,471,269',
'269,,,,269,,269,269,269,269,269,269,269,,,,,,269,269,269,269,269,269',
'269,,,269,,,,,,,269,,,269,269,269,269,269,269,269,269,,269,269,269,',
'269,269,269,269,269,,,,,,,,,,,,,,,,,,,,269,,,269,,,269,269,,,269,,,',
',,269,,,,,,,,269,,,,,269,269,269,269,,269,269,,,,269,269,,271,271,271',
',271,269,,269,271,271,,,,271,,271,271,271,271,271,271,271,,,,,,271,271',
'271,271,271,271,271,,,271,,,,,,,271,,,271,271,271,271,271,271,271,271',
',271,271,271,,271,271,271,271,271,,,,,,,,,,,,,,,,,,,,271,,,271,,,271',
'271,,,271,,,,,,271,,,,,,,,271,,,,,271,271,271,271,,271,271,,,,271,271',
',273,273,273,,273,271,,271,273,273,,,,273,,273,273,273,273,273,273,273',
',,,,,273,273,273,273,273,273,273,,,273,,,,,,,273,,,273,273,273,273,273',
'273,273,273,,273,273,273,,273,273,273,273,273,,,,,,,,,,,,,,,,,,,,273',
',,273,,,273,273,,,273,,,,,,273,,,,,,,,273,,,,,273,273,273,273,,273,273',
',,,273,273,,278,278,278,278,278,273,,273,278,278,,,,278,,278,278,278',
'278,278,278,278,,,,,,278,278,278,278,278,278,278,,,278,,,,,,278,278',
',278,278,278,278,278,278,278,278,278,,278,278,278,,278,278,278,278,278',
',,,,,,,,,,,,,,,,,,,278,,,278,,,278,278,,,278,,278,,,,278,,,,,,,,278',
',,,,278,278,278,278,,278,278,,,,278,278,,831,831,831,,831,278,,278,831',
'831,,,,831,,831,831,831,831,831,831,831,,,,,,831,831,831,831,831,831',
'831,,,831,,,,,,,831,,,831,831,831,831,831,831,831,831,,831,831,831,',
'831,831,,,831,,,,,,,,,,,,,,,,,,,,831,,,831,,,831,831,,,831,,,,,,,,,',
',,,,,,,,,831,831,831,831,,831,831,,,,831,831,,673,673,673,,673,831,',
'831,673,673,,,,673,,673,673,673,673,673,673,673,,,,,,673,673,673,673',
'673,673,673,,,673,,,,,,,673,,,673,673,673,673,673,673,673,673,,673,673',
'673,,673,673,673,673,673,,,,,,,,,,,,,,,,,,,,673,,,673,,,673,673,,,673',
',,,,,673,,,,,,,,673,,,,,673,673,673,673,,673,673,,,,673,673,,430,430',
'430,,430,673,,673,430,430,,,,430,,430,430,430,430,430,430,430,,,,,,430',
'430,430,430,430,430,430,,,430,,,,,,,430,,,430,430,430,430,430,430,430',
'430,,430,430,430,,430,430,430,430,430,,,,,,,,,,,,,,,,,,,,430,,,430,',
',430,430,,,430,,,,,,430,,,,,,,,430,,,,,430,430,430,430,,430,430,,,,430',
'430,,429,429,429,,429,430,,430,429,429,,,,429,,429,429,429,429,429,429',
'429,,,,,,429,429,429,429,429,429,429,,,429,,,,,,,429,,,429,429,429,429',
'429,429,429,429,,429,429,429,,429,429,429,429,429,,,,,,,,,,,,,,,,,,',
',429,,,429,,,429,429,,,429,,,,,,429,,,,,,,,429,,,,,429,429,429,429,',
'429,429,,,,429,429,,284,284,284,,284,429,,429,284,284,,,,284,,284,284',
'284,284,284,284,284,,,,,,284,284,284,284,284,284,284,,,284,,,,,,,284',
',,284,284,284,284,284,284,284,284,,284,284,284,,284,284,,,284,818,818',
'818,818,818,818,818,818,818,818,818,,818,818,,,818,818,,284,,,284,,',
'284,284,,,284,,,818,,818,,818,818,818,818,818,818,818,,818,,,,284,284',
'284,284,,284,284,,,,284,284,,818,,284,,,284,,284,428,428,428,,428,,',
',428,428,,,,428,,428,428,428,428,428,428,428,,,,,,428,428,428,428,428',
'428,428,,,428,,,,,,,428,,,428,428,428,428,428,428,428,428,,428,428,428',
',428,428,428,428,428,,,,,,,,,,,,,,,,,,,,428,,,428,,,428,428,,,428,,',
',,,428,,,,,,,,428,,,,,428,428,428,428,,428,428,,,,428,428,,426,426,426',
',426,428,,428,426,426,,,,426,,426,426,426,426,426,426,426,,,,,,426,426',
'426,426,426,426,426,,,426,,,,,,,426,,,426,426,426,426,426,426,426,426',
'426,426,426,426,,426,426,426,426,426,,,,,,,,,,,,,,,,,,,,426,,,426,,',
'426,426,,,426,,426,,426,,426,,,,,,,,426,,,,,426,426,426,426,,426,426',
',,,426,426,,607,607,607,,607,426,,426,607,607,,,,607,,607,607,607,607',
'607,607,607,,,,,,607,607,607,607,607,607,607,,,607,,,,,,,607,,,607,607',
'607,607,607,607,607,607,,607,607,607,,607,607,607,607,607,,,,,,,,,,',
',,,,,,,,,607,,,607,,,607,607,,,607,,,,,,607,,,,,,,,607,,,,,607,607,607',
'607,,607,607,,,,607,607,,591,591,591,,591,607,,607,591,591,,,,591,,591',
'591,591,591,591,591,591,,,,,,591,591,591,591,591,591,591,,,591,,,,,',
',591,,,591,591,591,591,591,591,591,591,,591,591,591,,591,591,591,591',
'591,,,,,,,,,,,,,,,,,,,,591,,,591,,,591,591,,,591,,591,,,,591,,,,,,,',
'591,,,,,591,591,591,591,,591,591,,,,591,591,,817,817,817,,817,591,,591',
'817,817,,,,817,,817,817,817,817,817,817,817,,,,,,817,817,817,817,817',
'817,817,,,817,,,,,,,817,,,817,817,817,817,817,817,817,817,,817,817,817',
',817,817,817,817,817,,,,,,,,,,,,,,,,,,,,817,,,817,,,817,817,,,817,,',
',,,817,,,,,,,,817,,,,,817,817,817,817,,817,817,,,,817,817,,816,816,816',
',816,817,,817,816,816,,,,816,,816,816,816,816,816,816,816,,,,,,816,816',
'816,816,816,816,816,,,816,,,,,,,816,,,816,816,816,816,816,816,816,816',
'816,816,816,816,,816,816,816,816,816,,,,,,,,,,,,,,,,,,,,816,,,816,,',
'816,816,,,816,,,,816,,816,,,,,,,,816,,,,,816,816,816,816,,816,816,,',
',816,816,,301,301,301,,301,816,,816,301,301,,,,301,,301,301,301,301',
'301,301,301,,,,,,301,301,301,301,301,301,301,,,301,,,,,,,301,,,301,301',
'301,301,301,301,301,301,,301,301,301,,301,301,,,301,,,,,,,,,,,,,,,,',
',,,301,,,301,,,301,301,,,301,,,,,,,,,,,,,,,,,,,301,301,301,301,,301',
'301,,,,301,301,,698,698,698,,698,301,,301,698,698,,,,698,,698,698,698',
'698,698,698,698,,,,,,698,698,698,698,698,698,698,,,698,,,,,,,698,,,698',
'698,698,698,698,698,698,698,,698,698,698,,698,698,698,698,698,,,,,,',
',,,,,,,,,,,,,698,,,698,,,698,698,,,698,,,,,,698,,,,,,,,698,,,,,698,698',
'698,698,,698,698,,,,698,698,,799,799,799,,799,698,,698,799,799,,,,799',
',799,799,799,799,799,799,799,,,,,,799,799,799,799,799,799,799,,,799',
',,,,,,799,,,799,799,799,799,799,799,799,799,,799,799,799,,799,799,799',
'799,799,,,,,,,,,,,,,,,,,,,,799,,,799,,,799,799,,,799,,799,,,,799,,,',
',,,,799,,,,,799,799,799,799,,799,799,,,,799,799,,310,310,310,,310,799',
',799,310,310,,,,310,,310,310,310,310,310,310,310,,,,,,310,310,310,310',
'310,310,310,,,310,,,,,,,310,,,310,310,310,310,310,310,310,310,,310,310',
'310,,310,310,310,310,310,,,,,,,,,,,,,,,,,,,,310,,,310,310,,310,310,',
',310,,,,,,310,,,,,,,,310,,,,,310,310,310,310,,310,310,,,,310,310,,243',
'243,243,,243,310,,310,243,243,,,,243,,243,243,243,243,243,243,243,,',
',,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,243,243,243',
'243,243,243,,243,243,243,,243,243,243,243,243,,,,,,,,,,,,,,,,,,,,243',
',,243,,,243,243,,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243,,243,243',
',,,243,243,,743,743,743,,743,243,,243,743,743,,,,743,,743,743,743,743',
'743,743,743,,,,,,743,743,743,743,743,743,743,,,743,,,,,,,743,,,743,743',
'743,743,743,743,743,743,,743,743,743,,743,743,743,743,743,,,,,,,,,,',
',,,,,,,,,743,,,743,,,743,743,,,743,,,,,,743,,,,,,,,743,,,,,743,743,743',
'743,,743,743,,,,743,743,,744,744,744,,744,743,,743,744,744,,,,744,,744',
'744,744,744,744,744,744,,,,,,744,744,744,744,744,744,744,,,744,,,,,',
',744,,,744,744,744,744,744,744,744,744,,744,744,744,,744,744,744,744',
'744,,,,,,,,,,,,,,,,,,,,744,,,744,,,744,744,,,744,,,,,,744,,,,,,,,744',
',,,,744,744,744,744,,744,744,,,,744,744,,592,592,592,,592,744,,744,592',
'592,,,,592,,592,592,592,592,592,592,592,,,,,,592,592,592,592,592,592',
'592,,,592,,,,,,,592,,,592,592,592,592,592,592,592,592,,592,592,592,',
'592,592,592,592,592,,,,,,,,,,,,,,,,,,,,592,,,592,,,592,592,,,592,,,',
',,592,,,,,,,,592,,,,,592,592,592,592,,592,592,,,,592,592,,606,606,606',
',606,592,,592,606,606,,,,606,,606,606,606,606,606,606,606,,,,,,606,606',
'606,606,606,606,606,,,606,,,,,,,606,,,606,606,606,606,606,606,606,606',
',606,606,606,,606,606,606,606,606,,,,,,,,,,,,,,,,,,,,606,,,606,,,606',
'606,,,606,,,,,,606,,,,,,,,606,,,,,606,606,606,606,,606,606,,,,606,606',
',595,595,595,,595,606,,606,595,595,,,,595,,595,595,595,595,595,595,595',
',,,,,595,595,595,595,595,595,595,,,595,,,,,,,595,,,595,595,595,595,595',
'595,595,595,595,595,595,595,,595,595,595,595,595,,,,,,,,,,,,,,,,,,,',
'595,,,595,,,595,595,,,595,,595,,595,,595,,,,,,,,595,,,,,595,595,595',
'595,,595,595,,,,595,595,,596,596,596,,596,595,,595,596,596,,,,596,,596',
'596,596,596,596,596,596,,,,,,596,596,596,596,596,596,596,,,596,,,,,',
',596,,,596,596,596,596,596,596,596,596,596,596,596,596,,596,596,596',
'596,596,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,596,,,596,,,,596,,596,,,',
',,,,596,,,,,596,596,596,596,,596,596,,,,596,596,,597,597,597,,597,596',
',596,597,597,,,,597,,597,597,597,597,597,597,597,,,,,,597,597,597,597',
'597,597,597,,,597,,,,,,,597,,,597,597,597,597,597,597,597,597,,597,597',
'597,,597,597,597,597,597,,,,,,,,,,,,,,,,,,,,597,,,597,,,597,597,,,597',
',,,,,597,,,,,,,,597,,,,,597,597,597,597,,597,597,,,,597,597,,598,598',
'598,,598,597,,597,598,598,,,,598,,598,598,598,598,598,598,598,,,,,,598',
'598,598,598,598,598,598,,,598,,,,,,,598,,,598,598,598,598,598,598,598',
'598,,598,598,598,,598,598,598,598,598,,,,,,,,,,,,,,,,,,,,598,,,598,',
',598,598,,,598,,,,,,598,,,,,,,,598,,,,,598,598,598,598,,598,598,,,,598',
'598,,603,603,603,,603,598,,598,603,603,,,,603,,603,603,603,603,603,603',
'603,,,,,,603,603,603,603,603,603,603,,,603,,,,,,,603,,,603,603,603,603',
'603,603,603,603,,603,603,603,,603,603,603,603,603,,,,,,,,,,,,,,,,,,',
',603,,,603,,,603,603,,,603,,,,,,603,,,,,,,,603,,,,,603,603,603,603,',
'603,603,,,,603,603,,602,602,602,,602,603,,603,602,602,,,,602,,602,602',
'602,602,602,602,602,,,,,,602,602,602,602,602,602,602,,,602,,,,,,,602',
',,602,602,602,602,602,602,602,602,,602,602,602,,602,602,602,602,602',
',,,,,,,,,,,,,,,,,,,602,,,602,,,602,602,,,602,,,,,,602,,,,,,,,602,,,',
',602,602,602,602,,602,602,,,,602,602,,562,562,562,,562,602,,602,562',
'562,,,,562,,562,562,562,562,562,562,562,,,,,,562,562,562,562,562,562',
'562,,,562,,,,,,,562,,,562,562,562,562,562,562,562,562,,562,562,562,',
'562,562,562,562,562,,,,,,,,,,,,,,,,,,,,562,,,562,,,562,562,,,562,,,',
',,562,,,,,,,,562,,,,,562,562,562,562,,562,562,,,,562,562,,559,559,559',
',559,562,,562,559,559,,,,559,,559,559,559,559,559,559,559,,,,,,559,559',
'559,559,559,559,559,,,559,,,,,,,559,,,559,559,559,559,559,559,559,559',
'559,559,559,559,,559,559,559,559,559,,,,,,,,,,,,,,,,,,,,559,,,559,,',
'559,559,,,559,,559,,559,,559,,,,,,,,559,,,,,559,559,559,559,,559,559',
',,,559,559,,20,20,20,,20,559,,559,20,20,,,,20,,20,20,20,20,20,20,20',
',,,,,20,20,20,20,20,20,20,,,20,,,,,,,20,,,20,20,20,20,20,20,20,20,,20',
'20,20,,20,20,20,20,20,,,,,,,,,,,,,,,,,,,,20,,,20,,,20,20,,,20,,,,,,20',
',,,,,,,20,,,,,20,20,20,20,,20,20,,,,20,20,,549,549,549,,549,20,,20,549',
'549,,,,549,,549,549,549,549,549,549,549,,,,,,549,549,549,549,549,549',
'549,,,549,,,,,,,549,,,549,549,549,549,549,549,549,549,549,549,549,549',
',549,549,549,549,549,,,,,,,,,,,,,,,,,,,,549,,,549,,,549,549,,,549,,549',
',549,,549,,,,,,,,549,,,,,549,549,549,549,,549,549,,,,549,549,,548,548',
'548,,548,549,,549,548,548,,,,548,,548,548,548,548,548,548,548,,,,,,548',
'548,548,548,548,548,548,,,548,,,,,,,548,,,548,548,548,548,548,548,548',
'548,,548,548,548,,548,548,548,548,548,,,,,,,,,,,,,,,,,,,,548,,,548,',
',548,548,,,548,,548,,,,548,,,,,,,,548,,,,,548,548,548,548,,548,548,',
',,548,548,,28,28,28,,28,548,,548,28,28,,,,28,,28,28,28,28,28,28,28,',
',,,,28,28,28,28,28,28,28,,,28,,,,,,,28,,,28,28,28,28,28,28,28,28,28',
'28,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,28,,,28,,,28,28,,,28,,28',
',28,,28,,,,,,,,28,,,,,28,28,28,28,,28,28,,,,28,28,,29,29,29,,29,28,',
'28,29,29,,,,29,,29,29,29,29,29,29,29,,,,,,29,29,29,29,29,29,29,,,29',
',,,,,,29,,,29,29,29,29,29,29,29,29,29,29,29,29,,29,29,29,29,29,,,,,',
',,,,,,,,,,,,,,29,,,29,,,29,29,,,29,,29,,29,,29,,,,,,,,29,,,,,29,29,29',
'29,,29,29,,,,29,29,,30,30,30,,30,29,,29,30,30,,,,30,,30,30,30,30,30',
'30,30,,,,,,30,30,30,30,30,30,30,,,30,,,,,,,30,,,30,30,30,30,30,30,30',
'30,30,30,30,30,,30,30,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,30,,',
'30,,30,,30,,30,,,,,,,,30,,,,,30,30,30,30,,30,30,,,,30,30,,33,33,33,',
'33,30,,30,33,33,,,,33,,33,33,33,33,33,33,33,,,,,,33,33,33,33,33,33,33',
',,33,,,,,,,33,,,33,33,33,33,33,33,33,33,,33,33,33,,33,33,,,33,,,,,,',
',,,,,,,,,,,,,33,,,33,,,33,33,,,33,,33,,,,,,,,,,,,,,,,,33,33,33,33,,33',
'33,,,,33,33,,34,34,34,,34,33,,33,34,34,,,,34,,34,34,34,34,34,34,34,',
',,,,34,34,34,34,34,34,34,,,34,,,,,,,34,,,34,34,34,34,34,34,34,34,,34',
'34,34,,34,34,,,34,456,456,456,456,456,456,456,456,456,456,456,,456,456',
',,456,456,,34,,,34,,,34,34,,,34,,,456,,456,,456,456,456,456,456,456',
'456,,456,,,,34,34,34,34,,34,34,,,,34,34,456,456,,34,,,34,,34,41,41,41',
',41,,,,41,41,,,,41,,41,41,41,41,41,41,41,,,,,,41,41,41,41,41,41,41,',
',41,,,,,,,41,,,41,41,41,41,41,41,41,41,,41,41,41,,41,41,41,41,41,,,',
',,,,,,,,,,,,,,,,41,,,41,,,41,41,,,41,,,,,,41,,,,,,,,41,,,,,41,41,41',
'41,,41,41,,,,41,41,,42,42,42,,42,41,,41,42,42,,,,42,,42,42,42,42,42',
'42,42,,,,,,42,42,42,42,42,42,42,,,42,,,,,,,42,,,42,42,42,42,42,42,42',
'42,,42,42,42,,42,42,42,42,42,,,,,,,,,,,,,,,,,,,,42,,,42,,,42,42,,,42',
',,,,,42,,,,,,,,42,,,,,42,42,42,42,,42,42,,,,42,42,,43,43,43,,43,42,',
'42,43,43,,,,43,,43,43,43,43,43,43,43,,,,,,43,43,43,43,43,43,43,,,43',
',,,,,,43,,,43,43,43,43,43,43,43,43,,43,43,43,,43,43,43,43,43,,,,,,,',
',,,,,,,,,,,,43,,,43,,,43,43,,,43,,,,,,43,,,,,,,,43,,,,,43,43,43,43,',
'43,43,,,,43,43,,633,633,633,,633,43,,43,633,633,,,,633,,633,633,633',
'633,633,633,633,,,,,,633,633,633,633,633,633,633,,,633,,,,,,,633,,,633',
'633,633,633,633,633,633,633,,633,633,633,,633,633,633,633,633,,,,,,',
',,,,,,,,,,,,,633,,,633,,,633,633,,,633,,,,,,633,,,,,,,,633,,,,,633,633',
'633,633,,633,633,,,,633,633,,56,56,56,,56,633,,633,56,56,,,,56,,56,56',
'56,56,56,56,56,,,,,,56,56,56,56,56,56,56,,,56,,,,,,,56,,,56,56,56,56',
'56,56,56,56,56,56,56,56,,56,56,56,56,56,,,,,,,,,,,,,,,,,,,,56,,,56,',
',56,56,,,56,,56,,,,56,,,,,,,,56,,,,,56,56,56,56,,56,56,,,,56,56,,57',
'57,57,,57,56,,56,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57',
'57,57,57,,,57,,,,,,,57,,,57,57,57,57,57,57,57,57,57,57,57,57,,57,57',
'57,57,57,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,57,,,57,,,,,,57,,,,,,,,57,',
',,,57,57,57,57,,57,57,,,,57,57,,638,638,638,,638,57,,57,638,638,,,,638',
',638,638,638,638,638,638,638,,,,,,638,638,638,638,638,638,638,,,638',
',,,,,,638,,,638,638,638,638,638,638,638,638,,638,638,638,,638,638,,',
'638,,,,,,,,,,,,,,,,,,,,638,,,638,,,638,638,,,638,,,,,,,,,,,,,,,,,,,638',
'638,638,638,,638,638,,,,638,638,,60,60,60,,60,638,,638,60,60,,,,60,',
'60,60,60,60,60,60,60,,,,,,60,60,60,60,60,60,60,,,60,,,,,,,60,,,60,60',
'60,60,60,60,60,60,,60,60,60,,60,60,60,60,60,,,,,,,,,,,,,,,,,,,,60,,',
'60,,,60,60,,,60,,,,,,60,,,,,,,,60,,,,,60,60,60,60,,60,60,,,,60,60,,61',
'61,61,,61,60,,60,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61',
'61,61,61,,,61,,,,,,,61,,,61,61,61,61,61,61,61,61,,61,61,61,,61,61,61',
'61,61,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,61,,,61,,,,,,61,,,,,,,,61,,,,',
'61,61,61,61,,61,61,,,,61,61,,64,64,64,,64,61,,61,64,64,,,,64,,64,64',
'64,64,64,64,64,,,,,,64,64,64,64,64,64,64,,,64,,,,,,,64,,,64,64,64,64',
'64,64,64,64,,64,64,64,,64,64,64,64,64,738,738,738,738,738,738,738,738',
'738,738,738,,738,738,,,738,738,,64,,,64,,,64,64,,,64,,,738,,738,64,738',
'738,738,738,738,738,738,64,738,,,,64,64,64,64,,64,64,,,,64,64,64,738',
',,,64,64,,64,65,65,65,,65,,,,65,65,,,,65,,65,65,65,65,65,65,65,,,,,',
'65,65,65,65,65,65,65,,,65,,,,,,,65,,,65,65,65,65,65,65,65,65,,65,65',
'65,,65,65,,,65,,,,,,,,,,,,,,,,,,,,65,,,65,,,65,65,,,65,,65,,,,,,,,,',
',,,,,,,65,65,65,65,,65,65,,,,65,65,,66,66,66,,66,65,,65,66,66,,,,66',
',66,66,66,66,66,66,66,,,,,,66,66,66,66,66,66,66,,,66,,,,,,,66,,,66,66',
'66,66,66,66,66,66,,66,66,66,,66,66,,,66,,,,,,,,,,,,,,,,,66,,,66,,,66',
',,66,66,,,66,,,,,,,,,,,,,,,,,,,66,66,66,66,,66,66,,,,66,66,,67,67,67',
',67,66,,66,67,67,,,,67,,67,67,67,67,67,67,67,,,,,,67,67,67,67,67,67',
'67,,,67,,,,,,,67,,,67,67,67,67,67,67,67,67,,67,67,67,,67,67,,,67,,,',
',,,,,,,,,,,,,,,,67,,,67,,,67,67,,,67,,,,,,,,,,,,,,,,,,,67,67,67,67,',
'67,67,,,,67,67,,513,513,513,,513,67,,67,513,513,,,,513,,513,513,513',
'513,513,513,513,,,,,,513,513,513,513,513,513,513,,,513,,,,,,,513,,,513',
'513,513,513,513,513,513,513,513,513,513,513,,513,513,513,513,513,,,',
',,,,,,,,,,,,,,,,513,,,513,,,513,513,,,513,,,,,,513,,,,,,,,513,,,,,513',
'513,513,513,,513,513,,,,513,513,,510,510,510,,510,513,,513,510,510,',
',,510,,510,510,510,510,510,510,510,,,,,,510,510,510,510,510,510,510',
',,510,,,,,,,510,,,510,510,510,510,510,510,510,510,510,510,510,510,,510',
'510,510,510,510,,,,,,,,,,,,,,,,,,,,510,,,510,,,510,510,,,510,,510,,',
',510,,,,,,,,510,,,,,510,510,510,510,,510,510,,,,510,510,,506,506,506',
',506,510,,510,506,506,,,,506,,506,506,506,506,506,506,506,,,,,,506,506',
'506,506,506,506,506,,,506,,,,,,,506,,,506,506,506,506,506,506,506,506',
',506,506,506,,506,506,506,506,506,,,,,,,,,,,,,,,,,,,,506,,,506,,,506',
'506,,,506,,506,,,,506,,,,,,,,506,,,,,506,506,506,506,,506,506,,,,506',
'506,,103,103,103,103,103,506,,506,103,103,,,,103,,103,103,103,103,103',
'103,103,,,,,,103,103,103,103,103,103,103,,,103,,,,,,103,103,103,103',
'103,103,103,103,103,103,103,103,,103,103,103,,103,103,103,103,103,503',
'503,503,503,503,503,503,503,503,503,503,,503,503,,,503,503,,103,,,103',
',,103,103,,,103,,103,503,,503,103,503,503,503,503,503,503,503,103,503',
',,,103,103,103,103,,103,103,,,,103,103,,503,,,,103,103,,103,108,108',
'108,,108,,,,108,108,,,,108,,108,108,108,108,108,108,108,,,,,,108,108',
'108,108,108,108,108,,,108,,,,,,,108,,,108,108,108,108,108,108,108,108',
',108,108,108,,108,108,108,108,108,,,,,,,,,,,,,,,,,,,,108,,,108,,,108',
'108,,,108,,,,,,108,,,,,,,,108,,,,,108,108,108,108,,108,108,,,,108,108',
',727,727,727,,727,108,,108,727,727,,,,727,,727,727,727,727,727,727,727',
',,,,,727,727,727,727,727,727,727,,,727,,,,,,,727,,,727,727,727,727,727',
'727,727,727,,727,727,727,,727,727,727,727,727,,,,,,,,,,,,,,,,,,,,727',
',,727,,,727,727,,,727,,,,,,727,,,,,,,,727,,,,,727,727,727,727,,727,727',
',,,727,727,,741,741,741,,741,727,,727,741,741,,,,741,,741,741,741,741',
'741,741,741,,,,,,741,741,741,741,741,741,741,,,741,,,,,,,741,,,741,741',
'741,741,741,741,741,741,,741,741,741,,741,741,741,741,741,,,,,,,,,,',
',,,,,,,,,741,,,741,,,741,741,,,741,,,,,,741,,,,,,,,741,,,,,741,741,741',
'741,,741,741,,,,741,741,,327,327,327,,327,741,,741,327,327,,,,327,,327',
'327,327,327,327,327,327,,,,,,327,327,327,327,327,327,327,,,327,,,,,',
',327,,,327,327,327,327,327,327,327,327,,327,327,327,,327,327,327,327',
'327,,,,,,,,,,,,,,,,,,,,327,,,327,,,327,327,,,327,,,,,,327,,,,,,,,327',
',,,,327,327,327,327,,327,327,,,,327,327,,328,328,328,,328,327,,327,328',
'328,,,,328,,328,328,328,328,328,328,328,,,,,,328,328,328,328,328,328',
'328,,,328,,,,,,,328,,,328,328,328,328,328,328,328,328,,328,328,328,',
'328,328,328,328,328,,,,,,,,,,,,,,,,,,,,328,,,328,,,328,328,,,328,,,',
',,328,,,,,,,,328,,,,,328,328,328,328,,328,328,,,,328,328,,746,746,746',
',746,328,,328,746,746,,,,746,,746,746,746,746,746,746,746,,,,,,746,746',
'746,746,746,746,746,,,746,,,,,,,746,,,746,746,746,746,746,746,746,746',
',746,746,746,,746,746,746,746,746,,,,,,,,,,,,,,,,,,,,746,,,746,,,746',
'746,,,746,,,,,,746,,,,,,,,746,,,,,746,746,746,746,,746,746,,,,746,746',
',347,347,347,,347,746,,746,347,347,,,,347,,347,347,347,347,347,347,347',
',,,,,347,347,347,347,347,347,347,,,347,,,,,,,347,,,347,347,347,347,347',
'347,347,347,,347,347,347,,347,347,347,347,347,,,,,,,,,,,,,,,,,,,,347',
',,347,,,347,347,,,347,,,,,,347,,,,,,,,347,,,,,347,347,347,347,,347,347',
',,,347,347,,313,313,313,,313,347,,347,313,313,,,,313,,313,313,313,313',
'313,313,313,,,,,,313,313,313,313,313,313,313,,,313,,,,,,,313,,,313,313',
'313,313,313,313,313,313,,313,313,313,,313,313,313,313,313,,,,,,,,,,',
',,,,,,,,,313,,,313,,,313,313,,,313,,,,,,313,,,,,,,,313,,,,,313,313,313',
'313,,313,313,,,,313,313,,794,794,794,,794,313,,313,794,794,,,,794,,794',
'794,794,794,794,794,794,,,,,,794,794,794,794,794,794,794,,,794,,,,,',
',794,,,794,794,794,794,794,794,794,794,,794,794,794,,794,794,794,794',
'794,,,,,,,,,,,,,,,,,,,,794,,,794,,,794,794,,,794,,,,,,794,,,,,,,,794',
',,,,794,794,794,794,,794,794,,,,794,794,,389,389,389,,389,794,,794,389',
'389,,,,389,,389,389,389,389,389,389,389,,,,,,389,389,389,389,389,389',
'389,,,389,,,,,,,389,,,389,389,389,389,389,389,389,389,,389,389,389,',
'389,389,389,389,389,,,,,,,,,,,,,,,,,,,,389,,,389,,,389,389,,,389,,,',
',,389,,,,,,,,389,,,,,389,389,389,389,,389,389,,,,389,389,,771,771,771',
',771,389,,389,771,771,,,,771,,771,771,771,771,771,771,771,,,,,,771,771',
'771,771,771,771,771,,,771,,,,,,,771,,,771,771,771,771,771,771,771,771',
',771,771,771,,771,771,,,771,,,,,,,,,,,,,,,,,,,,771,,,771,,,771,771,',
',771,,,,,,,,,,,,,,,,,,,771,771,771,771,,771,771,,,,771,771,,363,363',
'363,,363,771,,771,363,363,,,,363,,363,363,363,363,363,363,363,,,,,,363',
'363,363,363,363,363,363,,,363,,,,,,,363,,,363,363,363,363,363,363,363',
'363,,363,363,363,,363,363,363,363,363,,,,,,,,,,,,,,,,,,,,363,,,363,',
',363,363,,,363,,,,,,363,,,,,,,,363,,,,,363,363,363,363,,363,363,,,,363',
'363,,725,725,725,,725,363,,363,725,725,,,,725,,725,725,725,725,725,725',
'725,,,,,,725,725,725,725,725,725,725,,,725,,,,,,,725,,,725,725,725,725',
'725,725,725,725,,725,725,725,,725,725,725,725,725,740,740,740,740,740',
'740,740,740,740,740,740,,740,740,,,740,740,,725,,,725,,,725,725,,,725',
',,740,,740,725,740,740,740,740,740,740,740,725,740,,,,725,725,725,725',
',725,725,,,,725,725,,740,399,,,,725,,725,399,399,399,,,399,399,399,',
'399,,,,,,,,,399,399,399,,,,,,,,,399,399,,399,399,399,399,399,,,,,,,',
',,,,,,,,,,,,,,,399,399,399,399,399,399,399,399,399,399,399,399,399,399',
',,399,399,399,,,399,,399,399,,,399,399,,399,,399,,399,,399,399,399,399',
'399,399,399,26,399,399,399,,,,26,26,26,,,26,26,26,,26,399,399,,399,',
'399,,,26,26,26,,,,,,,,,26,26,,26,26,26,26,26,,,,,,,,,,,,,,,,,,,,,,,26',
'26,26,26,26,26,26,26,26,26,26,26,26,26,,,26,26,26,,,26,,26,26,,,26,26',
',26,,26,,26,,26,26,26,26,26,26,26,461,26,26,26,,,,461,461,461,,,461',
'461,461,,461,26,26,,26,,26,,,,461,,,,,,,,,,461,461,,461,461,461,461',
'461,,,,,,,,,,,,,,,,,,,,,,,27,,,,,,,27,27,27,,461,27,27,27,,27,,461,',
',,,461,461,,27,27,,,,,,,,,27,27,,27,27,27,27,27,,,461,,,,,,,,,,,,,,461',
',,,,461,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27',
'27,,,27,27,,27,,27,,27,,27,27,27,27,27,27,27,458,27,,27,,,,458,458,458',
',,458,458,458,,458,27,27,,27,,27,,,,458,,,,,,,,,,458,458,,458,458,458',
'458,458,,,,,,202,202,,,202,,,,,,,,202,202,,202,202,202,202,202,202,202',
',,202,202,,,458,202,202,202,202,,,458,,,202,,458,458,,,,,202,202,,202',
'202,202,202,202,202,202,202,202,202,202,,,202,458,,,,,,,,,,,,,,458,',
',,,458,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588',
'588,588,588,588,588,588,588,588,,,,588,588,588,588,588,588,588,588,588',
'588,,,,,,588,588,588,588,588,588,588,588,588,,,588,,,,,,,,588,588,,588',
'588,588,588,588,588,588,,,588,588,,,,588,588,588,588,,,,,,,,,,,,,,588',
'588,,588,588,588,588,588,588,588,588,588,588,588,,,588,588,,,,,,,,,',
',588,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8',
'8,8,8,8,,,,,,8,8,8,8,8,8,8,8,8,8,,8,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8',
',,,8,8,8,8,,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,,8',
'9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,,,,9,9,9,9,9,9,9,9,9',
'9,,,,,,9,9,9,9,9,9,9,9,9,,,9,,,,,,,,9,9,,9,9,9,9,9,9,9,,,9,9,,,,9,9',
'9,9,,,,,,,,,,,,,,9,9,,9,9,9,9,9,9,9,9,9,9,9,,,9,9,,,,,,,,,,,9,380,380',
'380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380',
'380,380,380,380,380,,,,380,380,380,380,380,380,380,380,380,380,,,,,',
'380,380,380,380,380,380,380,380,380,,,380,,,,,,,,380,380,,380,380,380',
'380,380,380,380,,,380,380,,,,380,380,380,380,,,,,,,,,,,,,,380,380,,380',
'380,380,380,380,380,380,380,380,380,380,,,380,380,,,,,,,,,,,380,68,68',
'68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,,',
',68,68,68,68,68,68,68,68,68,68,,,,,,68,68,68,68,68,68,68,68,68,68,68',
'68,,68,,,,,,68,68,,68,68,68,68,68,68,68,,,68,68,,,,68,68,68,68,,,,,',
'68,,,,,,,,68,68,,68,68,68,68,68,68,68,68,68,68,68,,,68,711,711,711,711',
'711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711',
'711,711,711,,,,711,711,711,711,711,711,711,711,711,711,,,,,,711,711',
'711,711,711,711,711,711,711,,,711,,,,,,,,711,711,,711,711,711,711,711',
'711,711,,,711,711,,,,711,711,711,711,,,,,,,,,,,,,,711,711,,711,711,711',
'711,711,711,711,711,711,711,711,502,502,711,,502,,,,,,,,502,502,,502',
'502,502,502,502,502,502,,,502,502,,,,502,502,502,502,,,,,,502,,,,,,',
',502,502,,502,502,502,502,502,502,502,502,502,502,502,890,890,502,,890',
',,,,,,,890,890,,890,890,890,890,890,890,890,,,890,890,,,,890,890,890',
'890,,,,,,890,,,,,,,,890,890,,890,890,890,890,890,890,890,890,890,890',
'890,424,424,890,,424,,,,,,,,424,424,,424,424,424,424,424,424,424,,,424',
'424,,,,424,424,424,424,,,,,,424,,,,,,,,424,424,,424,424,424,424,424',
'424,424,424,424,424,424,425,425,424,,425,,,,,,,,425,425,,425,425,425',
'425,425,425,425,,,425,425,,,,425,425,425,425,,,,,,425,,,,,,,,425,425',
',425,425,425,425,425,425,425,425,425,425,425,490,490,425,,490,,,,,,',
',490,490,,490,490,490,490,490,490,490,,,490,490,,,,490,490,490,490,',
',,,,490,,,,,,,,490,490,,490,490,490,490,490,490,490,490,490,490,490',
'918,918,490,,918,,,,,,,,918,918,,918,918,918,918,918,918,918,,,918,918',
',,,918,918,918,918,,,,,,918,,,,,,,,918,918,,918,918,918,918,918,918',
'918,918,918,918,918,558,558,918,,558,,,,,,,,558,558,,558,558,558,558',
'558,558,558,,,558,558,,,,558,558,558,558,,,,,,558,,,,,,,,558,558,,558',
'558,558,558,558,558,558,558,558,558,558,557,557,558,,557,,,,,,,,557',
'557,,557,557,557,557,557,557,557,,,557,557,,,,557,557,557,557,,,,,,557',
',,,,,,,557,557,,557,557,557,557,557,557,557,557,557,557,557,489,489',
'557,,489,,,,,,,,489,489,,489,489,489,489,489,489,489,,,489,489,,,,489',
'489,489,489,,,,,,489,,,,,,,,489,489,,489,489,489,489,489,489,489,489',
'489,489,489,551,551,489,,551,,,,,,,,551,551,,551,551,551,551,551,551',
'551,,,551,551,,,,551,551,551,551,,,,,,551,,,,,,,,551,551,,551,551,551',
'551,551,551,551,551,551,551,551,550,550,551,,550,,,,,,,,550,550,,550',
'550,550,550,550,550,550,,,550,550,,,,550,550,550,550,,,,,,550,,,,,,',
',550,550,,550,550,550,550,550,550,550,550,550,550,550,889,889,550,,889',
',,,,,,,889,889,,889,889,889,889,889,889,889,,,889,889,,,,889,889,889',
'889,,,,,,889,,,,,,,,889,889,,889,889,889,889,889,889,889,889,889,889',
'889,250,250,889,,250,,,,,,,,250,250,,250,250,250,250,250,250,250,,,250',
'250,,,,250,250,250,250,,,,,,,,,,,,,,250,250,,250,250,250,250,250,250',
'250,250,250,250,250,251,251,250,,251,,,,,,,,251,251,,251,251,251,251',
'251,251,251,,,251,251,,,,251,251,251,251,,,,,,,,,,,,,,251,251,,251,251',
'251,251,251,251,251,251,251,251,251,501,501,251,,501,,,,,,,,501,501',
',501,501,501,501,501,501,501,,,501,501,,,,501,501,501,501,,,,,,501,',
',,,,,,501,501,,501,501,501,501,501,501,501,501,501,501,501,201,201,501',
',201,,,,,,,,201,201,,201,201,201,201,201,201,201,,,201,201,,,,201,201',
'201,201,,,,,,201,,,,,,,,201,201,,201,201,201,201,201,201,201,201,201',
'201,201,,,201,264,264,264,264,264,264,264,264,264,264,264,,264,264,',
',264,264,,,,,,,,,,,,,,,264,,264,,264,264,264,264,264,264,264,,264,,731',
'731,731,731,731,731,731,731,731,731,731,,731,731,,264,731,731,,,,,,',
',,,,,,,,731,,731,,731,731,731,731,731,731,731,,731,,650,650,650,650',
'650,650,650,650,650,650,650,,650,650,,731,650,650,,,,,,,,,,,,,,,650',
',650,,650,650,650,650,650,650,650,,650,,726,726,726,726,726,726,726',
'726,726,726,726,,726,726,,650,726,726,,,,,,,,,,,,,,,726,,726,,726,726',
'726,726,726,726,726,,726,,21,21,21,21,21,21,21,21,21,21,21,,21,21,,726',
'21,21,,,,,,,,,,,,,,,21,,21,,21,21,21,21,21,21,21,,21,,411,411,411,411',
'411,411,411,411,411,411,411,,411,411,,21,411,411,,,,,,,,,,,,,,,411,',
'411,,411,411,411,411,411,411,411,,411,,733,733,733,733,733,733,733,733',
'733,733,733,,733,733,,411,733,733,,,,,,,,,,,,,,,733,,733,,733,733,733',
'733,733,733,733,,733,,815,815,815,815,815,815,815,815,815,815,815,,815',
'815,,733,815,815,,,,,,,,,,,,,,,815,,815,,815,815,815,815,815,815,815',
',815,,,,,,,,,,,,,,,,,815' ]
        racc_action_check = arr = ::Array.new(23398, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  1619,   997,   nil,   357,   nil,  7016,  1396,   984, 21456, 21580,
   971,   nil,   942,   987,   472,   302,   934,    -3,   nil,   -27,
 16032, 23132,  1037,   nil,   214,   178, 20918, 21093, 16407, 16532,
 16657,   nil,  1744, 16782, 16907,   nil,   914,   267,   237,   984,
   755, 17040, 17165, 17290,   903,   476,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,  1111,  1369,   nil, 17540, 17665,   147,   nil,
 17915, 18040,   nil,   nil, 18165, 18298, 18423, 18548, 21828,   nil,
   nil,   nil,   nil,   nil,   240,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   598,   nil,   nil,
   468,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  1024,   nil, 19048,   nil,   nil,   nil,   nil, 19181,  4891,
  5016,  5141,  5266,  1994,   nil,   -38,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   867,   nil,  2755,  5641,  5766,
  5891, 22900, 21200,  6266,  6391,  6516,  6641,  6766,  6891,   nil,
   nil,   516,   144,   119,   940,   118,   807,   851,   nil,  7766,
  2244,   842,  7891,  8016,  8141,  8266,  8391,  8516,  8641,  8766,
  8891,  9016,  9141,  9266,  9391,  9516,  9641,  9766,  9891, 10016,
 10141, 10266, 10391, 14407, 10641, 10766, 10891, 11016,   nil,   nil,
 22720, 22780,   833, 11274, 11399,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 11524,   nil, 22948,   nil,   796,   789,   nil, 12024,
   827, 12149,   nil, 12274,   nil,   nil,   277,  1369, 12399,   736,
  1244,   720,   736,   690, 13024,  1869,   570,   606,   630,   759,
   743,   nil,   719,   676,   175,   nil,   nil,   nil,   704,   286,
   612, 13907,   nil,   196,   666,   664,   761,   nil,   651,   nil,
 14282,   690,   684, 20056,   nil,   616,   686,   566,   451,   193,
   472,   nil,   nil,  1075,   786,    12,    34, 19556, 19681,   451,
   440,   311,    26,    61,   886,   377,    67,   400,   nil,   nil,
   409,   346,   389,   nil,   983,   nil,    30, 19931,   nil,   nil,
   nil,   375,   383,   559,   644,   -54,    37,   441,   387,   293,
   nil,   663,   nil, 20556,   nil,   378,   368,   401,   406,   -43,
   394,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   264,
 21704,   nil,   nil,   nil,   nil,   246,   nil,   204,   nil, 20306,
   154,   nil,  2244,   129,   nil,   110,   108,   -75,   122, 20809,
   nil,   nil,   nil,   343,   109,   137,   nil,   nil,  2883,  2372,
   nil, 23178,   nil,    75,   nil,   nil,   983,   nil,   nil,   nil,
   nil,   137,   nil,   107, 22120, 22180, 13282,   -54, 13157, 12899,
 12774,  3141,  2630,   703,   -47,    22,  1214,  1205,  1204,  4641,
  4516,  4391,  4016,  3766,  3641,  3516,  3391,  3266,  2119,  4266,
  4141,  3891,   302,  1038,  2505,  3016, 16907,   148, 21202,   nil,
   nil, 21027,   nil,   nil,  1142,   nil,   144,   124,  1132,   nil,
   nil, 11899,   nil, 11774,   nil, 11649,   nil,   nil,   nil, 11141,
  1494,  1130,  1123,   nil,   nil,  1106,  7641,  1107,  7516, 22480,
 22240,   -55,  1140,   nil,   nil,  7266,  1099,   nil,  6141,  6016,
  5516, 22840, 22000, 19048,  5391,  1208, 18923,   nil,   584,   nil,
 18798,   nil,   nil, 18673,   nil,   nil,   nil,    21,  1922,   nil,
  1077,  1070,  1068,   nil,   nil,   nil,   nil,   nil,   nil,  1035,
   nil,   598,   nil,   nil,   nil,   nil,  1118,   nil,   nil,  1117,
  3891,  1154,   nil,  2119,    63,    75,  1146,  1135, 16282, 16157,
 22600, 22540,   -18,   nil,   nil,   986,   nil, 22420, 22360, 15907,
   nil,   nil, 15782,   673,   -34,  1494,  2847,   nil,   nil,   nil,
    21,   nil,   nil,   nil,   841,   nil,   nil,   nil,  1017,   nil,
   nil,   163,   nil,   nil,  1004,   nil,   nil,   nil, 21332,   nil,
  1004, 13532, 14782,   377,  1037, 15032, 15157, 15282, 15407,  1020,
   nil,   nil, 15657, 15532,  1025,   nil, 14907, 13407,   nil,   nil,
   -76,   159,   234,     0,  1019,  2755,  1018,   nil,   530,   nil,
  2630,   nil,   nil,   nil,   nil,   191,   nil,  4016,   733,   nil,
  1042,   nil,  1104, 17415,   nil,   nil,  1244,   246, 17790,  1071,
   nil,  1076,   200,   143,  1121,   437,  1119,  1136,  1097,  7141,
 23040,  1164,  1165,   105,  1226,   nil,  2505,  1112,  1156,   nil,
   nil,  1125,   674,   nil,  3391,  3766,  1126,  1797,   nil,  1547,
   nil,   nil,  1392, 12649,   nil,   562,   nil,  1143,   336,   nil,
  1155,   nil,   nil,   746,   nil,    33,   nil,   nil,   nil,   nil,
    52,   nil,    33,    31,    39,    40,    41,    24, 14032,   203,
  1143,   nil,   142,  3641,   531,   nil,   nil,   286,   858,   786,
   247, 21940,   nil,   nil,   nil,   nil,   nil,   nil,  4641,   nil,
   nil,   nil,   nil,   nil,   263, 20681, 23086, 19306,   nil,   265,
   nil, 22994,   nil, 23224,   nil,   nil, 11141,   nil, 18165,   nil,
 20681, 19431, 10516, 14532, 14657,   -82, 19806,   329,   350,   356,
   nil,   379,   366,   665,   368,   nil,   504,  4516,   407,   524,
   nil,   nil,   428,   204,   nil,   nil,   nil,  4766,   nil,   nil,
    13, 20431,   nil,   477,   nil,   467,   582,   476,   475,   479,
   nil,   nil,   502,   504,   nil,   527,   nil,   532,   535,   549,
  1104,   nil,   678,   nil, 20181,   680,  3266,  4141,   nil, 14157,
  3516,    11,   223,   nil,   740,   nil,  3016,   nil,   752,   649,
   nil,   nil,   667,   660,   nil, 23270, 13782, 13657, 13024,   911,
   nil,  1297,   nil,   nil,   881,   nil,   743,   741,   nil,   nil,
   nil, 12524,   nil,   760,   nil,   nil,   nil,   983,  1029,  1072,
  1083,   846,  1176,   nil,   nil,   nil,   nil,   nil,  1422,   nil,
   nil,  1267,   nil,  1517,   nil,  1641,   nil,   nil,   nil,   344,
   591,   804,   nil,   -11,   nil,   930,   931,   nil,   211,   nil,
   nil,   932,   nil,   nil,  2336,   nil,   815,   816,   818,   819,
   nil,   822,   nil,   719,  1233,   916,   nil,   969,  7391, 22660,
 22060,  1235,   878,   890,   891,   893,   894,   873,   896,   778,
  4391,   nil,   nil,   nil,   nil,   nil,  4266,   nil,  3141,  2047,
   nil,   nil,   658,   nil,  1767,   nil,   nil,   nil, 22300,   nil,
   nil,   946,    40,    32,     6,  1253,   nil,   756,   nil,   nil,
   nil,   903,   967,   518,  1092,  1096,   980,   985,  1095,   137,
   793,   808,    -7,   775,   823,   nil,   nil,   nil,   nil,  1670,
   nil,   nil,   nil,   nil,   965,   nil ]

racc_action_default = [
    -3,  -547,    -1,  -533,    -4,  -547,    -7,  -547,  -547,  -547,
  -547,   -27,  -547,  -547,  -547,  -274,  -547,   -39,   -42,  -535,
  -547,   -47,   -49,   -50,   -51,  -255,  -255,  -255,  -285,  -320,
  -321,   -67,   -11,   -71,   -79,   -81,  -547,  -462,  -463,  -547,
  -547,  -547,  -547,  -547,  -535,  -236,  -267,  -268,  -269,  -270,
  -271,  -272,  -273,  -523,   -11,  -277,  -546,  -515,  -293,  -375,
  -547,  -547,  -298,  -301,  -533,  -547,  -547,  -547,  -547,  -322,
  -323,  -411,  -412,  -413,  -414,  -415,  -430,  -418,  -419,  -432,
  -434,  -423,  -428,  -444,  -432,  -446,  -447,  -521,  -451,  -452,
  -522,  -454,  -455,  -456,  -457,  -458,  -459,  -460,  -461,  -466,
  -467,  -547,    -2,  -534,  -542,  -543,  -544,    -6,  -547,  -547,
  -547,  -547,  -547,    -3,   -15,  -547,  -110,  -111,  -112,  -113,
  -114,  -115,  -116,  -117,  -118,  -122,  -123,  -124,  -125,  -126,
  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,
  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,
  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,
  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,
  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,
  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,
  -187,  -188,  -189,  -190,  -191,   -20,  -119,   -11,  -547,  -547,
  -245,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -535,  -536,
   -46,  -547,  -462,  -463,  -547,  -274,  -547,  -547,  -228,  -547,
   -11,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -381,  -383,
  -547,  -547,   -56,  -245,  -547,  -292,  -386,  -395,  -397,   -62,
  -392,   -63,  -535,   -64,  -237,  -250,  -259,  -259,  -254,  -547,
  -260,  -547,  -517,  -547,   -65,   -66,  -533,   -12,  -547,   -69,
   -11,  -535,  -547,   -72,   -75,   -11,   -87,   -88,  -547,  -547,
   -95,  -285,  -288,  -535,  -547,  -320,  -321,  -324,  -393,  -547,
   -77,  -547,   -83,  -282,  -448,  -449,  -547,  -213,  -214,  -229,
  -547,  -403,  -547,  -547,  -238,  -539,  -539,  -547,  -547,  -539,
  -547,  -294,  -295,  -487,   -48,  -547,  -547,  -547,  -547,  -533,
  -547,  -534,  -462,  -463,  -547,  -547,  -274,  -547,  -334,  -335,
  -105,  -106,  -547,  -108,  -547,  -274,  -547,  -547,  -462,  -463,
  -313,  -110,  -111,  -151,  -152,  -153,  -169,  -174,  -181,  -184,
  -315,  -547,  -513,  -547,  -416,  -547,  -547,  -547,  -547,  -547,
  -547,   956,    -5,  -545,   -21,   -22,   -23,   -24,   -25,  -547,
  -547,   -17,   -18,   -19,  -120,  -547,   -28,   -37,   -38,  -547,
  -547,   -29,  -194,  -535,  -246,  -259,  -259,  -524,  -525,  -255,
  -390,  -526,  -527,  -525,  -524,  -255,  -389,  -391,  -526,  -527,
   -35,  -202,   -36,  -547,   -40,   -41,  -192,  -260,   -43,   -44,
   -45,  -535,  -291,  -547,  -547,  -547,  -245,  -282,  -547,  -547,
  -547,  -203,  -204,  -205,  -206,  -207,  -208,  -209,  -210,  -215,
  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,  -224,  -225,
  -226,  -227,  -230,  -231,  -232,  -233,  -535,  -364,  -255,  -524,
  -525,  -255,   -54,   -57,  -535,  -256,  -364,  -364,  -535,  -287,
  -251,  -547,  -252,  -547,  -257,  -547,  -261,  -520,   -10,  -534,
   -14,  -535,   -68,  -280,   -84,   -73,  -547,  -535,  -245,  -547,
  -547,   -94,  -547,  -448,  -449,  -547,   -80,   -85,  -547,  -547,
  -547,  -547,  -547,  -234,  -547,  -546,  -546,  -276,  -278,  -239,
  -541,  -540,  -241,  -541,  -283,  -284,  -516,  -547,  -487,  -378,
  -512,  -512,  -512,  -486,  -488,  -489,  -490,  -491,  -492,  -493,
  -494,  -547,  -496,  -502,  -504,  -505,  -507,  -508,  -509,  -547,
   -11,  -325,  -326,   -11,  -547,  -547,  -547,  -547,  -547,  -245,
  -547,  -547,  -282,  -306,  -105,  -106,  -107,  -547,  -547,  -245,
  -309,  -468,  -547,  -547,  -547,   -11,  -487,  -317,  -531,  -532,
  -535,  -417,  -431,  -436,  -547,  -438,  -420,  -433,  -547,  -435,
  -422,  -547,  -425,  -427,  -547,  -445,    -8,   -16,  -547,   -26,
  -266,  -547,  -547,  -394,  -547,  -247,  -249,  -547,  -547,   -58,
  -244,  -387,  -547,  -547,   -60,  -388,  -547,  -547,  -290,  -537,
  -524,  -525,  -524,  -525,  -535,  -192,  -547,  -365,  -369,  -367,
   -11,   -52,  -384,   -53,  -385,  -364,  -242,   -11,   -11,  -286,
  -259,  -258,  -262,  -547,  -518,  -519,   -13,   -70,  -547,   -76,
   -82,  -535,  -524,  -525,  -243,   -91,   -93,  -547,   -78,  -547,
  -201,  -211,  -212,  -535,  -546,  -332,   -11,  -404,  -546,  -405,
  -406,  -535,  -539,  -376,   -11,   -11,  -369,  -547,  -479,  -547,
  -482,  -484,  -547,  -547,  -336,  -547,  -338,  -340,  -347,  -493,
  -535,  -506,  -510,  -546,  -327,  -546,  -299,  -328,  -329,  -302,
  -547,  -305,  -547,  -535,  -524,  -525,  -528,  -281,  -547,  -105,
  -106,  -109,  -535,   -11,  -547,  -470,  -311,  -547,   -11,  -487,
  -547,  -547,  -514,  -437,  -440,  -441,  -442,  -443,   -11,  -421,
  -424,  -426,  -429,  -121,  -264,  -547,  -195,  -547,  -538,  -259,
   -31,  -197,   -32,  -198,   -59,   -33,  -200,   -34,  -199,   -61,
  -193,  -547,  -547,  -547,  -547,  -394,  -547,  -512,  -512,  -512,
  -363,  -547,  -369,  -547,  -493,  -500,  -547,   -11,  -547,  -547,
  -253,  -263,   -74,   -89,   -86,  -289,    -9,   -11,  -410,  -333,
  -547,  -547,  -408,  -547,  -240,  -547,  -547,  -535,  -512,  -512,
  -497,  -511,  -512,  -512,  -503,  -512,  -498,  -535,  -547,  -345,
  -547,  -495,  -547,  -330,  -547,  -547,   -11,   -11,  -304,  -547,
   -11,  -394,  -547,  -394,  -547,  -469,   -11,  -314,  -547,  -535,
  -472,  -318,  -547,  -265,   -30,  -196,  -248,  -547,  -235,  -354,
  -356,  -547,  -359,  -361,  -547,  -366,  -547,  -370,  -371,  -373,
  -374,  -547,  -382,  -547,  -396,  -398,  -409,   -11,   -96,   -97,
  -547,  -547,  -104,  -407,  -279,  -379,  -380,  -377,  -547,  -475,
  -477,  -547,  -480,  -547,  -483,  -547,  -485,  -337,  -339,  -343,
  -547,  -348,  -296,  -547,  -297,  -547,  -547,  -262,  -546,  -307,
  -310,  -547,  -316,  -471,  -487,  -439,  -512,  -512,  -512,  -512,
  -501,  -512,  -368,  -547,  -499,  -547,   -55,  -403,  -245,  -547,
  -547,  -103,  -512,  -512,  -512,  -512,  -341,  -547,  -346,  -547,
   -11,  -300,  -303,  -399,  -400,  -401,   -11,  -312,   -11,  -547,
  -351,  -353,  -547,  -357,  -547,  -360,  -362,  -372,  -547,  -282,
  -402,  -535,  -524,  -525,  -528,  -102,  -473,  -547,  -476,  -478,
  -481,  -547,  -344,  -546,  -547,  -547,  -512,  -512,  -512,  -512,
  -281,  -528,  -394,  -512,  -342,  -331,  -308,  -319,  -349,  -547,
  -352,  -355,  -358,  -474,  -512,  -350 ]

clist = [
'119,119,256,260,312,360,505,14,265,265,265,415,14,314,297,297,122,122',
'792,547,708,283,124,124,13,207,472,211,519,13,540,543,114,196,106,211',
'211,211,102,14,288,288,654,634,6,300,297,297,297,6,310,393,281,593,496',
'674,13,103,556,784,119,14,267,267,267,509,512,211,211,516,830,211,334',
'344,344,325,326,463,13,329,252,259,261,634,324,324,858,388,324,748,316',
'319,631,412,631,106,279,680,523,330,107,880,399,405,464,686,689,828',
'346,350,14,572,620,579,582,211,211,211,211,14,14,627,628,374,375,376',
'377,13,749,780,2,874,324,324,324,324,13,13,861,339,266,266,266,366,751',
'752,622,6,370,624,195,458,461,1,766,472,378,6,827,517,663,323,249,457',
'466,467,634,903,315,658,770,364,365,367,368,317,369,779,400,782,265',
'263,274,275,713,718,778,581,588,880,362,318,777,321,409,322,625,858',
'372,674,830,337,789,560,14,211,211,211,898,380,211,211,211,211,211,211',
'631,631,361,567,313,13,795,666,661,327,796,14,328,418,419,420,421,265',
'265,690,797,917,784,639,698,787,265,379,13,932,906,703,648,806,565,566',
'711,,,,,,,,211,211,,210,,297,,,945,211,,256,,701,745,260,,614,826,944',
'757,780,297,,,14,,14,267,497,876,288,14,523,,485,267,,,492,481,763,13',
',13,487,,106,288,13,390,478,674,38,674,,390,780,38,,211,,480,,,399,405',
'721,908,877,479,878,,,211,211,,508,,641,,523,544,545,279,38,287,287',
',279,,324,324,801,211,,,,892,,106,,803,869,546,,266,38,,,211,564,119',
',266,,600,561,333,349,349,349,605,896,674,,634,570,122,760,644,762,',
'750,124,659,,800,,594,693,400,644,,587,904,265,465,,,702,,774,415,809',
'468,38,409,,936,,674,,674,734,38,38,422,,739,,,,211,,600,,631,600,,',
'386,391,,,,410,414,,,,644,,,599,674,,,,644,604,,616,660,,,400,297,265',
',,,,,497,837,297,,400,,,469,409,497,523,,14,37,760,,,,37,288,409,211',
',,,,482,,288,13,,630,,,,,38,211,,621,,707,623,,,37,286,286,,636,,,,400',
'653,265,,,282,38,,400,,,,265,,37,,409,662,,,14,,409,14,,332,348,348',
'348,211,905,,,,,,,13,,211,13,900,211,,,14,,,687,687,704,,,119,942,920',
',,,324,,,13,37,38,,38,705,706,122,287,38,37,37,,124,,211,211,,,,211',
'211,768,723,211,287,772,,,390,297,594,600,,,605,,497,14,,729,297,,,',
'14,14,,764,,,608,,,,13,288,,594,811,523,,13,13,804,,,288,,808,,692,',
',14,,,,773,,,,14,14,,,,,,,,13,,,626,37,,,629,13,13,,,,,,,,385,,594,637',
',,119,,211,640,37,594,,14,,,802,,14,,,,,282,,324,,,14,,13,,,,,13,,211',
'805,,,,921,,810,13,320,,,,,,,,,297,,,,871,,,,,15,,,14,37,15,37,,,,286',
'37,,14,,,,840,,282,13,,,,282,,,286,712,644,13,38,15,290,290,,,,287,',
'211,,14,14,,,14,287,863,,,297,14,,15,,,324,,13,13,,,13,,336,345,345',
',13,,,687,,,,,884,,730,732,,,14,735,737,,,414,,,,38,,,38,,935,,,13,',
',15,,400,,265,,,,765,15,15,,,,38,,,,409,,387,,,,16,,417,,,16,,211,,',
',791,,,,,,,,14,,,409,,,14,,14,,,,,16,,,,13,,,594,,,13,,13,38,,,,,,747',
'38,38,16,,,,,,,,,287,,338,,474,,476,15,477,,,287,,,,37,,,38,814,,,286',
',,,38,38,,,15,286,,,,,,,,783,16,,785,,,847,,,,16,16,,,,,857,,,,,,,,',
',38,,,,,38,,,,,,37,873,,37,38,,,,,,,,15,683,15,,685,,290,15,,,,,,37',
',,,,,,,,,290,,,,,,,,38,,,,,590,,,,,38,,,,839,16,,,,,,,413,,,,,,,,,,',
',,,,37,16,38,38,,,38,37,37,,,,38,756,,,,,286,,758,759,,,,,,,,286,,,',
',,879,37,349,881,,,,,38,37,37,,,,769,632,,320,,635,,,775,776,16,,16',
'893,,,894,16,895,,,,,,,,,,,,,,,,37,,657,,,37,632,,,320,,,,,,37,,,,,',
',,38,,,,,812,38,,38,,,,,,,,,937,,,938,417,939,,,,,15,,,,37,,,290,943',
',,,,,37,,290,833,838,,,,,,,,,836,,,954,,,,,,,724,,,,632,320,37,37,,',
'37,,,,,,37,,,865,866,,,868,15,,,15,,,,,,,,,,,,,,348,761,,,,,37,,15,',
',,,,,,,717,,887,,,,,668,670,671,,,,,,,,,,,,,,,786,,,,,,,,16,,,,,,,,',
',,,,,15,,,,,,37,15,15,,,,37,,37,,,,290,933,,,,,,934,,,,290,813,,,,,',
'15,,,,,,,,15,15,25,16,,,16,25,,,,,,,,,,,,,,,25,,,,,,16,,25,25,25,,25',
',,,,15,,,,,15,,,,,,,,,,15,,25,,,,867,,25,25,,,25,,,413,,,,,,,,320,,',
',,,16,,,,,,,16,16,,15,,,,,,,,,,15,,25,,842,,,25,25,25,25,25,25,,,,16',
',,,,,,,16,16,,,,15,15,,,15,,,,,,15,,820,822,823,,,,,,,,,,,,,,,,,,,,16',
'345,,,,16,,15,,849,850,,,852,854,16,856,,,,,,,,,,,,,,,,,25,25,25,25',
',,25,25,25,25,25,25,,,,,,,,,,16,,25,,,,,,,,16,,,,843,,15,,,,,,15,,15',
',,,,,,,,,,25,25,,,16,16,,,16,25,,,,,16,,,,910,911,913,915,,916,,25,',
'25,,,,,25,,926,928,929,930,,,,,,,,16,,,,,,,,,,,,,,,25,,,,,,,,,,,,,,25',
'25,,,948,950,951,952,,,,953,,,,,,,,,25,,955,,,,,,,,,,,,16,,25,,,,16',
',16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,25,,,,,,,',
',,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,25,,,,,,25,,,,,,',
',,,25,,,25,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,25,,,,25,25,,,25,',
'218,,,,,,,,264,264,264,,25,,,,,,,25,25,307,308,309,,,,,,,,,,,,,264,264',
',,,,,,,,,,25,,,,,,,,25,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,25',
',,,,25,,,,,,,,,,25,,,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,',
',,,25,,,,,,,,,,,,,,,,,,,264,392,264,,,411,416,,25,,25,25,,,25,,,,,,25',
'218,,,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446',
'447,448,449,450,451,452,453,454,455,456,,25,,,,264,264,,,,,,,,264,,',
',,,,264,,264,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,,503,,25,,,,',
',25,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,411,615,392,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,264,,264,,,,,,,,,,,,,264,',
',,,,,,,,650,651,652,,,,,,264,,,,264,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,264,264,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,726',
',,264,264,731,733,,,,736,738,,,615,740,,,,,,,,,,,,,,,,,,,,,,,,,,264',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,264,,815,,,,,,,,,,,,,,731,733,738,736,,818',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,',
',,,,264,815,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,264' ]
        racc_goto_table = arr = ::Array.new(2904, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'54,54,66,66,8,53,10,21,32,32,32,17,21,62,60,60,57,57,83,85,89,46,58',
'58,20,30,68,21,124,20,82,82,14,14,88,21,21,21,4,21,21,21,11,151,7,47',
'60,60,60,7,30,22,43,23,48,107,20,6,51,147,54,21,65,65,65,64,64,21,21',
'64,120,21,21,21,21,16,16,37,20,16,36,36,36,151,28,28,106,26,28,112,65',
'65,69,26,69,88,42,108,115,4,5,148,35,35,22,84,84,119,52,52,21,141,38',
'141,141,21,21,21,21,21,21,38,38,16,16,16,16,20,113,146,2,105,28,28,28',
'28,20,20,109,18,63,63,63,137,117,110,67,7,137,67,15,35,35,1,12,68,7',
'7,118,121,122,123,125,126,128,129,151,130,63,131,132,135,136,138,139',
'61,142,113,66,113,32,41,41,41,143,144,145,140,59,148,77,78,117,79,54',
'81,39,106,5,107,120,86,107,87,21,21,21,21,109,29,21,21,21,21,21,21,69',
'69,90,91,92,20,11,124,93,94,95,21,96,28,28,28,28,32,32,85,97,119,147',
'48,98,108,32,2,20,109,99,100,48,101,102,103,104,,,,,,,,21,21,,19,,60',
',,83,21,,66,,51,23,66,,22,117,109,38,146,60,,,21,,21,65,46,112,21,21',
'115,,47,65,,,30,43,23,20,,20,43,,88,21,20,63,4,107,50,107,,63,146,50',
',21,,7,,,35,35,141,89,113,6,113,,,21,21,,28,,22,,115,16,16,42,50,50',
'50,,42,,28,28,23,21,,,,113,,88,,23,84,4,,63,50,,,21,28,54,,63,,66,88',
'50,50,50,50,66,107,107,,151,28,57,68,35,48,,115,58,26,,82,,30,22,66',
'35,,14,11,32,41,,,22,,64,17,124,41,50,54,,113,,107,,107,37,50,50,44',
',37,,,,21,,66,,69,66,,,19,19,,,,19,19,,,,35,,,36,107,,,,35,36,,30,62',
',,66,60,32,,,,,,46,82,60,,66,,,44,54,46,115,,21,49,68,,,,49,21,54,21',
',,,,44,,21,20,,65,,,,,50,21,,36,,8,36,,,49,49,49,,7,,,,66,28,32,,,9',
'50,,66,,,,32,,49,,54,65,,,21,,54,21,,49,49,49,49,21,85,,,,,,,20,,21',
'20,82,21,,,21,,,88,88,16,,,54,23,10,,,,28,,,20,49,50,,50,88,88,57,50',
'50,49,49,,58,,21,21,,,,21,21,62,14,21,50,62,,,63,60,30,66,,,66,,46,21',
',65,60,,,,21,21,,46,,,44,,,,20,21,,30,53,115,,20,20,8,,,21,,8,,63,,',
'21,,,,30,,,,21,21,,,,,,,,20,,,44,49,,,44,20,20,,,,,,,,9,,30,44,,,54',
',21,44,49,30,,21,,,16,,21,,,,,9,,28,,,21,,20,,,,,20,,21,88,,,,22,,88',
'20,27,,,,,,,,,60,,,,8,,,,,24,,,21,49,24,49,,,,49,49,,21,,,,21,,9,20',
',,,9,,,49,44,35,20,50,24,24,24,,,,50,,21,,21,21,,,21,50,16,,,60,21,',
'24,,,28,,20,20,,,20,,24,24,24,,20,,,88,,,,,21,,19,19,,,21,19,19,,,19',
',,,50,,,50,,8,,,20,,,24,,66,,32,,,,44,24,24,,,,50,,,,54,,27,,,,25,,27',
',,25,,21,,,,44,,,,,,,,21,,,54,,,21,,21,,,,,25,,,,20,,,30,,,20,,20,50',
',,,,,111,50,50,25,,,,,,,,,50,,25,,27,,27,24,27,,,50,,,,49,,,50,19,,',
'49,,,,50,50,,,24,49,,,,,,,,111,25,,111,,,44,,,,25,25,,,,,44,,,,,,,,',
',50,,,,,50,,,,,,49,44,,49,50,,,,,,,,24,9,24,,9,,24,24,,,,,,49,,,,,,',
',,,24,,,,,,,,50,,,,,27,,,,,50,,,,50,25,,,,,,,25,,,,,,,,,,,,,,,49,25',
'50,50,,,50,49,49,,,,50,9,,,,,49,,9,9,,,,,,,,49,,,,,,111,49,50,111,,',
',,50,49,49,,,,9,27,,27,,27,,,9,9,25,,25,111,,,111,25,111,,,,,,,,,,,',
',,,,49,,27,,,49,27,,,27,,,,,,49,,,,,,,,50,,,,,9,50,,50,,,,,,,,,111,',
',111,27,111,,,,,24,,,,49,,,24,111,,,,,,49,,24,9,49,,,,,,,,,9,,,111,',
',,,,,27,,,,27,27,49,49,,,49,,,,,,49,,,9,9,,,9,24,,,24,,,,,,,,,,,,,,49',
'27,,,,,49,,24,,,,,,,,,24,,9,,,,,114,114,114,,,,,,,,,,,,,,,27,,,,,,,',
'25,,,,,,,,,,,,,,24,,,,,,49,24,24,,,,49,,49,,,,24,9,,,,,,9,,,,24,27,',
',,,,24,,,,,,,,24,24,40,25,,,25,40,,,,,,,,,,,,,,,40,,,,,,25,,40,40,40',
',40,,,,,24,,,,,24,,,,,,,,,,24,,40,,,,27,,40,40,,,40,,,25,,,,,,,,27,',
',,,,25,,,,,,,25,25,,24,,,,,,,,,,24,,40,,24,,,40,40,40,40,40,40,,,,25',
',,,,,,,25,25,,,,24,24,,,24,,,,,,24,,114,114,114,,,,,,,,,,,,,,,,,,,,25',
'24,,,,25,,24,,114,114,,,114,114,25,114,,,,,,,,,,,,,,,,,40,40,40,40,',
',40,40,40,40,40,40,,,,,,,,,,25,,40,,,,,,,,25,,,,25,,24,,,,,,24,,24,',
',,,,,,,,,40,40,,,25,25,,,25,40,,,,,25,,,,114,114,114,114,,114,,40,,40',
',,,,40,,114,114,114,114,,,,,,,,25,,,,,,,,,,,,,,,40,,,,,,,,,,,,,,40,40',
',,114,114,114,114,,,,114,,,,,,,,,40,,114,,,,,,,,,,,,25,,40,,,,25,,25',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,,,,,,,40,,,,,,,,,,,',
',,,,40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,40,,,,,,40,,,,,,,,,,40',
',,40,,,40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,40,,,,40,40,,,40,,31,,,',
',,,,31,31,31,,40,,,,,,,40,40,31,31,31,,,,,,,,,,,,,31,31,,,,,,,,,,,40',
',,,,,,,40,40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,,,40,,,,,40,,,,,,',
',,,40,,,,,,,,,40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,,,,,,,,40,,,,,,,',
',,,,,,,,,,,31,31,31,,,31,31,,40,,40,40,,,40,,,,,,40,31,,,31,31,31,31',
'31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,,40',
',,,31,31,,,,,,,,31,,,,,,,31,,31,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,',
',,,,,,31,,40,,,,,,40,,40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,',
'31,31,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,31,,31,,,,,,,,',
',,,,31,,,,,,,,,,31,31,31,,,,,,31,,,,31,,,31,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,31,31,,,,,,,,,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,31,,,31',
'31,31,31,,,,31,31,,,31,31,,,,,,,,,,,,,,,,,,,,,,,,,,31,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,31,,31,,,,,,,,,,,,,,31,31,31,31,,31,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,,,,,,,,,,,,,,,,31,31,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31' ]
        racc_goto_check = arr = ::Array.new(2904, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   153,   130,   nil,    35,    95,    54,    44,   -50,   500,
  -305,  -463,  -500,   nil,    24,   141,    15,  -193,    74,   243,
    24,     7,  -149,  -340,   761,   888,  -111,   686,    24,    95,
     6,  2015,   -20,   nil,   nil,   -99,    55,  -175,  -345,  -266,
  1427,   153,    64,    20,   219,   nil,   -12,    11,  -247,   487,
   313,  -284,    42,   -63,    -8,   nil,   nil,     8,    14,  -196,
   -19,   119,   -43,   112,  -250,    34,   -23,  -312,  -241,  -379,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   122,   134,   135,
   nil,   136,  -295,  -665,  -439,  -311,   136,  -143,    31,  -546,
   150,  -142,   165,  -284,   163,  -460,   165,  -453,  -313,  -623,
  -313,  -457,  -100,  -109,  -315,  -680,  -702,  -476,  -434,  -652,
  -473,   321,  -529,  -490,   822,  -225,   nil,  -474,  -595,  -646,
  -683,  -164,  -357,   102,  -295,   140,   -85,   nil,   -93,   -93,
  -701,  -337,  -488,   nil,   nil,    97,    96,    64,    93,    93,
  -181,  -254,    94,  -390,  -390,  -481,  -538,  -610,  -720,   nil,
   nil,  -430 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   331,   277,   nil,   311,
   nil,   793,   nil,   276,   nil,   nil,   nil,    11,    12,    18,
   217,   306,   nil,   nil,   215,   216,   nil,   270,    17,   nil,
   423,    21,    22,    23,    24,   647,   nil,   nil,   nil,   nil,
   294,   394,    31,   nil,   nil,    33,    36,    35,   nil,   212,
   213,   343,   nil,   121,   402,   120,   123,    72,    73,   nil,
    45,   nil,   655,   395,   nil,   396,   407,   601,   470,   268,
   254,    46,    47,    48,    49,    50,    51,    52,   nil,   255,
    58,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   541,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   676,   530,   nil,   677,
   nil,   520,   nil,   522,   nil,   781,   617,   nil,   nil,   nil,
   528,   nil,   nil,   nil,   710,   nil,   nil,   406,   nil,   nil,
   nil,   nil,   nil,    71,    74,    75,   nil,   nil,   nil,   nil,
   nil,   577,   nil,   nil,   nil,   521,   532,   533,   755,   536,
   539,   272 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_none,
  2, 139, :_reduce_2,
  0, 140, :_reduce_3,
  1, 140, :_reduce_4,
  3, 140, :_reduce_5,
  2, 140, :_reduce_6,
  1, 142, :_reduce_none,
  4, 142, :_reduce_8,
  4, 145, :_reduce_9,
  2, 146, :_reduce_10,
  0, 150, :_reduce_11,
  1, 150, :_reduce_12,
  3, 150, :_reduce_13,
  2, 150, :_reduce_14,
  0, 166, :_reduce_15,
  4, 144, :_reduce_16,
  3, 144, :_reduce_17,
  3, 144, :_reduce_18,
  3, 144, :_reduce_19,
  2, 144, :_reduce_20,
  3, 144, :_reduce_21,
  3, 144, :_reduce_22,
  3, 144, :_reduce_23,
  3, 144, :_reduce_24,
  3, 144, :_reduce_25,
  4, 144, :_reduce_26,
  1, 144, :_reduce_none,
  3, 144, :_reduce_28,
  3, 144, :_reduce_29,
  6, 144, :_reduce_30,
  5, 144, :_reduce_31,
  5, 144, :_reduce_32,
  5, 144, :_reduce_33,
  5, 144, :_reduce_34,
  3, 144, :_reduce_35,
  3, 144, :_reduce_36,
  3, 144, :_reduce_37,
  3, 144, :_reduce_38,
  1, 144, :_reduce_none,
  3, 154, :_reduce_40,
  3, 154, :_reduce_41,
  1, 165, :_reduce_none,
  3, 165, :_reduce_43,
  3, 165, :_reduce_44,
  3, 165, :_reduce_45,
  2, 165, :_reduce_46,
  1, 165, :_reduce_none,
  1, 153, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  1, 170, :_reduce_none,
  4, 170, :_reduce_52,
  4, 170, :_reduce_53,
  0, 176, :_reduce_54,
  5, 174, :_reduce_55,
  2, 169, :_reduce_56,
  3, 169, :_reduce_57,
  4, 169, :_reduce_58,
  5, 169, :_reduce_59,
  4, 169, :_reduce_60,
  5, 169, :_reduce_61,
  2, 169, :_reduce_62,
  2, 169, :_reduce_63,
  2, 169, :_reduce_64,
  2, 169, :_reduce_65,
  2, 169, :_reduce_66,
  1, 155, :_reduce_67,
  3, 155, :_reduce_68,
  1, 180, :_reduce_69,
  3, 180, :_reduce_70,
  1, 179, :_reduce_none,
  2, 179, :_reduce_72,
  3, 179, :_reduce_73,
  5, 179, :_reduce_74,
  2, 179, :_reduce_75,
  4, 179, :_reduce_76,
  2, 179, :_reduce_77,
  4, 179, :_reduce_78,
  1, 179, :_reduce_79,
  3, 179, :_reduce_80,
  1, 183, :_reduce_none,
  3, 183, :_reduce_82,
  2, 182, :_reduce_83,
  3, 182, :_reduce_84,
  1, 185, :_reduce_85,
  3, 185, :_reduce_86,
  1, 184, :_reduce_87,
  1, 184, :_reduce_88,
  4, 184, :_reduce_89,
  3, 184, :_reduce_90,
  3, 184, :_reduce_91,
  3, 184, :_reduce_92,
  3, 184, :_reduce_93,
  2, 184, :_reduce_94,
  1, 184, :_reduce_95,
  1, 162, :_reduce_96,
  1, 162, :_reduce_97,
  4, 162, :_reduce_98,
  3, 162, :_reduce_99,
  3, 162, :_reduce_100,
  3, 162, :_reduce_101,
  3, 162, :_reduce_102,
  2, 162, :_reduce_103,
  1, 162, :_reduce_104,
  1, 188, :_reduce_105,
  1, 188, :_reduce_none,
  2, 189, :_reduce_107,
  1, 189, :_reduce_108,
  3, 189, :_reduce_109,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 193, :_reduce_115,
  1, 193, :_reduce_none,
  1, 151, :_reduce_none,
  1, 151, :_reduce_none,
  1, 152, :_reduce_119,
  0, 196, :_reduce_120,
  4, 152, :_reduce_121,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  3, 168, :_reduce_192,
  5, 168, :_reduce_193,
  3, 168, :_reduce_194,
  5, 168, :_reduce_195,
  6, 168, :_reduce_196,
  5, 168, :_reduce_197,
  5, 168, :_reduce_198,
  5, 168, :_reduce_199,
  5, 168, :_reduce_200,
  4, 168, :_reduce_201,
  3, 168, :_reduce_202,
  3, 168, :_reduce_203,
  3, 168, :_reduce_204,
  3, 168, :_reduce_205,
  3, 168, :_reduce_206,
  3, 168, :_reduce_207,
  3, 168, :_reduce_208,
  3, 168, :_reduce_209,
  3, 168, :_reduce_210,
  4, 168, :_reduce_211,
  4, 168, :_reduce_212,
  2, 168, :_reduce_213,
  2, 168, :_reduce_214,
  3, 168, :_reduce_215,
  3, 168, :_reduce_216,
  3, 168, :_reduce_217,
  3, 168, :_reduce_218,
  3, 168, :_reduce_219,
  3, 168, :_reduce_220,
  3, 168, :_reduce_221,
  3, 168, :_reduce_222,
  3, 168, :_reduce_223,
  3, 168, :_reduce_224,
  3, 168, :_reduce_225,
  3, 168, :_reduce_226,
  3, 168, :_reduce_227,
  2, 168, :_reduce_228,
  2, 168, :_reduce_229,
  3, 168, :_reduce_230,
  3, 168, :_reduce_231,
  3, 168, :_reduce_232,
  3, 168, :_reduce_233,
  3, 168, :_reduce_234,
  6, 168, :_reduce_235,
  1, 168, :_reduce_none,
  1, 164, :_reduce_none,
  1, 198, :_reduce_none,
  2, 198, :_reduce_none,
  4, 198, :_reduce_240,
  2, 198, :_reduce_241,
  3, 203, :_reduce_242,
  0, 204, :_reduce_243,
  1, 204, :_reduce_none,
  0, 159, :_reduce_245,
  1, 159, :_reduce_none,
  2, 159, :_reduce_none,
  4, 159, :_reduce_248,
  2, 159, :_reduce_249,
  1, 178, :_reduce_250,
  2, 178, :_reduce_251,
  2, 178, :_reduce_252,
  4, 178, :_reduce_253,
  1, 178, :_reduce_254,
  0, 207, :_reduce_255,
  2, 173, :_reduce_256,
  2, 206, :_reduce_257,
  2, 205, :_reduce_258,
  0, 205, :_reduce_259,
  1, 200, :_reduce_260,
  2, 200, :_reduce_261,
  3, 200, :_reduce_262,
  4, 200, :_reduce_263,
  3, 163, :_reduce_264,
  4, 163, :_reduce_265,
  2, 163, :_reduce_266,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_275,
  3, 197, :_reduce_276,
  0, 229, :_reduce_277,
  0, 230, :_reduce_278,
  6, 197, :_reduce_279,
  3, 197, :_reduce_280,
  3, 197, :_reduce_281,
  2, 197, :_reduce_282,
  3, 197, :_reduce_283,
  3, 197, :_reduce_284,
  1, 197, :_reduce_285,
  4, 197, :_reduce_286,
  3, 197, :_reduce_287,
  1, 197, :_reduce_288,
  5, 197, :_reduce_289,
  4, 197, :_reduce_290,
  3, 197, :_reduce_291,
  2, 197, :_reduce_292,
  1, 197, :_reduce_none,
  2, 197, :_reduce_294,
  2, 197, :_reduce_295,
  6, 197, :_reduce_296,
  6, 197, :_reduce_297,
  0, 231, :_reduce_298,
  0, 232, :_reduce_299,
  7, 197, :_reduce_300,
  0, 233, :_reduce_301,
  0, 234, :_reduce_302,
  7, 197, :_reduce_303,
  5, 197, :_reduce_304,
  4, 197, :_reduce_305,
  0, 235, :_reduce_306,
  0, 236, :_reduce_307,
  9, 197, :_reduce_308,
  0, 237, :_reduce_309,
  6, 197, :_reduce_310,
  0, 238, :_reduce_311,
  7, 197, :_reduce_312,
  0, 239, :_reduce_313,
  5, 197, :_reduce_314,
  0, 240, :_reduce_315,
  6, 197, :_reduce_316,
  0, 241, :_reduce_317,
  0, 242, :_reduce_318,
  9, 197, :_reduce_319,
  1, 197, :_reduce_320,
  1, 197, :_reduce_321,
  1, 197, :_reduce_322,
  1, 197, :_reduce_323,
  1, 158, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_327,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 220, :_reduce_none,
  5, 220, :_reduce_331,
  1, 148, :_reduce_none,
  2, 148, :_reduce_333,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 243, :_reduce_336,
  3, 243, :_reduce_337,
  1, 246, :_reduce_338,
  3, 246, :_reduce_339,
  1, 245, :_reduce_none,
  4, 245, :_reduce_341,
  6, 245, :_reduce_342,
  3, 245, :_reduce_343,
  5, 245, :_reduce_344,
  2, 245, :_reduce_345,
  4, 245, :_reduce_346,
  1, 245, :_reduce_347,
  3, 245, :_reduce_348,
  6, 247, :_reduce_349,
  8, 247, :_reduce_350,
  4, 247, :_reduce_351,
  6, 247, :_reduce_352,
  4, 247, :_reduce_353,
  2, 247, :_reduce_none,
  6, 247, :_reduce_355,
  2, 247, :_reduce_356,
  4, 247, :_reduce_357,
  6, 247, :_reduce_358,
  2, 247, :_reduce_359,
  4, 247, :_reduce_360,
  2, 247, :_reduce_361,
  4, 247, :_reduce_362,
  1, 247, :_reduce_363,
  0, 175, :_reduce_364,
  1, 175, :_reduce_365,
  3, 253, :_reduce_366,
  1, 253, :_reduce_367,
  4, 253, :_reduce_368,
  0, 254, :_reduce_369,
  2, 254, :_reduce_370,
  1, 255, :_reduce_371,
  3, 255, :_reduce_372,
  1, 256, :_reduce_373,
  1, 256, :_reduce_none,
  0, 260, :_reduce_375,
  3, 218, :_reduce_376,
  4, 258, :_reduce_377,
  1, 258, :_reduce_378,
  3, 259, :_reduce_379,
  3, 259, :_reduce_380,
  0, 263, :_reduce_381,
  5, 262, :_reduce_382,
  2, 171, :_reduce_383,
  4, 171, :_reduce_384,
  4, 171, :_reduce_385,
  2, 217, :_reduce_386,
  4, 217, :_reduce_387,
  4, 217, :_reduce_388,
  3, 217, :_reduce_389,
  3, 217, :_reduce_390,
  3, 217, :_reduce_391,
  2, 217, :_reduce_392,
  1, 217, :_reduce_393,
  4, 217, :_reduce_394,
  0, 265, :_reduce_395,
  5, 216, :_reduce_396,
  0, 266, :_reduce_397,
  5, 216, :_reduce_398,
  5, 222, :_reduce_399,
  1, 267, :_reduce_400,
  1, 267, :_reduce_none,
  6, 147, :_reduce_402,
  0, 147, :_reduce_403,
  1, 268, :_reduce_404,
  1, 268, :_reduce_none,
  1, 268, :_reduce_none,
  2, 269, :_reduce_407,
  1, 269, :_reduce_none,
  2, 149, :_reduce_409,
  1, 149, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_414,
  1, 271, :_reduce_415,
  2, 271, :_reduce_416,
  3, 272, :_reduce_417,
  1, 272, :_reduce_418,
  1, 272, :_reduce_419,
  3, 210, :_reduce_420,
  4, 211, :_reduce_421,
  3, 212, :_reduce_422,
  0, 276, :_reduce_423,
  3, 276, :_reduce_424,
  1, 277, :_reduce_425,
  2, 277, :_reduce_426,
  3, 213, :_reduce_427,
  0, 279, :_reduce_428,
  3, 279, :_reduce_429,
  0, 273, :_reduce_430,
  2, 273, :_reduce_431,
  0, 274, :_reduce_432,
  2, 274, :_reduce_433,
  0, 275, :_reduce_434,
  2, 275, :_reduce_435,
  1, 278, :_reduce_436,
  2, 278, :_reduce_437,
  0, 281, :_reduce_438,
  4, 278, :_reduce_439,
  1, 280, :_reduce_440,
  1, 280, :_reduce_441,
  1, 280, :_reduce_442,
  1, 280, :_reduce_none,
  1, 194, :_reduce_444,
  3, 195, :_reduce_445,
  1, 270, :_reduce_446,
  1, 270, :_reduce_447,
  2, 270, :_reduce_448,
  2, 270, :_reduce_449,
  1, 186, :_reduce_450,
  1, 186, :_reduce_451,
  1, 186, :_reduce_452,
  1, 186, :_reduce_453,
  1, 186, :_reduce_454,
  1, 187, :_reduce_455,
  1, 187, :_reduce_456,
  1, 187, :_reduce_457,
  1, 187, :_reduce_458,
  1, 187, :_reduce_459,
  1, 187, :_reduce_460,
  1, 187, :_reduce_461,
  1, 214, :_reduce_462,
  1, 214, :_reduce_463,
  1, 157, :_reduce_464,
  1, 157, :_reduce_465,
  1, 161, :_reduce_466,
  1, 161, :_reduce_467,
  1, 224, :_reduce_468,
  3, 224, :_reduce_469,
  2, 224, :_reduce_470,
  3, 226, :_reduce_471,
  2, 226, :_reduce_472,
  6, 261, :_reduce_473,
  8, 261, :_reduce_474,
  4, 261, :_reduce_475,
  6, 261, :_reduce_476,
  4, 261, :_reduce_477,
  6, 261, :_reduce_478,
  2, 261, :_reduce_479,
  4, 261, :_reduce_480,
  6, 261, :_reduce_481,
  2, 261, :_reduce_482,
  4, 261, :_reduce_483,
  2, 261, :_reduce_484,
  4, 261, :_reduce_485,
  1, 261, :_reduce_486,
  0, 261, :_reduce_487,
  1, 257, :_reduce_488,
  1, 257, :_reduce_489,
  1, 257, :_reduce_490,
  1, 257, :_reduce_491,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  1, 283, :_reduce_494,
  3, 283, :_reduce_495,
  1, 248, :_reduce_496,
  3, 248, :_reduce_497,
  3, 284, :_reduce_498,
  3, 285, :_reduce_499,
  1, 249, :_reduce_500,
  3, 249, :_reduce_501,
  1, 282, :_reduce_502,
  3, 282, :_reduce_503,
  1, 286, :_reduce_none,
  1, 286, :_reduce_none,
  2, 250, :_reduce_506,
  1, 250, :_reduce_507,
  1, 287, :_reduce_none,
  1, 287, :_reduce_none,
  2, 252, :_reduce_510,
  2, 251, :_reduce_511,
  0, 251, :_reduce_512,
  1, 227, :_reduce_none,
  3, 227, :_reduce_514,
  0, 215, :_reduce_515,
  2, 215, :_reduce_none,
  1, 202, :_reduce_517,
  3, 202, :_reduce_518,
  3, 288, :_reduce_519,
  2, 288, :_reduce_520,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 141, :_reduce_none,
  1, 141, :_reduce_none,
  0, 167, :_reduce_none,
  1, 167, :_reduce_none,
  2, 181, :_reduce_537,
  2, 160, :_reduce_538,
  0, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 225, :_reduce_542,
  1, 225, :_reduce_none,
  1, 143, :_reduce_none,
  2, 143, :_reduce_none,
  0, 199, :_reduce_546 ]

racc_reduce_n = 547

racc_shift_n = 956

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tREGEXP_OPT => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tCHARACTER => 134,
  :tEQL => 135,
  :tLOWEST => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "primary",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@19",
  "f_args",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@23",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby19.y', 51)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 56)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 60)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 64)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 68)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby19.y', 74)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 79)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 95)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 100)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 104)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 108)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 112)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 117)
  def _reduce_15(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 121)
  def _reduce_16(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 125)
  def _reduce_17(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 131)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 137)
  def _reduce_19(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 141)
  def _reduce_20(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 145)
  def _reduce_21(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 150)
  def _reduce_22(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 155)
  def _reduce_23(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 159)
  def _reduce_24(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 163)
  def _reduce_25(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 171)
  def _reduce_26(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'ruby19.y', 176)
  def _reduce_28(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 180)
  def _reduce_29(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 184)
  def _reduce_30(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 191)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 198)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 205)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 212)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 219)
  def _reduce_35(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 223)
  def _reduce_36(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 228)
  def _reduce_37(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 232)
  def _reduce_38(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'ruby19.y', 239)
  def _reduce_40(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 243)
  def _reduce_41(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'ruby19.y', 249)
  def _reduce_43(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 253)
  def _reduce_44(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 257)
  def _reduce_45(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 261)
  def _reduce_46(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

module_eval(<<'.,.,', 'ruby19.y', 273)
  def _reduce_52(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 278)
  def _reduce_53(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 284)
  def _reduce_54(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 288)
  def _reduce_55(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 295)
  def _reduce_56(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 300)
  def _reduce_57(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 309)
  def _reduce_58(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 314)
  def _reduce_59(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 323)
  def _reduce_60(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 328)
  def _reduce_61(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 337)
  def _reduce_62(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 342)
  def _reduce_63(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 347)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 352)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 357)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 363)
  def _reduce_67(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 367)
  def _reduce_68(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 372)
  def _reduce_69(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 376)
  def _reduce_70(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 71 omitted

module_eval(<<'.,.,', 'ruby19.y', 382)
  def _reduce_72(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 387)
  def _reduce_73(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 392)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 398)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 403)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 409)
  def _reduce_77(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 413)
  def _reduce_78(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 418)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 422)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'ruby19.y', 429)
  def _reduce_82(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 434)
  def _reduce_83(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 438)
  def _reduce_84(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 443)
  def _reduce_85(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 447)
  def _reduce_86(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 452)
  def _reduce_87(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 456)
  def _reduce_88(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 460)
  def _reduce_89(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 464)
  def _reduce_90(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 468)
  def _reduce_91(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 472)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 476)
  def _reduce_93(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 481)
  def _reduce_94(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 486)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 491)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 495)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 499)
  def _reduce_98(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 503)
  def _reduce_99(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 507)
  def _reduce_100(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 511)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 515)
  def _reduce_102(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 520)
  def _reduce_103(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 525)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 530)
  def _reduce_105(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 106 omitted

module_eval(<<'.,.,', 'ruby19.y', 536)
  def _reduce_107(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 540)
  def _reduce_108(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 544)
  def _reduce_109(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

module_eval(<<'.,.,', 'ruby19.y', 553)
  def _reduce_115(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

module_eval(<<'.,.,', 'ruby19.y', 562)
  def _reduce_119(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 566)
  def _reduce_120(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 570)
  def _reduce_121(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

module_eval(<<'.,.,', 'ruby19.y', 591)
  def _reduce_192(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 595)
  def _reduce_193(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 605)
  def _reduce_194(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 609)
  def _reduce_195(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 619)
  def _reduce_196(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 626)
  def _reduce_197(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 633)
  def _reduce_198(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 640)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 647)
  def _reduce_200(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[2], [ val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 651)
  def _reduce_201(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[1], [ val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 655)
  def _reduce_202(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 659)
  def _reduce_203(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 663)
  def _reduce_204(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 667)
  def _reduce_205(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 671)
  def _reduce_206(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 675)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 679)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 683)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 687)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 691)
  def _reduce_211(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.integer(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 698)
  def _reduce_212(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.float(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 705)
  def _reduce_213(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 709)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 713)
  def _reduce_215(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 717)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 721)
  def _reduce_217(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 725)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 729)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 733)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 737)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 741)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 745)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 749)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 753)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 757)
  def _reduce_226(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 761)
  def _reduce_227(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 765)
  def _reduce_228(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 769)
  def _reduce_229(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 773)
  def _reduce_230(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 777)
  def _reduce_231(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 781)
  def _reduce_232(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 785)
  def _reduce_233(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 789)
  def _reduce_234(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 794)
  def _reduce_235(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

module_eval(<<'.,.,', 'ruby19.y', 805)
  def _reduce_240(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 809)
  def _reduce_241(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 814)
  def _reduce_242(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 819)
  def _reduce_243(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 244 omitted

module_eval(<<'.,.,', 'ruby19.y', 825)
  def _reduce_245(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 246 omitted

# reduce 247 omitted

module_eval(<<'.,.,', 'ruby19.y', 831)
  def _reduce_248(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 835)
  def _reduce_249(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 840)
  def _reduce_250(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 844)
  def _reduce_251(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 848)
  def _reduce_252(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 853)
  def _reduce_253(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 859)
  def _reduce_254(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 863)
  def _reduce_255(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 868)
  def _reduce_256(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 875)
  def _reduce_257(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 880)
  def _reduce_258(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 884)
  def _reduce_259(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 889)
  def _reduce_260(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 893)
  def _reduce_261(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 897)
  def _reduce_262(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 901)
  def _reduce_263(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 906)
  def _reduce_264(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 910)
  def _reduce_265(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 914)
  def _reduce_266(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

module_eval(<<'.,.,', 'ruby19.y', 927)
  def _reduce_275(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 931)
  def _reduce_276(val, _values, result)
                          result = @builder.begin_keyword(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 935)
  def _reduce_277(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 940)
  def _reduce_278(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 944)
  def _reduce_279(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 950)
  def _reduce_280(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 954)
  def _reduce_281(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 958)
  def _reduce_282(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 962)
  def _reduce_283(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 966)
  def _reduce_284(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 970)
  def _reduce_285(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 974)
  def _reduce_286(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 978)
  def _reduce_287(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 982)
  def _reduce_288(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 986)
  def _reduce_289(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 991)
  def _reduce_290(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 995)
  def _reduce_291(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 999)
  def _reduce_292(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 293 omitted

module_eval(<<'.,.,', 'ruby19.y', 1008)
  def _reduce_294(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1014)
  def _reduce_295(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1022)
  def _reduce_296(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1029)
  def _reduce_297(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1036)
  def _reduce_298(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1040)
  def _reduce_299(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1044)
  def _reduce_300(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1049)
  def _reduce_301(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1053)
  def _reduce_302(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1057)
  def _reduce_303(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1062)
  def _reduce_304(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1070)
  def _reduce_305(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1078)
  def _reduce_306(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1082)
  def _reduce_307(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1086)
  def _reduce_308(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1092)
  def _reduce_309(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1097)
  def _reduce_310(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1111)
  def _reduce_311(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1119)
  def _reduce_312(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1129)
  def _reduce_313(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1134)
  def _reduce_314(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1146)
  def _reduce_315(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1152)
  def _reduce_316(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1161)
  def _reduce_317(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1165)
  def _reduce_318(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1171)
  def _reduce_319(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1180)
  def _reduce_320(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1184)
  def _reduce_321(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1188)
  def _reduce_322(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1192)
  def _reduce_323(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

module_eval(<<'.,.,', 'ruby19.y', 1201)
  def _reduce_327(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

module_eval(<<'.,.,', 'ruby19.y', 1210)
  def _reduce_331(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 332 omitted

module_eval(<<'.,.,', 'ruby19.y', 1221)
  def _reduce_333(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 334 omitted

# reduce 335 omitted

module_eval(<<'.,.,', 'ruby19.y', 1229)
  def _reduce_336(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1235)
  def _reduce_337(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1240)
  def _reduce_338(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1244)
  def _reduce_339(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby19.y', 1250)
  def _reduce_341(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1257)
  def _reduce_342(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1265)
  def _reduce_343(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1270)
  def _reduce_344(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1276)
  def _reduce_345(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1282)
  def _reduce_346(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1289)
  def _reduce_347(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1293)
  def _reduce_348(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1299)
  def _reduce_349(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1306)
  def _reduce_350(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1314)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1320)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1327)
  def _reduce_353(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 354 omitted

module_eval(<<'.,.,', 'ruby19.y', 1334)
  def _reduce_355(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1341)
  def _reduce_356(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1345)
  def _reduce_357(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1351)
  def _reduce_358(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1358)
  def _reduce_359(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1363)
  def _reduce_360(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1369)
  def _reduce_361(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1374)
  def _reduce_362(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1380)
  def _reduce_363(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1385)
  def _reduce_364(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1389)
  def _reduce_365(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1394)
  def _reduce_366(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1398)
  def _reduce_367(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1402)
  def _reduce_368(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1407)
  def _reduce_369(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1411)
  def _reduce_370(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1416)
  def _reduce_371(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1420)
  def _reduce_372(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1425)
  def _reduce_373(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 374 omitted

module_eval(<<'.,.,', 'ruby19.y', 1430)
  def _reduce_375(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1434)
  def _reduce_376(val, _values, result)
                          result = [ val[1], val[2] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1441)
  def _reduce_377(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1445)
  def _reduce_378(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1450)
  def _reduce_379(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1454)
  def _reduce_380(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1459)
  def _reduce_381(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1463)
  def _reduce_382(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1470)
  def _reduce_383(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1476)
  def _reduce_384(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1482)
  def _reduce_385(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1489)
  def _reduce_386(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1495)
  def _reduce_387(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1501)
  def _reduce_388(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1507)
  def _reduce_389(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1511)
  def _reduce_390(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1517)
  def _reduce_391(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1523)
  def _reduce_392(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1529)
  def _reduce_393(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1533)
  def _reduce_394(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1538)
  def _reduce_395(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1542)
  def _reduce_396(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1548)
  def _reduce_397(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1552)
  def _reduce_398(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1559)
  def _reduce_399(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1565)
  def _reduce_400(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 401 omitted

module_eval(<<'.,.,', 'ruby19.y', 1571)
  def _reduce_402(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1584)
  def _reduce_403(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1589)
  def _reduce_404(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 405 omitted

# reduce 406 omitted

module_eval(<<'.,.,', 'ruby19.y', 1596)
  def _reduce_407(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 408 omitted

module_eval(<<'.,.,', 'ruby19.y', 1602)
  def _reduce_409(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

module_eval(<<'.,.,', 'ruby19.y', 1612)
  def _reduce_414(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1617)
  def _reduce_415(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1621)
  def _reduce_416(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1626)
  def _reduce_417(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1630)
  def _reduce_418(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1634)
  def _reduce_419(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1639)
  def _reduce_420(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1644)
  def _reduce_421(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1650)
  def _reduce_422(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1655)
  def _reduce_423(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1659)
  def _reduce_424(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1664)
  def _reduce_425(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1668)
  def _reduce_426(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1673)
  def _reduce_427(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1678)
  def _reduce_428(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1682)
  def _reduce_429(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1687)
  def _reduce_430(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1691)
  def _reduce_431(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1696)
  def _reduce_432(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1700)
  def _reduce_433(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1705)
  def _reduce_434(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1709)
  def _reduce_435(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1714)
  def _reduce_436(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1718)
  def _reduce_437(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1722)
  def _reduce_438(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1727)
  def _reduce_439(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1735)
  def _reduce_440(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1739)
  def _reduce_441(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1743)
  def _reduce_442(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 443 omitted

module_eval(<<'.,.,', 'ruby19.y', 1750)
  def _reduce_444(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1755)
  def _reduce_445(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1760)
  def _reduce_446(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1764)
  def _reduce_447(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1768)
  def _reduce_448(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.integer(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1773)
  def _reduce_449(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.float(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1779)
  def _reduce_450(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1783)
  def _reduce_451(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1787)
  def _reduce_452(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1791)
  def _reduce_453(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1795)
  def _reduce_454(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1800)
  def _reduce_455(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1804)
  def _reduce_456(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1808)
  def _reduce_457(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1812)
  def _reduce_458(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1816)
  def _reduce_459(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1820)
  def _reduce_460(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1824)
  def _reduce_461(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1829)
  def _reduce_462(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1833)
  def _reduce_463(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1838)
  def _reduce_464(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1842)
  def _reduce_465(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1847)
  def _reduce_466(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1851)
  def _reduce_467(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1856)
  def _reduce_468(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1860)
  def _reduce_469(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1864)
  def _reduce_470(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1870)
  def _reduce_471(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1876)
  def _reduce_472(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1881)
  def _reduce_473(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1888)
  def _reduce_474(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1896)
  def _reduce_475(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1902)
  def _reduce_476(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1909)
  def _reduce_477(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1915)
  def _reduce_478(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1922)
  def _reduce_479(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1927)
  def _reduce_480(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1933)
  def _reduce_481(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1940)
  def _reduce_482(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1945)
  def _reduce_483(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1951)
  def _reduce_484(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1956)
  def _reduce_485(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1962)
  def _reduce_486(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1966)
  def _reduce_487(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1971)
  def _reduce_488(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1975)
  def _reduce_489(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1979)
  def _reduce_490(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1983)
  def _reduce_491(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 492 omitted

# reduce 493 omitted

module_eval(<<'.,.,', 'ruby19.y', 1991)
  def _reduce_494(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1997)
  def _reduce_495(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2002)
  def _reduce_496(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2006)
  def _reduce_497(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2011)
  def _reduce_498(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2018)
  def _reduce_499(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2025)
  def _reduce_500(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2029)
  def _reduce_501(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2034)
  def _reduce_502(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2038)
  def _reduce_503(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 504 omitted

# reduce 505 omitted

module_eval(<<'.,.,', 'ruby19.y', 2045)
  def _reduce_506(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2051)
  def _reduce_507(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 508 omitted

# reduce 509 omitted

module_eval(<<'.,.,', 'ruby19.y', 2058)
  def _reduce_510(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2065)
  def _reduce_511(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2069)
  def _reduce_512(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 513 omitted

module_eval(<<'.,.,', 'ruby19.y', 2075)
  def _reduce_514(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2080)
  def _reduce_515(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 516 omitted

module_eval(<<'.,.,', 'ruby19.y', 2086)
  def _reduce_517(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2090)
  def _reduce_518(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2095)
  def _reduce_519(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2099)
  def _reduce_520(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

module_eval(<<'.,.,', 'ruby19.y', 2110)
  def _reduce_537(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2114)
  def _reduce_538(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

module_eval(<<'.,.,', 'ruby19.y', 2120)
  def _reduce_542(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

module_eval(<<'.,.,', 'ruby19.y', 2129)
  def _reduce_546(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby19
  end   # module Parser
