# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class Ruby21 < Parser::Base

module_eval(<<'...end ruby21.y/module_eval...', 'ruby21.y', 2326)

  def version
    21
  end

  def default_encoding
    Encoding::UTF_8
  end
...end ruby21.y/module_eval...
##### State transition tables begin ###

clist = [
'-477,513,565,-102,268,810,-105,-477,-477,-477,586,-101,-477,-477,-477',
'-83,-477,268,217,-98,-102,238,-100,-69,-477,443,-477,-477,-477,644,-489',
'609,801,-97,571,607,-477,-477,565,-477,-477,-477,-477,-477,565,565,395',
'-99,565,268,-104,397,396,235,616,-100,-104,237,236,218,214,215,525,-99',
'643,527,-477,-477,-477,-477,-477,-477,-477,-477,-477,-477,-477,-477',
'-477,-477,-105,263,-477,-477,-477,-98,-477,-477,-570,-91,-477,267,-103',
'-477,-477,-101,-477,608,-477,218,-477,606,-477,-477,267,-477,-477,-477',
'-477,-477,-289,-477,-93,-477,809,-96,585,-289,-289,-289,113,711,711',
'-289,-289,112,-289,-477,-89,-101,-477,-477,-477,-477,-101,-477,267,-477',
'-102,113,-100,-477,-88,-102,112,-100,-289,-289,-261,-289,-289,-289,-289',
'-289,218,-91,113,-571,-93,-95,-570,112,113,113,-91,-99,113,112,112,837',
'-99,112,-90,711,214,215,-289,-289,-289,-289,-289,-289,-289,-289,-289',
'-289,-289,-289,-289,-289,214,215,-289,-289,-289,-91,627,-488,-91,766',
'-289,-94,-286,-289,-92,594,-91,614,-289,845,-289,622,-289,-289,268,-289',
'-289,-289,-289,-289,-474,-289,611,-289,-93,113,113,-474,-474,-474,112',
'112,-474,-474,-474,-263,-474,-289,214,215,-289,-289,-286,-94,-474,-289',
'-474,-474,-474,854,644,-103,-97,-567,-100,576,-474,-474,-91,-474,-474',
'-474,-474,-474,-93,644,-100,-93,113,596,595,214,215,112,644,-93,-484',
'113,263,743,91,92,112,-484,218,643,-474,-474,-474,-474,-474,-474,-474',
'-474,-474,-474,-474,-474,-474,-474,643,267,-474,-474,-474,-474,-474',
'-474,515,643,-474,767,-474,-474,-474,516,-474,-567,-474,-410,-474,-474',
'-474,-474,441,-474,-474,-474,-474,-474,855,-474,218,-474,214,215,91',
'92,594,546,-567,543,542,541,577,544,575,-474,578,-574,-474,-474,-474',
'-474,594,-474,-574,-474,93,94,-485,-474,387,-574,-574,-574,-102,-485',
'-574,-574,-574,-410,-574,546,571,543,542,541,-410,544,857,-574,-574',
'-574,-574,-99,113,-410,79,-574,688,112,-574,-574,860,-574,-574,-574',
'-574,-574,80,-574,596,595,-483,862,-410,594,-574,864,81,-483,745,-570',
'93,94,594,-574,596,595,610,828,-574,-574,-574,-574,-574,-574,-574,-574',
'-574,-574,-574,-574,-574,-574,-574,-481,-574,-574,-574,-574,768,-574',
'-481,594,-574,-489,-574,-574,-574,594,-574,-570,-574,951,-574,-574,-574',
'-574,594,-574,-574,-574,-574,-574,513,-574,-574,-574,-474,596,595,592',
'113,752,-574,-474,866,112,596,595,597,-574,218,-568,-574,-574,-574,-574',
'868,-574,-289,-574,-89,623,-488,-101,113,-289,-289,-289,-98,112,-289',
'-289,-289,-290,-289,596,595,599,869,-95,-290,596,595,601,-289,-289,-289',
'-104,-90,-290,596,595,605,872,-289,-289,-99,-289,-289,-289,-289,-289',
'212,-477,-290,-279,-289,573,-93,-88,-477,-290,-279,-289,574,-568,-102',
'-97,-571,-477,-290,-279,-289,572,-289,-289,-289,-289,-289,-289,-289',
'-289,-289,-289,-289,-289,-289,-289,-568,-290,-289,-289,-289,238,769',
'-289,-290,218,-289,-96,974,-289,-289,489,-289,-290,-289,-105,-289,525',
'-289,-289,524,-289,-289,-289,-289,-289,113,-289,581,-289,874,112,-480',
'235,875,933,673,237,236,-480,233,234,877,-289,582,113,-289,-289,-289',
'-289,112,-289,-574,-289,69,70,71,-103,57,-574,-574,-574,63,64,529,-574',
'-574,67,-574,65,66,68,30,31,72,73,525,-574,-261,527,881,29,28,27,101',
'100,102,103,-574,-574,19,-574,-574,-574,-574,-574,525,45,883,527,105',
'104,106,95,56,97,96,98,528,99,107,108,886,91,92,42,43,41,-574,-574,-574',
'-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,439,688,-574',
'-574,-574,223,628,440,229,113,-574,58,59,-574,112,60,441,260,-574,888',
'-574,44,-574,-574,261,-574,-574,-574,-574,-574,20,-574,-574,-574,890',
'89,79,82,83,260,84,86,85,87,892,-479,261,-574,80,88,-574,-574,-479,-92',
'894,-574,62,894,81,93,94,-101,289,69,70,71,9,57,-477,218,210,63,64,832',
'801,-477,67,211,65,66,68,30,31,72,73,900,209,832,801,218,29,28,27,101',
'100,102,103,737,738,19,902,739,107,108,632,8,45,291,10,105,104,106,95',
'56,97,96,98,238,99,107,108,904,91,92,42,43,41,238,242,247,248,249,244',
'246,254,255,250,251,-289,231,232,-486,514,252,253,-289,40,510,-486,33',
'-571,263,58,59,-289,218,60,-486,35,235,272,241,44,237,236,550,233,234',
'245,243,239,20,240,561,560,553,89,79,82,83,-487,84,86,85,87,910,-482',
'-487,913,80,88,218,256,-482,-238,917,-487,62,-264,81,93,94,289,69,70',
'71,9,57,561,560,979,63,64,554,214,215,67,980,65,66,68,30,31,72,73,507',
'978,500,499,218,29,28,27,101,100,102,103,-68,927,19,496,934,935,489',
'617,8,45,291,10,105,104,106,95,56,97,96,98,944,99,107,108,945,91,92',
'42,43,41,238,242,247,248,249,244,246,254,255,250,251,581,231,232,-279',
'487,252,253,933,40,485,-279,33,550,476,58,59,582,217,60,-279,35,235',
'553,241,44,237,236,445,233,234,245,243,239,20,240,444,953,442,89,79',
'82,83,581,84,86,85,87,955,956,580,961,80,88,732,256,561,560,688,582',
'62,554,81,93,94,289,69,70,71,9,57,964,966,-332,63,64,968,970,970,67',
'-332,65,66,68,30,31,72,73,398,-332,981,982,894,29,28,27,101,100,102',
'103,894,894,19,987,953,385,218,632,8,45,291,10,105,104,106,95,56,97',
'96,98,316,99,107,108,315,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,-289,231,232,505,257,252,253,-289,40,-571,506,33,-571',
'-570,58,59,-289,678,60,504,35,235,213,241,44,237,236,208,233,234,245',
'243,239,20,240,207,953,1006,89,79,82,83,-486,84,86,85,87,1007,1008,-486',
'970,80,88,970,256,970,218,206,-486,62,121,81,93,94,289,69,70,71,9,57',
'894,953,-487,63,64,109,-262,970,67,-487,65,66,68,30,31,72,73,747,-487',
'753,746,742,29,28,27,101,100,102,103,732,930,19,543,542,541,476,544',
'8,45,291,10,105,104,106,95,56,97,96,98,476,99,107,108,714,91,92,42,43',
'41,238,242,247,248,249,244,246,254,255,250,251,571,231,232,707,705,252',
'253,704,40,703,218,33,695,771,58,59,693,691,60,257,35,235,689,241,44',
'237,236,688,233,234,245,243,239,20,240,685,681,487,89,79,82,83,489,84',
'86,85,87,794,679,673,218,80,88,678,256,673,263,518,263,62,673,81,93',
'94,289,69,70,71,9,57,218,238,662,63,64,801,-83,218,67,218,65,66,68,30',
'31,72,73,116,117,118,119,120,29,28,27,101,100,102,103,218,930,19,543',
'542,541,218,544,8,45,291,10,105,104,106,95,56,97,96,98,218,99,107,108',
'238,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,238,231',
'232,238,826,252,253,238,40,218,801,33,836,634,58,59,218,631,60,263,35',
'235,621,241,44,237,236,620,233,234,245,243,239,20,240,218,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,116,117,118,119,120,29,28,27,101',
'100,102,103,,,19,116,117,118,119,120,8,45,291,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255',
'250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237',
'236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',256,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244',
'246,254,255,250,251,,231,232,,,252,253,,40,,,293,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247',
'248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59',
',,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40',
',,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,218,256,,,,,62,,81,93,94',
'289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251',
',231,232,,,252,253,,40,,,293,,,58,59,,,60,,35,235,,241,44,237,236,,233',
'234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,',
',,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254',
'255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44',
'237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,',
'80,88,,256,,,,,62,,81,93,94,5,69,70,71,9,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244',
'246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247',
'248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59',
',,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40',
',,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252',
'253,,40,,,293,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243',
'239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93',
'94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250',
'251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236',
',233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256',
',,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,546,19,543,542,541,,544,8,45,291,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,546,,543,542',
'541,,544,,697,,546,,543,542,541,,544,899,,40,,,33,,,58,59,,,60,,35,',
',,44,,697,,,,,,,20,,700,697,,89,79,82,83,,84,86,85,87,,,,,80,88,,546',
',543,542,541,62,544,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,697,29,28,27,101,100,102,103,,700,19,,,238,,,8,45',
'291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-593',
'-593,-593,-593,244,246,235,,-593,-593,237,236,,233,234,252,253,,40,',
',33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,546,,543,542,541,62,544,81,93',
'94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,697,29',
'28,27,101,100,102,103,,546,19,543,542,541,,544,8,45,291,10,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,546,,543,542,541,,544',
'697,546,,543,542,541,,544,252,253,,40,,,33,,,58,59,,238,60,,35,235,',
'241,44,237,236,697,233,234,,,239,20,240,697,,,89,79,82,83,,84,86,85',
'87,,,235,,80,88,237,236,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,',
'8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238',
',,,,,,,,,,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236',
',233,234,,,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62',
',81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,40,,,33',
',,58,59,,,60,,35,235,,241,44,237,236,,233,234,,,239,20,240,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,289,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,238,242,247,248,249,244,246,254,,250,251,,,,,,252,253,,40,,,33,,',
'58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,289,69,70,71,9,57',
',,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,238,,,,,,,,,,,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,,,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244',
'246,,,250,251,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237',
'236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,,,,62,,81,93,94,5,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,,-593,-593,,,252,253,,40,,,33,,,58,59,,,60,,35,235,',
'241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-593,-593',
'-593,-593,244,246,,,-593,-593,,,,,,252,253,,40,,,33,,,58,59,,,60,,35',
'235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-593,-593',
'-593,-593,244,246,,,-593,-593,,,,,,252,253,,40,,,33,,,58,59,,,60,,35',
'235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,,,,62,,81,93,94,5,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-593,-593',
'-593,-593,244,246,,,-593,-593,,,,,,252,253,,40,,,33,,,58,59,,,60,,35',
'235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-593,-593',
'-593,-593,244,246,,,-593,-593,,,,,,252,253,,40,,,33,,,58,59,,,60,,35',
'235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247',
'248,249,244,246,254,255,250,251,,-593,-593,,,252,253,,40,,,33,,,58,59',
',,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-593,-593,-593',
'-593,244,246,,,-593,-593,,,,,,252,253,,223,,,229,,,58,59,,,60,,,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,223',
',,229,,,58,59,,,60,,,235,,241,44,237,236,,233,234,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,',
'8,45,,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238',
',,,,,,,,,,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236',
',233,234,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,223,,,229,,,58,59,,,60,,403',
'235,,,44,237,236,,233,234,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,',
',29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279',
',44,,,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,656,,,,44',
',,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,403,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,218,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,,,312,,,,,,,,,,,,,,,,,,,,302,,,298,,,58,59,,,60,,,,,,,,,,,,,,,,,',
',,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308',
'309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,306,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,302,,,298,,,58,59',
',,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308',
'309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308',
'309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
',,312,,,,,,,,,,,,,,,,,,,,302,,,298,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,218,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230',
',,,,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,',
',,,,,,,,,,,,,,,302,,,298,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,403,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308',
'309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,306,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,941,',
',229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44',
',,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,387,62,,81,93',
'94,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,8,45,,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44',
',,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,,,312,,,,,,,,,,,,,,,,,,,,871,,,229,,,58,59,,,60,,,,,,,,,,,,,,,,,',
',,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,279,,44,,,284,,,,,,228,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,656,,279,,44,,,284,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9',
'57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,8,45,7,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312',
',,,,,,,,,,,,,,,,,,,302,,,229,,,58,59,,,60,,,546,,543,542,541,550,544',
',,,,,,,,553,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,502,,548,62,,81,93',
'94,69,70,71,,57,561,560,,63,64,554,,,67,,65,66,68,308,309,72,73,,,,',
',304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305',
'311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,283',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,279,,44,,,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,',
'69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,656,,,,44,,,,,,,,,228,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230',
',,,,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,',
',,,,,,,,,,,,,,,302,,,298,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
'518,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,',
',105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,',
',,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,750,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,656,,279,,44,,,284,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,,,279,,44,,,284,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,',
',105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,',
',,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,',
'91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,',
'44,,,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284',
',,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312',
',,,,,,,,,,,,,,,,,,,302,,,298,,,58,59,,,60,,297,,,,,,,,,,,,,,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,,,,',
',,,,,,,,,,302,,,229,,,58,59,,,60,,,546,,543,542,541,550,544,,,,,,,,',
'553,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,314,,548,62,,81,93,94,69',
'70,71,,57,561,560,,63,64,554,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,,,44,,,284,,,,,,228,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,284,,,,,,228,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,',
',,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,113,,,,,112,62,,81,93,94,69,70,71,,57,,,,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,306,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,347',
',,33,,,58,59,,,60,,35,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,',
'80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73',
',,,,,304,305,311,101,100,102,103,,,230,,,,,,,306,,,105,104,106,352,56',
'97,96,353,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,359,,,354,,,229,',
',58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,',
',69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,306,,,105,104,106,352,56,97,96,353',
',99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,354,,,229,,,58,59,,,60,',
',546,,543,542,541,550,544,,,,,,,,,553,,89,79,82,83,,84,86,85,87,,,,',
'80,88,,,,,,548,62,,81,93,94,69,70,71,9,57,561,560,,63,64,554,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,',
',,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,,,387,62,,81,93,94,69,70,71,,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,',
',,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,306,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,871',
',,229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308',
'309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,-576,,62,,81,93,94,-576,-576',
'-576,,,-576,-576,-576,,-576,,,,,,,,,-576,-576,-576,-576,,,,,,,,-576',
'-576,,-576,-576,-576,-576,-576,,,,,,,,,,,,,,,,,,,,,,,-576,-576,-576',
'-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,,,-576,-576,-576',
',,-576,,,-576,,,-576,-576,,-576,,-576,,-576,,-576,-576,,-576,-576,-576',
'-576,-576,,-576,-576,-576,,,,,,,,,,,,,,-576,,,-576,-576,-576,-576,-280',
'-576,,-576,,,,-280,-280,-280,,,-280,-280,-280,,-280,,,,,,,,,,-280,-280',
'-280,,,,,,,,-280,-280,,-280,-280,-280,-280,-280,,,,,,,,,,,,,,,,,,,,',
',,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280',
',,-280,-280,-280,,,-280,,,-280,,,-280,-280,,-280,,-280,,-280,,-280,-280',
',-280,-280,-280,-280,-280,,-280,,-280,,,,,,,,,,,,,,-280,,,-280,-280',
'-280,-280,-575,-280,,-280,,,,-575,-575,-575,,,-575,-575,-575,,-575,',
',,,,,,,-575,-575,-575,-575,,,,,,,,-575,-575,,-575,-575,-575,-575,-575',
',,,,,,,,,,,,,,,,,,,,,,-575,-575,-575,-575,-575,-575,-575,-575,-575,-575',
'-575,-575,-575,-575,,,-575,-575,-575,,,-575,,,-575,,,-575,-575,,-575',
',-575,,-575,,-575,-575,,-575,-575,-575,-575,-575,,-575,-575,-575,546',
',543,542,541,550,544,,,,,,,-575,,553,-575,-575,-575,-575,-296,-575,',
'-575,,,,-296,-296,-296,,,-296,-296,-296,,-296,548,,,,,,,,,-296,-296',
'561,560,,,,554,,,-296,-296,,-296,-296,-296,-296,-296,,,,,,,,,,,,,,,',
',,,,,,,-296,-296,-296,-296,-296,-296,-296,-296,-296,-296,-296,-296,-296',
'-296,,,-296,-296,-296,,,-296,,272,-296,,,-296,-296,,-296,,-296,,-296',
',-296,-296,,-296,-296,-296,-296,-296,,-296,-244,-296,,,,,,-244,-244',
'-244,,,-244,-244,-244,-296,-244,,-296,-296,,-296,,-296,,-244,-244,,',
',,,,,,,-244,-244,,-244,-244,-244,-244,-244,,,,,,,,,,,,,,,,,,546,,543',
'542,541,550,544,,,,,,,,,553,-244,,-409,,,,,-244,,-409,-409,-409,263',
'-244,-409,-409,-409,,-409,,,548,,,,,,-409,-409,-409,558,557,561,560',
',-244,-244,554,-409,-409,,-409,-409,-409,-409,-409,,,,,-244,,,-244,',
',,,-244,,,,,218,,,,,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409',
'-409,-409,-409,-409,,,-409,-409,-409,,,-409,,263,-409,,,-409,-409,,-409',
',-409,,-409,,-409,-409,,-409,-409,-409,-409,-409,,-409,-409,-409,,,',
',,,,,,,,,,-409,,-244,-409,-409,,-409,,-409,-244,-244,-244,,,-244,-244',
'-244,,-244,,,,,,,,,-244,-244,-244,,,,,,,,,-244,-244,,-244,-244,-244',
'-244,-244,,,,,,,,,,,,,,,,,,,,,,,-244,-244,-244,-244,-244,-244,-244,-244',
'-244,-244,-244,-244,-244,-244,,,-244,-244,-244,,,-244,,263,-244,,,-244',
'-244,,-244,,-244,,-244,,-244,-244,,-244,-244,-244,-244,-244,,-244,-244',
'-244,,,,,,,,,,,,,,-244,,,-244,-244,,-244,,-244,173,184,174,197,170,190',
'180,179,200,201,195,178,177,172,198,202,203,182,171,185,189,191,183',
'176,,,,192,199,194,193,186,196,181,169,188,187,,,,,,168,175,166,167',
'163,164,165,124,126,,,125,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135,156,153,152,161',
'148,149,143,141,133,155,134,,,162,89,,,,,,,,,,,,,,88,173,184,174,197',
'170,190,180,179,200,201,195,178,177,172,198,202,203,182,171,185,189',
'191,183,176,,,,192,199,194,193,186,196,181,169,188,187,,,,,,168,175',
'166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154,136,137,138,145',
'142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135,156,153',
'152,161,148,149,143,141,133,155,134,,,162,89,,,,,,,,,,,,,,88,173,184',
'174,197,170,190,180,179,200,201,195,178,177,172,198,202,203,182,171',
'185,189,191,183,176,,,,192,199,194,193,186,196,181,169,188,187,,,,,',
'168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154,136,137',
'138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135',
'156,153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,,,,,,,,,88',
'173,184,174,197,170,190,180,179,200,201,195,178,177,172,198,202,203',
'182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169,188,187',
',,,,,168,175,166,167,163,164,165,124,126,123,,125,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,',
',,,,,,,88,173,184,174,197,170,190,180,179,200,201,195,178,177,172,198',
'202,203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169',
'188,187,,,,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158',
',154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,',
',,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,,,162,173',
'184,174,197,170,190,180,179,200,201,195,178,177,172,198,202,203,182',
'171,185,189,191,183,176,,,,192,199,194,370,369,371,368,169,188,187,',
',,,,168,175,166,167,365,366,367,363,126,97,96,364,,99,,,,,,157,158,',
'154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,375,,',
',,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,637,423',
'162,,638,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159',
'160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143',
'141,133,155,134,717,416,162,,718,,,,,,,,157,158,,154,136,137,138,145',
'142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,635,416,162,,636,,,,,,,,157',
'158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263',
',,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,637',
'423,162,,638,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,',
',,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149',
'143,141,133,155,134,412,416,162,,413,,,,,,,,157,158,,154,136,137,138',
'145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135',
'156,153,152,161,148,149,143,141,133,155,134,474,416,162,,475,,,,,,,',
'157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,',
',,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134',
'999,416,162,,1000,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139',
'140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161',
'148,149,143,141,133,155,134,635,416,162,,636,,,,,,,,157,158,,154,136',
'137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,976,423,162,,975',
',,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,1001,423,162,,1002,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152',
'161,148,149,143,141,133,155,134,419,423,162,,418,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,',
',151,150,,135,156,153,152,161,148,149,143,141,133,155,134,666,416,162',
',667,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160',
'146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141',
'133,155,134,669,423,162,,670,,,,,,,,157,158,,154,136,137,138,145,142',
'144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153',
'152,161,148,149,143,141,133,155,134,474,416,162,,475,,,,,,,,157,158',
',154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,',
',,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,722,423',
'162,,723,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159',
'160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143',
'141,133,155,134,719,423,162,,720,,,,,,,,157,158,,154,136,137,138,145',
'142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,,546,162,543,542,541,550,544',
',546,,543,542,541,550,544,553,,,,,,,,553,,546,,543,542,541,550,544,',
',,,,548,,,553,,,,,548,558,557,561,560,,,,554,558,557,561,560,,,,554',
'548,,546,,543,542,541,550,544,558,557,561,560,,,,554,553,,546,,543,542',
'541,550,544,,546,,543,542,541,550,544,553,,,,,548,,,553,,,,,,558,557',
'561,560,,,,554,548,,,,,,,,548,558,557,561,560,,,,554,558,557,561,560',
',,546,554,543,542,541,550,544,546,,543,542,541,550,544,546,553,543,542',
'541,550,544,546,553,543,542,541,550,544,,553,,,,,,,553,548,,,,,,,548',
',558,557,561,560,,548,,554,,561,560,,548,,554,,561,560,,,,554,,561,560',
',,546,554,543,542,541,550,544,,546,,543,542,541,550,544,553,,,,,,,,553',
',546,,543,542,541,550,544,,,,,,548,,,553,,,,,548,558,557,561,560,,,',
'554,558,557,561,560,,,,554,548,532,546,,543,542,541,550,544,558,557',
'561,560,,,,554,553,,546,,543,542,541,550,544,546,,543,542,541,550,544',
',553,,,,,548,,553,,,,,,,,,561,560,,,,554,548,,,,,,,548,,,,561,560,,',
',554,,561,560,,,,554' ]
        racc_action_table = arr = ::Array.new(24869, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'98,442,880,718,61,683,348,98,98,98,358,1001,98,98,98,661,98,307,19,345',
'1000,449,999,661,98,224,98,98,98,648,222,383,908,344,908,382,98,98,903',
'98,98,98,98,98,337,338,123,1013,715,647,575,123,123,449,404,717,442',
'449,449,19,436,436,682,839,648,682,98,98,98,98,98,98,98,98,98,98,98',
'98,98,98,224,307,98,98,98,222,98,98,1001,666,98,61,720,98,98,719,98',
'383,98,725,98,382,98,98,307,98,98,98,98,98,418,98,718,98,683,348,358',
'418,418,418,880,568,567,418,418,880,418,98,345,1001,98,98,98,98,1001',
'98,647,98,1000,358,999,98,344,1000,358,999,418,418,402,418,418,418,418',
'418,436,666,903,720,667,575,719,903,337,338,717,1013,715,337,338,715',
'1013,715,839,840,587,587,418,418,418,418,418,418,418,418,418,418,418',
'418,418,418,591,591,418,418,418,666,418,221,666,635,418,720,58,418,719',
'602,666,399,418,730,418,412,418,418,26,418,418,418,418,418,95,418,393',
'418,667,568,567,95,95,95,568,567,95,95,95,749,95,418,676,676,418,418',
'58,418,95,418,95,95,95,754,472,418,221,352,635,349,95,95,412,95,95,95',
'95,95,667,480,412,667,587,602,602,336,336,587,481,667,365,840,26,602',
'312,312,840,365,591,472,95,95,95,95,95,95,95,95,95,95,95,95,95,95,480',
'26,95,95,95,352,95,95,318,481,95,636,352,95,95,318,95,352,95,796,95',
'352,95,95,318,95,95,95,95,95,770,95,676,95,521,521,41,41,604,700,352',
'700,700,700,354,700,347,95,354,722,95,95,95,95,384,95,637,95,312,312',
'367,95,343,637,637,637,636,367,637,637,637,796,637,899,342,899,899,899',
'796,899,772,637,637,637,637,770,586,796,77,669,773,586,637,637,775,637',
'637,637,637,637,77,722,604,604,366,776,796,377,722,777,77,366,604,722',
'41,41,378,722,384,384,384,700,637,637,637,637,637,637,637,637,637,637',
'637,637,637,637,722,371,637,637,637,669,637,637,371,379,637,39,669,637',
'637,380,637,669,637,899,637,669,637,637,381,637,637,637,637,637,316',
'637,637,637,363,377,377,377,848,618,669,363,779,848,378,378,378,637',
'780,353,637,637,637,637,781,637,638,637,39,413,38,637,287,638,638,638',
'39,287,638,638,638,578,638,379,379,379,782,316,578,380,380,380,638,638',
'638,316,618,578,381,381,381,786,638,638,618,638,638,638,638,638,15,353',
'507,303,1002,346,413,38,353,507,303,1002,346,353,413,38,1002,353,507',
'303,1002,346,638,638,638,638,638,638,638,638,638,638,638,638,638,638',
'353,981,638,638,638,468,638,638,981,928,638,15,928,638,638,332,638,981',
'638,15,638,327,638,638,327,638,638,638,638,638,3,638,932,638,790,3,370',
'468,791,932,795,468,468,370,468,468,799,638,932,843,638,638,638,638',
'843,638,419,638,117,117,117,638,117,419,419,419,117,117,330,419,419',
'117,419,117,117,117,117,117,117,117,328,419,802,328,803,117,117,117',
'117,117,117,117,419,419,117,419,419,419,419,419,331,117,806,331,117',
'117,117,117,117,117,117,117,329,117,117,117,811,117,117,117,117,117',
'419,419,419,419,419,419,419,419,419,419,419,419,419,419,220,812,419',
'419,419,117,419,220,117,341,419,117,117,419,341,117,220,373,419,816',
'419,117,419,419,373,419,419,419,419,419,117,419,419,419,817,117,117',
'117,117,24,117,117,117,117,819,369,24,419,117,117,419,419,369,419,820',
'419,117,822,117,117,117,419,731,731,731,731,731,731,364,825,14,731,731',
'706,706,364,731,14,731,731,731,731,731,731,731,827,14,989,989,325,731',
'731,731,731,731,731,731,595,595,731,830,595,595,595,431,731,731,731',
'731,731,731,731,731,731,731,731,731,320,731,731,731,833,731,731,731',
'731,731,431,431,431,431,431,431,431,431,431,431,431,670,431,431,938',
'317,431,431,670,731,313,938,731,670,311,731,731,670,306,731,938,731',
'431,305,431,731,431,431,685,431,431,431,431,431,731,431,688,688,685',
'731,731,731,731,939,731,731,731,731,842,368,939,846,731,731,847,431',
'368,431,850,939,731,851,731,731,731,588,588,588,588,588,588,685,685',
'940,588,588,685,17,17,588,940,588,588,588,588,588,588,588,302,940,296',
'295,294,588,588,588,588,588,588,588,292,867,588,291,871,873,280,407',
'588,588,588,588,588,588,588,588,588,588,588,588,884,588,588,588,885',
'588,588,588,588,588,407,407,407,407,407,407,407,407,407,407,407,870',
'407,407,942,277,407,407,870,588,276,942,588,857,262,588,588,870,230',
'588,942,588,407,857,407,588,407,407,226,407,407,407,407,407,588,407',
'225,901,223,588,588,588,588,356,588,588,588,588,905,906,356,912,588',
'588,916,407,857,857,918,356,588,857,588,588,588,566,566,566,566,566',
'566,921,922,46,566,566,923,924,926,566,46,566,566,566,566,566,566,566',
'204,46,941,946,947,566,566,566,566,566,566,566,948,949,566,950,952,109',
'45,640,566,566,566,566,566,566,566,566,566,566,566,566,40,566,566,566',
'37,566,566,566,566,566,640,640,640,640,640,640,640,640,640,640,640,723',
'640,640,301,22,640,640,723,566,975,301,566,723,976,566,566,723,977,566',
'301,566,640,16,640,566,640,640,13,640,640,640,640,640,566,640,12,988',
'990,566,566,566,566,299,566,566,566,566,991,992,299,993,566,566,994',
'640,995,998,10,299,566,7,566,566,566,563,563,563,563,563,563,1003,1004',
'300,563,563,1,615,1015,563,300,563,563,563,563,563,563,563,609,300,619',
'607,599,563,563,563,563,563,563,563,589,974,563,974,974,974,624,974',
'563,563,563,563,563,563,563,563,563,563,563,563,629,563,563,563,570',
'563,563,563,563,563,758,758,758,758,758,758,758,758,758,758,758,569',
'758,758,564,562,758,758,559,563,555,639,563,547,641,563,563,539,538',
'563,646,563,758,537,758,563,758,758,535,758,758,758,758,758,563,758',
'534,522,653,563,563,563,563,655,563,563,563,563,660,520,663,665,563',
'563,519,758,511,668,508,671,563,672,563,563,563,877,877,877,877,877',
'877,503,675,501,877,877,677,498,680,877,497,877,877,877,877,877,877',
'877,495,495,495,495,495,877,877,877,877,877,877,877,684,868,877,868',
'868,868,482,868,877,877,877,877,877,877,877,877,877,877,877,877,478',
'877,877,877,453,877,877,877,877,877,761,761,761,761,761,761,761,761',
'761,761,761,452,761,761,451,699,761,761,450,877,701,708,877,713,438',
'877,877,716,428,877,420,877,761,411,761,877,761,761,410,761,761,761',
'761,761,877,761,408,,,877,877,877,877,,877,877,877,877,,,,,877,877,',
'761,,,,,877,,877,877,877,789,789,789,789,789,789,,,,789,789,,,,789,',
'789,789,789,789,789,789,789,290,290,290,290,290,789,789,789,789,789',
'789,789,,,789,6,6,6,6,6,789,789,789,789,789,789,789,789,789,789,789',
'789,,789,789,789,,789,789,789,789,789,763,763,763,763,763,763,763,763',
'763,763,763,,763,763,,,763,763,,789,,,789,,,789,789,,,789,,789,763,',
'763,789,763,763,,763,763,763,763,763,789,763,,,,789,789,789,789,,789',
'789,789,789,,,,,789,789,,763,,,,,789,,789,789,789,293,293,293,293,293',
'293,,,,293,293,,,,293,,293,293,293,293,293,293,293,,,,,,293,293,293',
'293,293,293,293,,,293,,,,,,293,293,293,293,293,293,293,293,293,293,293',
'293,,293,293,293,,293,293,293,293,293,765,765,765,765,765,765,765,765',
'765,765,765,,765,765,,,765,765,,293,,,293,,,293,293,,,293,,293,765,',
'765,293,765,765,,765,765,765,765,765,293,765,,,,293,293,293,293,,293',
'293,293,293,,,,,293,293,,765,,,,,293,,293,293,293,645,645,645,645,645',
'645,,,,645,645,,,,645,,645,645,645,645,645,645,645,,,,,,645,645,645',
'645,645,645,645,,,645,,,,,,645,645,645,645,645,645,645,645,645,645,645',
'645,,645,645,645,,645,645,645,645,645,426,426,426,426,426,426,426,426',
'426,426,426,,426,426,,,426,426,,645,,,645,,,645,645,,,645,,645,426,',
'426,645,426,426,,426,426,426,426,426,645,426,,,,645,645,645,645,,645',
'645,645,645,,,,,645,645,,426,,,,,645,,645,645,645,954,954,954,954,954',
'954,,,,954,954,,,,954,,954,954,954,954,954,954,954,,,,,,954,954,954',
'954,954,954,954,,,954,,,,,,954,954,954,954,954,954,954,954,954,954,954',
'954,,954,954,954,,954,954,954,954,954,853,853,853,853,853,853,853,853',
'853,853,853,,853,853,,,853,853,,954,,,954,,,954,954,,,954,,954,853,',
'853,954,853,853,,853,853,853,853,853,954,853,,,,954,954,954,954,,954',
'954,954,954,,,,,954,954,,853,,,,,954,,954,954,954,651,651,651,651,651',
'651,,,,651,651,,,,651,,651,651,651,651,651,651,651,,,,,,651,651,651',
'651,651,651,651,,,651,,,,,,651,651,651,651,651,651,651,651,651,651,651',
'651,,651,651,651,,651,651,651,651,651,471,471,471,471,471,471,471,471',
'471,471,471,,471,471,,,471,471,,651,,,651,,,651,651,,,651,,651,471,',
'471,651,471,471,,471,471,471,471,471,651,471,,,,651,651,651,651,,651',
'651,651,651,,,,,651,651,471,471,,,,,651,,651,651,651,298,298,298,298',
'298,298,,,,298,298,,,,298,,298,298,298,298,298,298,298,,,,,,298,298',
'298,298,298,298,298,,,298,,,,,,298,298,298,298,298,298,298,298,298,298',
'298,298,,298,298,298,,298,298,298,298,298,856,856,856,856,856,856,856',
'856,856,856,856,,856,856,,,856,856,,298,,,298,,,298,298,,,298,,298,856',
',856,298,856,856,,856,856,856,856,856,298,856,,,,298,298,298,298,,298',
'298,298,298,,,,,298,298,,856,,,,,298,,298,298,298,810,810,810,810,810',
'810,,,,810,810,,,,810,,810,810,810,810,810,810,810,,,,,,810,810,810',
'810,810,810,810,,,810,,,,,,810,810,810,810,810,810,810,810,810,810,810',
'810,,810,810,810,,810,810,810,810,810,274,274,274,274,274,274,274,274',
'274,274,274,,274,274,,,274,274,,810,,,810,,,810,810,,,810,,810,274,',
'274,810,274,274,,274,274,274,274,274,810,274,,,,810,810,810,810,,810',
'810,810,810,,,,,810,810,,274,,,,,810,,810,810,810,0,0,0,0,0,0,,,,0,0',
',,,0,,0,0,0,0,0,0,0,,,,,,0,0,0,0,0,0,0,,,0,,,,,,0,0,0,0,0,0,0,0,0,0',
'0,0,,0,0,0,,0,0,0,0,0,674,674,674,674,674,674,674,674,674,674,674,,674',
'674,,,674,674,,0,,,0,,,0,0,,,0,,0,674,,674,0,674,674,,674,674,674,674',
'674,0,674,,,,0,0,0,0,,0,0,0,0,,,,,0,0,,674,,,,,0,,0,0,0,844,844,844',
'844,844,844,,,,844,844,,,,844,,844,844,844,844,844,844,844,,,,,,844',
'844,844,844,844,844,844,,,844,,,,,,844,844,844,844,844,844,844,844,844',
'844,844,844,,844,844,844,,844,844,844,844,844,517,517,517,517,517,517',
'517,517,517,517,517,,517,517,,,517,517,,844,,,844,,,844,844,,,844,,844',
'517,,517,844,517,517,,517,517,517,517,517,844,517,,,,844,844,844,844',
',844,844,844,844,,,,,844,844,,517,,,,,844,,844,844,844,726,726,726,726',
'726,726,,,,726,726,,,,726,,726,726,726,726,726,726,726,,,,,,726,726',
'726,726,726,726,726,,,726,,,,,,726,726,726,726,726,726,726,726,726,726',
'726,726,,726,726,726,,726,726,726,726,726,21,21,21,21,21,21,21,21,21',
'21,21,,21,21,,,21,21,,726,,,726,,,726,726,,,726,,726,21,,21,726,21,21',
',21,21,21,21,21,726,21,,,,726,726,726,726,,726,726,726,726,,,,,726,726',
',21,,,,,726,,726,726,726,33,33,33,33,33,33,,,,33,33,,,,33,,33,33,33',
'33,33,33,33,,,,,,33,33,33,33,33,33,33,,,33,,,,,,33,33,33,33,33,33,33',
'33,33,33,33,33,,33,33,33,,33,33,33,33,33,756,756,756,756,756,756,756',
'756,756,756,756,,756,756,,,756,756,,33,,,33,,,33,33,,,33,,33,756,,756',
'33,756,756,,756,756,756,756,756,33,756,,,,33,33,33,33,,33,33,33,33,',
',,,33,33,,756,,,,,33,,33,33,33,962,962,962,962,962,962,,,,962,962,,',
',962,,962,962,962,962,962,962,962,,,,,,962,962,962,962,962,962,962,',
',962,,,,,,962,962,962,962,962,962,962,962,962,962,962,962,,962,962,962',
',962,962,962,962,962,751,751,751,751,751,751,751,751,751,751,751,,751',
'751,,,751,751,,962,,,962,,,962,962,,,962,,962,751,,751,962,751,751,',
'751,751,751,751,751,962,751,,,,962,962,962,962,,962,962,962,962,,,,',
'962,962,,751,,,,,962,,962,962,962,838,838,838,838,838,838,,,,838,838',
',,,838,,838,838,838,838,838,838,838,,,,,,838,838,838,838,838,838,838',
',826,838,826,826,826,,826,838,838,838,838,838,838,838,838,838,838,838',
'838,,838,838,838,,838,838,838,838,838,548,,548,548,548,,548,,826,,900',
',900,900,900,,900,826,,838,,,838,,,838,838,,,838,,838,,,,838,,548,,',
',,,,838,,548,900,,838,838,838,838,,838,838,838,838,,,,,838,838,,697',
',697,697,697,838,697,838,838,838,229,229,229,229,229,229,,,,229,229',
',,,229,,229,229,229,229,229,229,229,,,,,697,229,229,229,229,229,229',
'229,,697,229,,,467,,,229,229,229,229,229,229,229,229,229,229,229,229',
',229,229,229,,229,229,229,229,229,457,457,457,457,457,457,457,467,,457',
'457,467,467,,467,467,457,457,,229,,,229,,,229,229,,,229,,229,457,,457',
'229,457,457,,457,457,457,457,457,229,457,,,,229,229,229,229,,229,229',
'229,229,,,,,229,229,,828,,828,828,828,229,828,229,229,229,960,960,960',
'960,960,960,,,,960,960,,,,960,,960,960,960,960,960,960,960,,,,,828,960',
'960,960,960,960,960,960,,987,960,987,987,987,,987,960,960,960,960,960',
'960,960,960,960,960,960,960,,960,960,960,,960,960,960,960,960,458,951',
',951,951,951,,951,987,953,,953,953,953,,953,458,458,,960,,,960,,,960',
'960,,448,960,,960,458,,458,960,458,458,951,458,458,,,458,960,458,953',
',,960,960,960,960,,960,960,960,960,,,448,,960,960,448,448,,,,,960,,960',
'960,960,809,809,809,809,809,809,,,,809,809,,,,809,,809,809,809,809,809',
'809,809,,,,,,809,809,809,809,809,809,809,,,809,,,,,,809,809,809,809',
'809,809,809,809,809,809,809,809,,809,809,809,,809,809,809,809,809,459',
',,,,,,,,,,,,,,,459,459,,809,,,809,,,809,809,,,809,,809,459,,459,809',
'459,459,,459,459,,,459,809,459,,,,809,809,809,809,,809,809,809,809,',
',,,809,809,,,,,,,809,,809,809,809,323,323,323,323,323,323,,,,323,323',
',,,323,,323,323,323,323,323,323,323,,,,,,323,323,323,323,323,323,323',
',,323,,,,,,323,323,323,323,323,323,323,323,323,323,323,323,,323,323',
'323,,323,323,323,323,323,460,,,,,,,,,,,,,,,,460,460,,323,,,323,,,323',
'323,,,323,,323,460,,460,323,460,460,,460,460,,,460,323,460,,,,323,323',
'323,323,,323,323,323,323,,,,,323,323,,,,,,,323,,323,323,323,835,835',
'835,835,835,835,,,,835,835,,,,835,,835,835,835,835,835,835,835,,,,,',
'835,835,835,835,835,835,835,,,835,,,,,,835,835,835,835,835,835,835,835',
'835,835,835,835,,835,835,835,,835,835,835,835,835,470,470,470,470,470',
'470,470,470,,470,470,,,,,,470,470,,835,,,835,,,835,835,,,835,,835,470',
',470,835,470,470,,470,470,470,470,470,835,470,,,,835,835,835,835,,835',
'835,835,835,,,,,835,835,,,,,,,835,,835,835,835,834,834,834,834,834,834',
',,,834,834,,,,834,,834,834,834,834,834,834,834,,,,,,834,834,834,834',
'834,834,834,,,834,,,,,,834,834,834,834,834,834,834,834,834,834,834,834',
',834,834,834,,834,834,834,834,834,461,,,,,,,,,,,,,,,,461,461,,834,,',
'834,,,834,834,,,834,,834,461,,461,834,461,461,,461,461,,,461,834,461',
',,,834,834,834,834,,834,834,834,834,,,,,834,834,,,,,,,834,,834,834,834',
'650,650,650,650,650,650,,,,650,650,,,,650,,650,650,650,650,650,650,650',
',,,,,650,650,650,650,650,650,650,,,650,,,,,,650,650,650,650,650,650',
'650,650,650,650,650,650,,650,650,650,,650,650,650,650,650,469,469,469',
'469,469,469,469,,,469,469,,,,,,469,469,,650,,,650,,,650,650,,,650,,650',
'469,,469,650,469,469,,469,469,469,469,469,650,469,,,,650,650,650,650',
',650,650,650,650,,,,,650,650,,,,,,,650,,650,650,650,121,121,121,121',
'121,121,,,,121,121,,,,121,,121,121,121,121,121,121,121,,,,,,121,121',
'121,121,121,121,121,,,121,,,,,,121,121,121,121,121,121,121,121,121,121',
'121,121,,121,121,121,,121,121,121,121,121,447,447,447,447,447,447,447',
'447,447,447,447,,447,447,,,447,447,,121,,,121,,,121,121,,,121,,121,447',
',447,121,447,447,,447,447,447,447,447,121,447,,,,121,121,121,121,,121',
'121,121,121,,,,,121,121,,,,,,,121,,121,121,121,937,937,937,937,937,937',
',,,937,937,,,,937,,937,937,937,937,937,937,937,,,,,,937,937,937,937',
'937,937,937,,,937,,,,,,937,937,937,937,937,937,937,937,937,937,937,937',
',937,937,937,,937,937,937,937,937,462,462,462,462,462,462,462,,,462',
'462,,,,,,462,462,,937,,,937,,,937,937,,,937,,937,462,,462,937,462,462',
',462,462,462,462,462,937,462,,,,937,937,937,937,,937,937,937,937,,,',
',937,937,,,,,,,937,,937,937,937,206,206,206,206,206,206,,,,206,206,',
',,206,,206,206,206,206,206,206,206,,,,,,206,206,206,206,206,206,206',
',,206,,,,,,206,206,206,206,206,206,206,206,206,206,206,206,,206,206',
'206,,206,206,206,206,206,465,465,465,465,465,465,465,,,465,465,,,,,',
'465,465,,206,,,206,,,206,206,,,206,,206,465,,465,206,465,465,,465,465',
'465,465,465,206,465,,,,206,206,206,206,,206,206,206,206,,,,,206,206',
',,,,,,206,,206,206,206,496,496,496,496,496,496,,,,496,496,,,,496,,496',
'496,496,496,496,496,496,,,,,,496,496,496,496,496,496,496,,,496,,,,,',
'496,496,496,496,496,496,496,496,496,496,496,496,,496,496,496,,496,496',
'496,496,496,463,463,463,463,463,463,463,,,463,463,,,,,,463,463,,496',
',,496,,,496,496,,,496,,496,463,,463,496,463,463,,463,463,463,463,463',
'496,463,,,,496,496,496,496,,496,496,496,496,,,,,496,496,,,,,,,496,,496',
'496,496,741,741,741,741,741,741,,,,741,741,,,,741,,741,741,741,741,741',
'741,741,,,,,,741,741,741,741,741,741,741,,,741,,,,,,741,741,741,741',
'741,741,741,741,741,741,741,741,,741,741,741,,741,741,741,741,741,464',
'464,464,464,464,464,464,,,464,464,,,,,,464,464,,741,,,741,,,741,741',
',,741,,741,464,,464,741,464,464,,464,464,464,464,464,741,464,,,,741',
'741,741,741,,741,741,741,741,,,,,741,741,,,,,,,741,,741,741,741,801',
'801,801,801,801,801,,,,801,801,,,,801,,801,801,801,801,801,801,801,',
',,,,801,801,801,801,801,801,801,,,801,,,,,,801,801,801,801,801,801,801',
'801,801,801,801,801,,801,801,801,,801,801,801,801,801,446,446,446,446',
'446,446,446,446,446,446,446,,446,446,,,446,446,,801,,,801,,,801,801',
',,801,,801,446,,446,801,446,446,,446,446,446,446,446,801,446,,,,801',
'801,801,801,,801,801,801,801,,,,,801,801,,,,118,118,118,801,118,801',
'801,801,118,118,,,,118,,118,118,118,118,118,118,118,,,,,,118,118,118',
'118,118,118,118,,,118,,,,,,,118,,,118,118,118,118,118,118,118,118,,118',
'118,118,,118,118,118,118,118,466,466,466,466,466,466,466,,,466,466,',
',,,,466,466,,118,,,118,,,118,118,,,118,,,466,,466,118,466,466,,466,466',
'466,466,466,118,466,,,,118,118,118,118,,118,118,118,118,,,,,118,118',
',,,119,119,119,118,119,118,118,118,119,119,,,,119,,119,119,119,119,119',
'119,119,,,,,,119,119,119,119,119,119,119,,,119,,,,,,,119,,,119,119,119',
'119,119,119,119,119,,119,119,119,,119,119,119,119,119,455,,,,,,,,,,',
',,,,,455,455,,119,,,119,,,119,119,,,119,,,455,,455,119,455,455,,455',
'455,,,,119,,,,,119,119,119,119,,119,119,119,119,,,,,119,119,,,,,,,119',
',119,119,119,120,120,120,120,120,,,,120,120,,,,120,,120,120,120,120',
'120,120,120,,,,,,120,120,120,120,120,120,120,,,120,,,,,,120,120,,120',
'120,120,120,120,120,120,120,120,,120,120,120,,120,120,120,120,120,454',
',,,,,,,,,,,,,,,454,454,,120,,,120,,,120,120,,,120,,120,454,,454,120',
'454,454,,454,454,,,,120,,,,,120,120,120,120,,120,120,120,120,,,,,120',
'120,,,,207,207,207,120,207,120,120,120,207,207,,,,207,,207,207,207,207',
'207,207,207,,,,,,207,207,207,207,207,207,207,,,207,,,,,,,207,,,207,207',
'207,207,207,207,207,207,,207,207,207,,207,207,207,207,207,456,,,,,,',
',,,,,,,,,456,456,,207,,,207,,,207,207,,,207,,207,456,,,207,456,456,',
'456,456,,,,207,,,,,207,207,207,207,,207,207,207,207,,,,,207,207,,,,208',
'208,208,207,208,207,207,207,208,208,,,,208,,208,208,208,208,208,208',
'208,,,,,,208,208,208,208,208,208,208,,,208,,,,,,,208,,,208,208,208,208',
'208,208,208,208,,208,208,208,,208,208,208,208,208,,,,,,,,,,,,,,,,,,',
',208,,,208,,,208,208,,,208,,,,,,208,,,,,,,,,208,,,,,208,208,208,208',
',208,208,208,208,,,,,208,208,,,,209,209,209,208,209,208,208,208,209',
'209,,,,209,,209,209,209,209,209,209,209,,,,,,209,209,209,209,209,209',
'209,,,209,,,,,,,209,,,209,209,209,209,209,209,209,209,209,209,209,209',
',209,209,209,209,209,,,,,,,,,,,,,,,,,,,,209,,,209,,,209,209,,,209,,209',
',209,,209,,,209,,,,,,209,,,,,209,209,209,209,,209,209,209,209,,,,,209',
'209,,,,527,527,527,209,527,209,209,209,527,527,,,,527,,527,527,527,527',
'527,527,527,,,,,,527,527,527,527,527,527,527,,,527,,,,,,,527,,,527,527',
'527,527,527,527,527,527,527,527,527,527,,527,527,527,527,527,,,,,,,',
',,,,,,,,,,,,527,,,527,,,527,527,,,527,,,,,,527,,,527,,,,,,527,,,,,527',
'527,527,527,,527,527,527,527,,,,,527,527,,,,524,524,524,527,524,527',
'527,527,524,524,,,,524,,524,524,524,524,524,524,524,,,,,,524,524,524',
'524,524,524,524,,,524,,,,,,,524,,,524,524,524,524,524,524,524,524,524',
'524,524,524,,524,524,524,524,524,,,,,,,,,,,,,,,,,,,,524,,,524,,,524',
'524,,,524,,524,,,,524,,,524,,,,,,524,,,,,524,524,524,524,,524,524,524',
'524,,,,,524,524,,,,212,212,212,524,212,524,524,524,212,212,,,,212,,212',
'212,212,212,212,212,212,,,,,,212,212,212,212,212,212,212,,,212,,,,,',
',212,,,212,212,212,212,212,212,212,212,,212,212,212,,212,212,212,212',
'212,,,,,,,,,,,,,,,,,,,,212,,,212,,,212,212,,,212,,,,,,212,,,,,,,,,212',
',,,,212,212,212,212,,212,212,212,212,,,,,212,212,,,,213,213,213,212',
'213,212,212,212,213,213,,,,213,,213,213,213,213,213,213,213,,,,,,213',
'213,213,213,213,213,213,,,213,,,,,,,213,,,213,213,213,213,213,213,213',
'213,,213,213,213,,213,213,213,213,213,,,,,,,,,,,,,,,,,,,,213,,,213,',
',213,213,,,213,,213,,,,213,,,,,,,,,213,,,,,213,213,213,213,,213,213',
'213,213,,,,,213,213,,,,214,214,214,213,214,213,213,213,214,214,,,,214',
',214,214,214,214,214,214,214,,,,,,214,214,214,214,214,214,214,,,214',
',,,,,,214,,,214,214,214,214,214,214,214,214,,214,214,214,,214,214,214',
'214,214,,,,,,,,,,,,,,,,,,,,214,,,214,,,214,214,,,214,,,,,,214,,,,,,',
',,214,,,,,214,214,214,214,,214,214,214,214,,,,,214,214,,,,215,215,215',
'214,215,214,214,214,215,215,,,,215,,215,215,215,215,215,215,215,,,,',
',215,215,215,215,215,215,215,,,215,,,,,,,215,,,215,215,215,215,215,215',
'215,215,,215,215,215,,215,215,215,215,215,,,,,,,,,,,,,,,,,,,,215,,,215',
',,215,215,,,215,,,,,,215,,,,,,,,,215,,,,,215,215,215,215,,215,215,215',
'215,,,,,215,215,,,,216,216,216,215,216,215,215,215,216,216,,,,216,,216',
'216,216,216,216,216,216,,,,,,216,216,216,216,216,216,216,,,216,,,,,',
',216,,,216,216,216,216,216,216,216,216,,216,216,216,,216,216,216,216',
'216,,,,,,,,,,,,,,,,,,,,216,,,216,,,216,216,,,216,,,,,,216,,,,,,,,,216',
',,,,216,216,216,216,,216,216,216,216,,,,,216,216,,,,217,217,217,216',
'217,216,216,216,217,217,,,,217,,217,217,217,217,217,217,217,,,,,,217',
'217,217,217,217,217,217,,,217,,,,,,,217,,,217,217,217,217,217,217,217',
'217,,217,217,217,,217,217,217,217,217,,,,,,,,,,,,,,,,,,,,217,,,217,',
',217,217,,,217,,,,,,217,,,,,,,,,217,,,,,217,217,217,217,,217,217,217',
'217,,,,,217,217,217,,,656,656,656,217,656,217,217,217,656,656,,,,656',
',656,656,656,656,656,656,656,,,,,,656,656,656,656,656,656,656,,,656',
',,,,,,656,,,656,656,656,656,656,656,656,656,,656,656,656,,656,656,656',
'656,656,,,,,,,,,,,,,,,,,,,,656,,,656,,,656,656,,,656,,,,,,656,,,,,,',
',,656,,,,,656,656,656,656,,656,656,656,656,,,,,656,656,,,,662,662,662',
'656,662,656,656,656,662,662,,,,662,,662,662,662,662,662,662,662,,,,',
',662,662,662,662,662,662,662,,,662,,,,,,,662,,,662,662,662,662,662,662',
'662,662,,662,662,662,,662,662,,,662,,,,,,,,,,,,,,,,,,,,662,,,662,,,662',
'662,,,662,,,,,,,,,,,,,,,,,,,,662,662,662,662,,662,662,662,662,,,,,662',
'662,,,,518,518,518,662,518,662,662,662,518,518,,,,518,,518,518,518,518',
'518,518,518,,,,,,518,518,518,518,518,518,518,,,518,,,,,,,518,,,518,518',
'518,518,518,518,518,518,,518,518,518,,518,518,518,518,518,,,,,,,,,,',
',,,,,,,,,518,,,518,,,518,518,,,518,,,,,,518,,,,,,,,,518,,,,,518,518',
'518,518,,518,518,518,518,,,,,518,518,,,,514,514,514,518,514,518,518',
'518,514,514,,,,514,,514,514,514,514,514,514,514,,,,,,514,514,514,514',
'514,514,514,,,514,,,,,,,514,,,514,514,514,514,514,514,514,514,,514,514',
'514,,514,514,514,514,514,,,,,,,,,,,,,,,,,,,,514,,,514,,,514,514,,,514',
',,,,,514,,,,,,,,,514,,,,,514,514,514,514,,514,514,514,514,,,,,514,514',
',,,513,513,513,514,513,514,514,514,513,513,,,,513,,513,513,513,513,513',
'513,513,,,,,,513,513,513,513,513,513,513,,,513,,,,,,,513,,,513,513,513',
'513,513,513,513,513,,513,513,513,,513,513,513,513,513,,,,,,,,,,,,,,',
',,,,,513,,,513,,,513,513,,,513,,,,,,513,,,,,,,,,513,,,,,513,513,513',
'513,,513,513,513,513,,,,,513,513,,,,228,228,228,513,228,513,513,513',
'228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228,228,228,228',
'228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,,228,228,228',
',228,228,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,228,,,228,,',
',,,228,,,,,,,,,228,,,,,228,228,228,228,,228,228,228,228,,,,,228,228',
',,,510,510,510,228,510,228,228,228,510,510,,,,510,,510,510,510,510,510',
'510,510,,,,,,510,510,510,510,510,510,510,,,510,,,,,,,510,,,510,510,510',
'510,510,510,510,510,,510,510,510,,510,510,,,510,,,,,,,,,,,,,,,,,,,,510',
',,510,,,510,510,,,510,,,,,,,,,,,,,,,,,,,,510,510,510,510,,510,510,510',
'510,,,,,510,510,,,,231,231,231,510,231,510,510,510,231,231,,,,231,,231',
'231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,',
',231,,,231,231,231,231,231,231,231,231,,231,231,231,,231,231,231,231',
'231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,231,,,231,,,,,,231,,,,,,,,,231',
',,,,231,231,231,231,,231,231,231,231,,,,,231,231,,,,232,232,232,231',
'232,231,231,231,232,232,,,,232,,232,232,232,232,232,232,232,,,,,,232',
'232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232',
'232,,232,232,232,,232,232,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,',
',232,232,,,232,,,,,,232,,,,,,,,,232,,,,,232,232,232,232,,232,232,232',
'232,,,,,232,232,,,,233,233,233,232,233,232,232,232,233,233,,,,233,,233',
'233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,',
',233,,,233,233,233,233,233,233,233,233,,233,233,233,,233,233,233,233',
'233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,233,,,233,,,,,,233,,,,,,,,,233',
',,,,233,233,233,233,,233,233,233,233,,,,,233,233,,,,234,234,234,233',
'234,233,233,233,234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234',
'234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234,234,234',
'234,,234,234,234,,234,234,234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234,',
',234,234,,,234,,,,,,234,,,,,,,,,234,,,,,234,234,234,234,,234,234,234',
'234,,,,,234,234,,,,235,235,235,234,235,234,234,234,235,235,,,,235,,235',
'235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,',
',235,,,235,235,235,235,235,235,235,235,,235,235,235,,235,235,235,235',
'235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,235,,,235,,,,,,235,,,,,,,,,235',
',,,,235,235,235,235,,235,235,235,235,,,,,235,235,,,,236,236,236,235',
'236,235,235,235,236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236',
'236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236',
'236,,236,236,236,,236,236,236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,',
',236,236,,,236,,,,,,236,,,,,,,,,236,,,,,236,236,236,236,,236,236,236',
'236,,,,,236,236,,,,237,237,237,236,237,236,236,236,237,237,,,,237,,237',
'237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,',
',237,,,237,237,237,237,237,237,237,237,,237,237,237,,237,237,237,237',
'237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,237,,,237,,,,,,237,,,,,,,,,237',
',,,,237,237,237,237,,237,237,237,237,,,,,237,237,,,,238,238,238,237',
'238,237,237,237,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238',
'238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238',
'238,,238,238,238,,238,238,238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,',
',238,238,,,238,,,,,,238,,,,,,,,,238,,,,,238,238,238,238,,238,238,238',
'238,,,,,238,238,,,,239,239,239,238,239,238,238,238,239,239,,,,239,,239',
'239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,',
',239,,,239,239,239,239,239,239,239,239,,239,239,239,,239,239,239,239',
'239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,239,,,239,,,,,,239,,,,,,,,,239',
',,,,239,239,239,239,,239,239,239,239,,,,,239,239,,,,240,240,240,239',
'240,239,239,239,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240',
'240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240',
'240,,240,240,240,,240,240,240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,',
',240,240,,,240,,,,,,240,,,,,,,,,240,,,,,240,240,240,240,,240,240,240',
'240,,,,,240,240,,,,241,241,241,240,241,240,240,240,241,241,,,,241,,241',
'241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,',
',241,,,241,241,241,241,241,241,241,241,,241,241,241,,241,241,241,241',
'241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,241,,,241,,,,,,241,,,,,,,,,241',
',,,,241,241,241,241,,241,241,241,241,,,,,241,241,,,,242,242,242,241',
'242,241,241,241,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242',
'242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242',
'242,,242,242,242,,242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,',
',242,242,,,242,,,,,,242,,,,,,,,,242,,,,,242,242,242,242,,242,242,242',
'242,,,,,242,242,,,,243,243,243,242,243,242,242,242,243,243,,,,243,,243',
'243,243,243,243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,',
',243,,,243,243,243,243,243,243,243,243,,243,243,243,,243,243,243,243',
'243,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,243,,,243,,,,,,243,,,,,,,,,243',
',,,,243,243,243,243,,243,243,243,243,,,,,243,243,,,,244,244,244,243',
'244,243,243,243,244,244,,,,244,,244,244,244,244,244,244,244,,,,,,244',
'244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,244,244,244,244,244',
'244,,244,244,244,,244,244,244,244,244,,,,,,,,,,,,,,,,,,,,244,,,244,',
',244,244,,,244,,,,,,244,,,,,,,,,244,,,,,244,244,244,244,,244,244,244',
'244,,,,,244,244,,,,245,245,245,244,245,244,244,244,245,245,,,,245,,245',
'245,245,245,245,245,245,,,,,,245,245,245,245,245,245,245,,,245,,,,,',
',245,,,245,245,245,245,245,245,245,245,,245,245,245,,245,245,245,245',
'245,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,245,,,245,,,,,,245,,,,,,,,,245',
',,,,245,245,245,245,,245,245,245,245,,,,,245,245,,,,246,246,246,245',
'246,245,245,245,246,246,,,,246,,246,246,246,246,246,246,246,,,,,,246',
'246,246,246,246,246,246,,,246,,,,,,,246,,,246,246,246,246,246,246,246',
'246,,246,246,246,,246,246,246,246,246,,,,,,,,,,,,,,,,,,,,246,,,246,',
',246,246,,,246,,,,,,246,,,,,,,,,246,,,,,246,246,246,246,,246,246,246',
'246,,,,,246,246,,,,247,247,247,246,247,246,246,246,247,247,,,,247,,247',
'247,247,247,247,247,247,,,,,,247,247,247,247,247,247,247,,,247,,,,,',
',247,,,247,247,247,247,247,247,247,247,,247,247,247,,247,247,247,247',
'247,,,,,,,,,,,,,,,,,,,,247,,,247,,,247,247,,,247,,,,,,247,,,,,,,,,247',
',,,,247,247,247,247,,247,247,247,247,,,,,247,247,,,,248,248,248,247',
'248,247,247,247,248,248,,,,248,,248,248,248,248,248,248,248,,,,,,248',
'248,248,248,248,248,248,,,248,,,,,,,248,,,248,248,248,248,248,248,248',
'248,,248,248,248,,248,248,248,248,248,,,,,,,,,,,,,,,,,,,,248,,,248,',
',248,248,,,248,,,,,,248,,,,,,,,,248,,,,,248,248,248,248,,248,248,248',
'248,,,,,248,248,,,,249,249,249,248,249,248,248,248,249,249,,,,249,,249',
'249,249,249,249,249,249,,,,,,249,249,249,249,249,249,249,,,249,,,,,',
',249,,,249,249,249,249,249,249,249,249,,249,249,249,,249,249,249,249',
'249,,,,,,,,,,,,,,,,,,,,249,,,249,,,249,249,,,249,,,,,,249,,,,,,,,,249',
',,,,249,249,249,249,,249,249,249,249,,,,,249,249,,,,250,250,250,249',
'250,249,249,249,250,250,,,,250,,250,250,250,250,250,250,250,,,,,,250',
'250,250,250,250,250,250,,,250,,,,,,,250,,,250,250,250,250,250,250,250',
'250,,250,250,250,,250,250,250,250,250,,,,,,,,,,,,,,,,,,,,250,,,250,',
',250,250,,,250,,,,,,250,,,,,,,,,250,,,,,250,250,250,250,,250,250,250',
'250,,,,,250,250,,,,251,251,251,250,251,250,250,250,251,251,,,,251,,251',
'251,251,251,251,251,251,,,,,,251,251,251,251,251,251,251,,,251,,,,,',
',251,,,251,251,251,251,251,251,251,251,,251,251,251,,251,251,251,251',
'251,,,,,,,,,,,,,,,,,,,,251,,,251,,,251,251,,,251,,,,,,251,,,,,,,,,251',
',,,,251,251,251,251,,251,251,251,251,,,,,251,251,,,,252,252,252,251',
'252,251,251,251,252,252,,,,252,,252,252,252,252,252,252,252,,,,,,252',
'252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,252,252,252,252,252',
'252,,252,252,252,,252,252,252,252,252,,,,,,,,,,,,,,,,,,,,252,,,252,',
',252,252,,,252,,,,,,252,,,,,,,,,252,,,,,252,252,252,252,,252,252,252',
'252,,,,,252,252,,,,253,253,253,252,253,252,252,252,253,253,,,,253,,253',
'253,253,253,253,253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,',
',253,,,253,253,253,253,253,253,253,253,,253,253,253,,253,253,253,253',
'253,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,253,,,253,,,,,,253,,,,,,,,,253',
',,,,253,253,253,253,,253,253,253,253,,,,,253,253,,,,254,254,254,253',
'254,253,253,253,254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254',
'254,254,254,254,254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254',
'254,,254,254,254,,254,254,254,254,254,,,,,,,,,,,,,,,,,,,,254,,,254,',
',254,254,,,254,,,,,,254,,,,,,,,,254,,,,,254,254,254,254,,254,254,254',
'254,,,,,254,254,,,,255,255,255,254,255,254,254,254,255,255,,,,255,,255',
'255,255,255,255,255,255,,,,,,255,255,255,255,255,255,255,,,255,,,,,',
',255,,,255,255,255,255,255,255,255,255,,255,255,255,,255,255,255,255',
'255,,,,,,,,,,,,,,,,,,,,255,,,255,,,255,255,,,255,,,,,,255,,,,,,,,,255',
',,,,255,255,255,255,,255,255,255,255,,,,,255,255,,,,256,256,256,255',
'256,255,255,255,256,256,,,,256,,256,256,256,256,256,256,256,,,,,,256',
'256,256,256,256,256,256,,,256,,,,,,,256,,,256,256,256,256,256,256,256',
'256,,256,256,256,,256,256,256,256,256,,,,,,,,,,,,,,,,,,,,256,,,256,',
',256,256,,,256,,,,,,256,,,,,,,,,256,,,,,256,256,256,256,,256,256,256',
'256,,,,,256,256,,,,673,673,673,256,673,256,256,256,673,673,,,,673,,673',
'673,673,673,673,673,673,,,,,,673,673,673,673,673,673,673,,,673,,,,,',
',673,,,673,673,673,673,673,673,673,673,,673,673,673,,673,673,,,673,',
',,,,,,,,,,,,,,,,,,673,,,673,,,673,673,,,673,,,,,,,,,,,,,,,,,,,,673,673',
'673,673,,673,673,673,673,,,,,673,673,,,,504,504,504,673,504,673,673',
'673,504,504,,,,504,,504,504,504,504,504,504,504,,,,,,504,504,504,504',
'504,504,504,,,504,,,,,,,504,,,504,504,504,504,504,504,504,504,504,504',
'504,504,,504,504,504,504,504,,,,,,,,,,,,,,,,,,,,504,,,504,,,504,504',
',,504,,504,,504,,504,,,504,,,,,,504,,,,,504,504,504,504,,504,504,504',
'504,,,,,504,504,,,,263,263,263,504,263,504,504,504,263,263,,,,263,,263',
'263,263,263,263,263,263,,,,,,263,263,263,263,263,263,263,,,263,,,,,',
',263,,,263,263,263,263,263,263,263,263,263,263,263,263,,263,263,263',
'263,263,,,,,,,,,,,,,,,,,,,,263,,,263,,,263,263,,,263,,263,,263,,263',
',,263,,,,,,263,,,,,263,263,263,263,,263,263,263,263,,,,,263,263,,,,264',
'264,264,263,264,263,263,263,264,264,,,,264,,264,264,264,264,264,264',
'264,,,,,,264,264,264,264,264,264,264,,,264,,,,,,,264,,,264,264,264,264',
'264,264,264,264,264,264,264,264,,264,264,264,264,264,,,,,,,,,,,,,,,',
',,,,264,,,264,,,264,264,,,264,,264,,264,,264,,,264,,,,,,264,,,,,264',
'264,264,264,,264,264,264,264,,,,,264,264,,,,272,272,272,264,272,264',
'264,264,272,272,,,,272,,272,272,272,272,272,272,272,,,,,,272,272,272',
'272,272,272,272,,,272,,,,,,,272,,,272,272,272,272,272,272,272,272,272',
'272,272,272,,272,272,272,272,272,,,,,,,,,,,,,,,,,,,,272,,,272,,,272',
'272,,,272,,272,,272,,272,,,272,,,,,,272,,,,,272,272,272,272,,272,272',
'272,272,,,,,272,272,272,,,502,502,502,272,502,272,272,272,502,502,,',
',502,,502,502,502,502,502,502,502,,,,,,502,502,502,502,502,502,502,',
',502,,,,,,,502,,,502,502,502,502,502,502,502,502,,502,502,502,,502,502',
',,502,,,,,,,,,,,,,,,,,,,,502,,,502,,,502,502,,,502,,,,,,,,,,,,,,,,,',
',,502,502,502,502,,502,502,502,502,,,,,502,502,,,,678,678,678,502,678',
'502,502,502,678,678,,,,678,,678,678,678,678,678,678,678,,,,,,678,678',
'678,678,678,678,678,,,678,,,,,,,678,,,678,678,678,678,678,678,678,678',
',678,678,678,,678,678,678,678,678,,,,,,,,,,,,,,,,,,,,678,,,678,,,678',
'678,,,678,,678,,,,678,,,,,,,,,678,,,,,678,678,678,678,,678,678,678,678',
',,,,678,678,,,,279,279,279,678,279,678,678,678,279,279,,,,279,,279,279',
'279,279,279,279,279,,,,,,279,279,279,279,279,279,279,,,279,,,,,,,279',
',,279,279,279,279,279,279,279,279,,279,279,279,,279,279,279,279,279',
',,,,,,,,,,,,,,,,,,,279,,,279,,,279,279,,,279,,,,,,279,,,,,,,,,279,,',
',,279,279,279,279,,279,279,279,279,,,,,279,279,,,,881,881,881,279,881',
'279,279,279,881,881,,,,881,,881,881,881,881,881,881,881,,,,,,881,881',
'881,881,881,881,881,,,881,,,,,,,881,,,881,881,881,881,881,881,881,881',
',881,881,881,,881,881,,,881,,,,,,,,,,,,,,,,,,,,881,,,881,,,881,881,',
',881,,,,,,,,,,,,,,,,,,,,881,881,881,881,,881,881,881,881,,,,,881,881',
',,,281,281,281,881,281,881,881,881,281,281,,,,281,,281,281,281,281,281',
'281,281,,,,,,281,281,281,281,281,281,281,,,281,,,,,,,281,,,281,281,281',
'281,281,281,281,281,,281,281,281,,281,281,281,281,281,,,,,,,,,,,,,,',
',,,,,281,,,281,,,281,281,,,281,,,,,,281,,,,,,,,,281,,,,,281,281,281',
'281,,281,281,281,281,,,,,281,281,,,,283,283,283,281,283,281,281,281',
'283,283,,,,283,,283,283,283,283,283,283,283,,,,,,283,283,283,283,283',
'283,283,,,283,,,,,,,283,,,283,283,283,283,283,283,283,283,,283,283,283',
',283,283,283,283,283,,,,,,,,,,,,,,,,,,,,283,,,283,,,283,283,,,283,,',
',,,283,,,,,,,,,283,,,,,283,283,283,283,,283,283,283,283,,,,,283,283',
',,,284,284,284,283,284,283,283,283,284,284,,,,284,,284,284,284,284,284',
'284,284,,,,,,284,284,284,284,284,284,284,,,284,,,,,,,284,,,284,284,284',
'284,284,284,284,284,,284,284,284,,284,284,284,284,284,,,,,,,,,,,,,,',
',,,,,284,,,284,,,284,284,,,284,,,,,,284,,,,,,,,,284,,,,,284,284,284',
'284,,284,284,284,284,,,,,284,284,,,,,,,284,,284,284,284,494,494,494',
'494,494,,,,494,494,,,,494,,494,494,494,494,494,494,494,,,,,,494,494',
'494,494,494,494,494,,,494,,,,,,494,494,494,494,494,494,494,494,494,494',
'494,494,,494,494,494,,494,494,494,494,494,,,,,,,,,,,,,,,,,,,,494,,,494',
',,494,494,,,494,,494,,,,494,,,,,,,,,494,,,,,494,494,494,494,,494,494',
'494,494,,,,,494,494,,,,,,494,494,,494,494,494,289,289,289,289,289,,',
',289,289,,,,289,,289,289,289,289,289,289,289,,,,,,289,289,289,289,289',
'289,289,,,289,,,,,,289,289,,289,289,289,289,289,289,289,289,289,,289',
'289,289,,289,289,289,289,289,,,,,,,,,,,,,,,,,,,,289,,,289,,,289,289',
',,289,,289,,,,289,,,,,,,,,289,,,,,289,289,289,289,,289,289,289,289,',
',,,289,289,,,,869,869,869,289,869,289,289,289,869,869,,,,869,,869,869',
'869,869,869,869,869,,,,,,869,869,869,869,869,869,869,,,869,,,,,,,869',
',,869,869,869,869,869,869,869,869,,869,869,869,,869,869,,,869,,,,,,',
',,,,,,,,,,,,,869,,,869,,,869,869,,,869,,,,,,,,,,,,,,,,,,,,869,869,869',
'869,,869,869,869,869,,,,,869,869,,,,489,489,489,869,489,869,869,869',
'489,489,,,,489,,489,489,489,489,489,489,489,,,,,,489,489,489,489,489',
'489,489,,,489,,,,,,,489,,,489,489,489,489,489,489,489,489,,489,489,489',
',489,489,489,489,489,,,,,,,,,,,,,,,,,,,,489,,,489,,,489,489,,,489,,',
',,,489,,,,,,,,,489,,,,,489,489,489,489,,489,489,489,489,,,,,489,489',
',,,487,487,487,489,487,489,489,489,487,487,,,,487,,487,487,487,487,487',
'487,487,,,,,,487,487,487,487,487,487,487,,,487,,,,,,,487,,,487,487,487',
'487,487,487,487,487,487,487,487,487,,487,487,487,487,487,,,,,,,,,,,',
',,,,,,,,487,,,487,,,487,487,,,487,,,,487,,487,,,487,,,,,,487,,,,,487',
'487,487,487,,487,487,487,487,,,,,487,487,,,,485,485,485,487,485,487',
'487,487,485,485,,,,485,,485,485,485,485,485,485,485,,,,,,485,485,485',
'485,485,485,485,,,485,,,,,,,485,,,485,485,485,485,485,485,485,485,485',
'485,485,485,,485,485,485,485,485,,,,,,,,,,,,,,,,,,,,485,,,485,,,485',
'485,,,485,,485,,485,,485,,,485,,,,,,485,,,,,485,485,485,485,,485,485',
'485,485,,,,,485,485,,,,,,,485,,485,485,485,5,5,5,5,5,,,,5,5,,,,5,,5',
'5,5,5,5,5,5,,,,,,5,5,5,5,5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,,5,5',
'5,,5,5,5,5,5,,,,,,,,,,,,,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,,5,,',
',,5,5,5,5,,5,5,5,5,,,,,5,5,,,,297,297,297,5,297,5,5,5,297,297,,,,297',
',297,297,297,297,297,297,297,,,,,,297,297,297,297,297,297,297,,,297',
',,,,,,297,,,297,297,297,297,297,297,297,297,,297,297,297,,297,297,,',
'297,,,,,,,,,,,,,,,,,,,,297,,,297,,,297,297,,,297,,,1008,,1008,1008,1008',
'1008,1008,,,,,,,,,1008,,297,297,297,297,,297,297,297,297,,,,,297,297',
',,,297,,1008,297,,297,297,297,855,855,855,,855,1008,1008,,855,855,1008',
',,855,,855,855,855,855,855,855,855,,,,,,855,855,855,855,855,855,855',
',,855,,,,,,,855,,,855,855,855,855,855,855,855,855,,855,855,855,,855',
'855,855,855,855,,,,,,,,,,,,,,,,,,,,855,,,855,,,855,855,,,855,,,,,,855',
',,,,,,,,855,,,,,855,855,855,855,,855,855,855,855,,,,,855,855,,,,854',
'854,854,855,854,855,855,855,854,854,,,,854,,854,854,854,854,854,854',
'854,,,,,,854,854,854,854,854,854,854,,,854,,,,,,,854,,,854,854,854,854',
'854,854,854,854,854,854,854,854,,854,854,854,854,854,,,,,,,,,,,,,,,',
',,,,854,,,854,,,854,854,,,854,,,,854,,854,,,854,,,,,,854,,,,,854,854',
'854,854,,854,854,854,854,,,,,854,854,,,,695,695,695,854,695,854,854',
'854,695,695,,,,695,,695,695,695,695,695,695,695,,,,,,695,695,695,695',
'695,695,695,,,695,,,,,,,695,,,695,695,695,695,695,695,695,695,,695,695',
'695,,695,695,695,695,695,,,,,,,,,,,,,,,,,,,,695,,,695,,,695,695,,,695',
',,,,,695,,,,,,,,,695,,,,,695,695,695,695,,695,695,695,695,,,,,695,695',
',,,445,445,445,695,445,695,695,695,445,445,,,,445,,445,445,445,445,445',
'445,445,,,,,,445,445,445,445,445,445,445,,,445,,,,,,,445,,,445,445,445',
'445,445,445,445,445,,445,445,445,,445,445,445,445,445,,,,,,,,,,,,,,',
',,,,,445,,,445,,,445,445,,,445,,,,,,445,,,,,,,,,445,,,,,445,445,445',
'445,,445,445,445,445,,,,,445,445,,,,444,444,444,445,444,445,445,445',
'444,444,,,,444,,444,444,444,444,444,444,444,,,,,,444,444,444,444,444',
'444,444,,,444,,,,,,,444,,,444,444,444,444,444,444,444,444,,444,444,444',
',444,444,444,444,444,,,,,,,,,,,,,,,,,,,,444,,,444,,,444,444,,,444,,',
',,,444,,,,,,,,,444,,,,,444,444,444,444,,444,444,444,444,,,,,444,444',
',,,443,443,443,444,443,444,444,444,443,443,,,,443,,443,443,443,443,443',
'443,443,,,,,,443,443,443,443,443,443,443,,,443,,,,,,,443,,,443,443,443',
'443,443,443,443,443,,443,443,443,,443,443,443,443,443,,,,,,,,,,,,,,',
',,,,,443,,,443,,,443,443,,,443,,,,,,443,,,,,,,,,443,,,,,443,443,443',
'443,,443,443,443,443,,,,,443,443,,,,441,441,441,443,441,443,443,443',
'441,441,,,,441,,441,441,441,441,441,441,441,,,,,,441,441,441,441,441',
'441,441,,,441,,,,,,,441,,,441,441,441,441,441,441,441,441,441,441,441',
'441,,441,441,441,441,441,,,,,,,,,,,,,,,,,,,,441,,,441,,,441,441,,,441',
',441,,441,,441,,,441,,,,,,441,,,,,441,441,441,441,,441,441,441,441,',
',,,441,441,,,,837,837,837,441,837,441,441,441,837,837,,,,837,,837,837',
'837,837,837,837,837,,,,,,837,837,837,837,837,837,837,,,837,,,,,,,837',
',,837,837,837,837,837,837,837,837,,837,837,837,,837,837,837,837,837',
',,,,,,,,,,,,,,,,,,,837,,,837,,,837,837,,,837,,837,,,,837,,,,,,,,,837',
',,,,837,837,837,837,,837,837,837,837,,,,,837,837,,,,314,314,314,837',
'314,837,837,837,314,314,,,,314,,314,314,314,314,314,314,314,,,,,,314',
'314,314,314,314,314,314,,,314,,,,,,,314,,,314,314,314,314,314,314,314',
'314,,314,314,314,,314,314,,,314,,,,,,,,,,,,,,,,,,,,314,,,314,,,314,314',
',,314,,,,,,,,,,,,,,,,,,,,314,314,314,314,,314,314,314,314,,,,,314,314',
',,,832,832,832,314,832,314,314,314,832,832,,,,832,,832,832,832,832,832',
'832,832,,,,,,832,832,832,832,832,832,832,,,832,,,,,,,832,,,832,832,832',
'832,832,832,832,832,,832,832,832,,832,832,832,832,832,,,,,,,,,,,,,,',
',,,,,832,,,832,,,832,832,,,832,,,,,,832,,,,,,,,,832,,,,,832,832,832',
'832,,832,832,832,832,,,,,832,832,,,,322,322,322,832,322,832,832,832',
'322,322,,,,322,,322,322,322,322,322,322,322,,,,,,322,322,322,322,322',
'322,322,,,322,,,,,,,322,,,322,322,322,322,322,322,322,322,,322,322,322',
',322,322,322,322,322,,,,,,,,,,,,,,,,,,,,322,,,322,322,,322,322,,,322',
',,,,,322,,,,,,,,,322,,,,,322,322,322,322,,322,322,322,322,,,,,322,322',
',,,63,63,63,322,63,322,322,322,63,63,,,,63,,63,63,63,63,63,63,63,,,',
',,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63,63,63,63,,63,63',
'63,,63,63,63,63,63,,,,,,,,,,,,,,,,,,,,63,,,63,,,63,63,,,63,,,,,,63,',
',,,,,,,63,,,,,63,63,63,63,,63,63,63,63,,,,,63,63,,,,375,375,375,63,375',
'63,63,63,375,375,,,,375,,375,375,375,375,375,375,375,,,,,,375,375,375',
'375,375,375,375,,,375,,,,,,,375,,,375,375,375,375,375,375,375,375,,375',
'375,375,,375,375,375,375,375,,,,,,,,,,,,,,,,,,,,375,,,375,,,375,375',
',,375,,,,,,375,,,,,,,,,375,,,,,375,375,375,375,,375,375,375,375,,,,',
'375,375,,,,359,359,359,375,359,375,375,375,359,359,,,,359,,359,359,359',
'359,359,359,359,,,,,,359,359,359,359,359,359,359,,,359,,,,,,,359,,,359',
'359,359,359,359,359,359,359,,359,359,359,,359,359,359,359,359,,,,,,',
',,,,,,,,,,,,,359,,,359,,,359,359,,,359,,,,,,359,,,,,,,,,359,,,,,359',
'359,359,359,,359,359,359,359,,,,,359,359,,,,750,750,750,359,750,359',
'359,359,750,750,,,,750,,750,750,750,750,750,750,750,,,,,,750,750,750',
'750,750,750,750,,,750,,,,,,,750,,,750,750,750,750,750,750,750,750,,750',
'750,750,,750,750,750,750,750,,,,,,,,,,,,,,,,,,,,750,,,750,,,750,750',
',,750,,,,,,750,,,,,,,,,750,,,,,750,750,750,750,,750,750,750,750,,,,',
'750,750,,,,752,752,752,750,752,750,750,750,752,752,,,,752,,752,752,752',
'752,752,752,752,,,,,,752,752,752,752,752,752,752,,,752,,,,,,,752,,,752',
'752,752,752,752,752,752,752,,752,752,752,,752,752,752,752,752,,,,,,',
',,,,,,,,,,,,,752,,,752,,,752,752,,,752,,,,,,752,,,,,,,,,752,,,,,752',
'752,752,752,,752,752,752,752,,,,,752,752,,,,616,616,616,752,616,752',
'752,752,616,616,,,,616,,616,616,616,616,616,616,616,,,,,,616,616,616',
'616,616,616,616,,,616,,,,,,,616,,,616,616,616,616,616,616,616,616,,616',
'616,616,,616,616,616,616,616,,,,,,,,,,,,,,,,,,,,616,,,616,,,616,616',
',,616,,616,,,,616,,,,,,,,,616,,,,,616,616,616,616,,616,616,616,616,',
',,,616,616,,,,620,620,620,616,620,616,616,616,620,620,,,,620,,620,620',
'620,620,620,620,620,,,,,,620,620,620,620,620,620,620,,,620,,,,,,,620',
',,620,620,620,620,620,620,620,620,620,620,620,620,,620,620,620,620,620',
',,,,,,,,,,,,,,,,,,,620,,,620,,,620,620,,,620,,620,,620,,620,,,620,,',
',,,620,,,,,620,620,620,620,,620,620,620,620,,,,,620,620,,,,621,621,621',
'620,621,620,620,620,621,621,,,,621,,621,621,621,621,621,621,621,,,,',
',621,621,621,621,621,621,621,,,621,,,,,,,621,,,621,621,621,621,621,621',
'621,621,621,621,621,621,,621,621,621,621,621,,,,,,,,,,,,,,,,,,,,621',
',,621,,,621,621,,,621,,,,621,,621,,,621,,,,,,621,,,,,621,621,621,621',
',621,621,621,621,,,,,621,621,,,,622,622,622,621,622,621,621,621,622',
'622,,,,622,,622,622,622,622,622,622,622,,,,,,622,622,622,622,622,622',
'622,,,622,,,,,,,622,,,622,622,622,622,622,622,622,622,,622,622,622,',
'622,622,622,622,622,,,,,,,,,,,,,,,,,,,,622,,,622,,,622,622,,,622,,,',
',,622,,,,,,,,,622,,,,,622,622,622,622,,622,622,622,622,,,,,622,622,',
',,623,623,623,622,623,622,622,622,623,623,,,,623,,623,623,623,623,623',
'623,623,,,,,,623,623,623,623,623,623,623,,,623,,,,,,,623,,,623,623,623',
'623,623,623,623,623,,623,623,623,,623,623,623,623,623,,,,,,,,,,,,,,',
',,,,,623,,,623,,,623,623,,,623,,,,,,623,,,,,,,,,623,,,,,623,623,623',
'623,,623,623,623,623,,,,,623,623,,,,978,978,978,623,978,623,623,623',
'978,978,,,,978,,978,978,978,978,978,978,978,,,,,,978,978,978,978,978',
'978,978,,,978,,,,,,,978,,,978,978,978,978,978,978,978,978,978,978,978',
'978,,978,978,978,978,978,,,,,,,,,,,,,,,,,,,,978,,,978,,,978,978,,,978',
',978,,978,,978,,,978,,,,,,978,,,,,978,978,978,978,,978,978,978,978,',
',,,978,978,,,,627,627,627,978,627,978,978,978,627,627,,,,627,,627,627',
'627,627,627,627,627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,,627',
',,627,627,627,627,627,627,627,627,,627,627,627,,627,627,627,627,627',
',,,,,,,,,,,,,,,,,,,627,,,627,,,627,627,,,627,,,,,,627,,,,,,,,,627,,',
',,627,627,627,627,,627,627,627,627,,,,,627,627,,,,20,20,20,627,20,627',
'627,627,20,20,,,,20,,20,20,20,20,20,20,20,,,,,,20,20,20,20,20,20,20',
',,20,,,,,,,20,,,20,20,20,20,20,20,20,20,,20,20,20,,20,20,20,20,20,,',
',,,,,,,,,,,,,,,,,20,,,20,,,20,20,,,20,,,,,,20,,,,,,,,,20,,,,,20,20,20',
'20,,20,20,20,20,,,,,20,20,,,,582,582,582,20,582,20,20,20,582,582,,,',
'582,,582,582,582,582,582,582,582,,,,,,582,582,582,582,582,582,582,,',
'582,,,,,,,582,,,582,582,582,582,582,582,582,582,582,582,582,582,,582',
'582,582,582,582,,,,,,,,,,,,,,,,,,,,582,,,582,,,582,582,,,582,,582,,582',
',582,,,582,,,,,,582,,,,,582,582,582,582,,582,582,582,582,,,,,582,582',
',,,628,628,628,582,628,582,582,582,628,628,,,,628,,628,628,628,628,628',
'628,628,,,,,,628,628,628,628,628,628,628,,,628,,,,,,,628,,,628,628,628',
'628,628,628,628,628,,628,628,628,,628,628,628,628,628,,,,,,,,,,,,,,',
',,,,,628,,,628,,,628,628,,,628,,,,,,628,,,,,,,,,628,,,,,628,628,628',
'628,,628,628,628,628,,,,,628,628,,,,572,572,572,628,572,628,628,628',
'572,572,,,,572,,572,572,572,572,572,572,572,,,,,,572,572,572,572,572',
'572,572,,,572,,,,,,,572,,,572,572,572,572,572,572,572,572,572,572,572',
'572,,572,572,572,572,572,,,,,,,,,,,,,,,,,,,,572,,,572,,,572,572,,,572',
',572,,572,,572,,,572,,,,,,572,,,,,572,572,572,572,,572,572,572,572,',
',,,572,572,,,,571,571,571,572,571,572,572,572,571,571,,,,571,,571,571',
'571,571,571,571,571,,,,,,571,571,571,571,571,571,571,,,571,,,,,,,571',
',,571,571,571,571,571,571,571,571,,571,571,571,,571,571,571,571,571',
',,,,,,,,,,,,,,,,,,,571,,,571,,,571,571,,,571,,571,,,,571,,,,,,,,,571',
',,,,571,571,571,571,,571,571,571,571,,,,,571,571,,,,29,29,29,571,29',
'571,571,571,29,29,,,,29,,29,29,29,29,29,29,29,,,,,,29,29,29,29,29,29',
'29,,,29,,,,,,,29,,,29,29,29,29,29,29,29,29,29,29,29,29,,29,29,29,29',
'29,,,,,,,,,,,,,,,,,,,,29,,,29,,,29,29,,,29,,29,,29,,29,,,29,,,,,,29',
',,,,29,29,29,29,,29,29,29,29,,,,,29,29,,,,30,30,30,29,30,29,29,29,30',
'30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30,,,,,,',
'30,,,30,30,30,30,30,30,30,30,30,30,30,30,,30,30,30,30,30,,,,,,,,,,,',
',,,,,,,,30,,,30,,,30,30,,,30,,30,,30,,30,,,30,,,,,,30,,,,,30,30,30,30',
',30,30,30,30,,,,,30,30,,,,31,31,31,30,31,30,30,30,31,31,,,,31,,31,31',
'31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31',
'31,31,31,31,31,31,31,31,,31,31,31,31,31,,,,,,,,,,,,,,,,,,,,31,,,31,',
',31,31,,,31,,31,,31,,31,,,31,,,,,,31,,,,,31,31,31,31,,31,31,31,31,,',
',,31,31,,,,34,34,34,31,34,31,31,31,34,34,,,,34,,34,34,34,34,34,34,34',
',,,,,34,34,34,34,34,34,34,,,34,,,,,,,34,,,34,34,34,34,34,34,34,34,,34',
'34,34,,34,34,,,34,,,,,,,,,,,,,,,,,,,,34,,,34,,,34,34,,,34,,34,,,,,,',
',,,,,,,,,,,34,34,34,34,,34,34,34,34,,,,,34,34,,,,35,35,35,34,35,34,34',
'34,35,35,,,,35,,35,35,35,35,35,35,35,,,,,,35,35,35,35,35,35,35,,,35',
',,,,,,35,,,35,35,35,35,35,35,35,35,,35,35,35,,35,35,,,35,,,,,,,,,,,',
',,,,,,,,35,,,35,,,35,35,,,35,,,864,,864,864,864,864,864,,,,,,,,,864',
',35,35,35,35,,35,35,35,35,,,,,35,35,,,,35,,864,35,,35,35,35,631,631',
'631,,631,864,864,,631,631,864,,,631,,631,631,631,631,631,631,631,,,',
',,631,631,631,631,631,631,631,,,631,,,,,,,631,,,631,631,631,631,631',
'631,631,631,,631,631,631,,631,631,631,631,631,,,,,,,,,,,,,,,,,,,,631',
',,631,,,631,631,,,631,,,,,,631,,,,,,,,,631,,,,,631,631,631,631,,631',
'631,631,631,,,,,631,631,,,,632,632,632,631,632,631,631,631,632,632,',
',,632,,632,632,632,632,632,632,632,,,,,,632,632,632,632,632,632,632',
',,632,,,,,,,632,,,632,632,632,632,632,632,632,632,,632,632,632,,632',
'632,632,632,632,,,,,,,,,,,,,,,,,,,,632,,,632,,,632,632,,,632,,,,,,632',
',,,,,,,,632,,,,,632,632,632,632,,632,632,632,632,,,,,632,632,,,,42,42',
'42,632,42,632,632,632,42,42,,,,42,,42,42,42,42,42,42,42,,,,,,42,42,42',
'42,42,42,42,,,42,,,,,,,42,,,42,42,42,42,42,42,42,42,,42,42,42,,42,42',
'42,42,42,,,,,,,,,,,,,,,,,,,,42,,,42,,,42,42,,,42,,,,,,42,,,,,,,,,42',
',,,,42,42,42,42,,42,42,42,42,,,,,42,42,,,,43,43,43,42,43,42,42,42,43',
'43,,,,43,,43,43,43,43,43,43,43,,,,,,43,43,43,43,43,43,43,,,43,,,,,,',
'43,,,43,43,43,43,43,43,43,43,,43,43,43,,43,43,43,43,43,,,,,,,,,,,,,',
',,,,,,43,,,43,,,43,43,,,43,,,,,,43,,,,,,,,,43,,,,,43,43,43,43,,43,43',
'43,43,,,,,43,43,,,,44,44,44,43,44,43,43,43,44,44,,,,44,,44,44,44,44',
'44,44,44,,,,,,44,44,44,44,44,44,44,,,44,,,,,,,44,,,44,44,44,44,44,44',
'44,44,,44,44,44,,44,44,44,44,44,,,,,,,,,,,,,,,,,,,,44,,,44,,,44,44,',
',44,,,,,,44,,,,,,,,,44,,,,,44,44,44,44,,44,44,44,44,,,,,44,44,,,,59',
'59,59,44,59,44,44,44,59,59,,,,59,,59,59,59,59,59,59,59,,,,,,59,59,59',
'59,59,59,59,,,59,,,,,,,59,,,59,59,59,59,59,59,59,59,59,59,59,59,,59',
'59,59,59,59,,,,,,,,,,,,,,,,,,,,59,,,59,,,59,59,,,59,,59,,,,59,,,59,',
',,,,59,,,,,59,59,59,59,,59,59,59,59,,,,,59,59,,,,60,60,60,59,60,59,59',
'59,60,60,,,,60,,60,60,60,60,60,60,60,,,,,,60,60,60,60,60,60,60,,,60',
',,,,,,60,,,60,60,60,60,60,60,60,60,60,60,60,60,,60,60,60,60,60,,,,,',
',,,,,,,,,,,,,,60,,,60,,,60,60,,,60,,,,,,60,,,60,,,,,,60,,,,,60,60,60',
'60,,60,60,60,60,,,,,60,60,,,,551,551,551,60,551,60,60,60,551,551,,,',
'551,,551,551,551,551,551,551,551,,,,,,551,551,551,551,551,551,551,,',
'551,,,,,,,551,,,551,551,551,551,551,551,551,551,,551,551,551,,551,551',
'551,551,551,,,,,,,,,,,,,,,,,,,,551,,,551,,,551,551,,,551,,,,,,551,,',
',,,,,,551,,,,,551,551,551,551,,551,551,551,551,,,,,551,551,,,,64,64',
'64,551,64,551,551,551,64,64,,,,64,,64,64,64,64,64,64,64,,,,,,64,64,64',
'64,64,64,64,,,64,,,,,,,64,,,64,64,64,64,64,64,64,64,,64,64,64,,64,64',
'64,64,64,,,,,,,,,,,,,,,,,,,,64,,,64,,,64,64,,,64,,,,,,64,,,,,,,,,64',
',,,,64,64,64,64,,64,64,64,64,,,,,64,64,,,,67,67,67,64,67,64,64,64,67',
'67,,,,67,,67,67,67,67,67,67,67,,,,,,67,67,67,67,67,67,67,,,67,,,,,,',
'67,,,67,67,67,67,67,67,67,67,,67,67,67,,67,67,67,67,67,,,,,,,,,,,,,',
',,,,,,67,,,67,,,67,67,,,67,,,,,,67,,,,,,,,,67,,,,,67,67,67,67,,67,67',
'67,67,,,,,67,67,67,,,,,67,67,,67,67,67,68,68,68,,68,,,,68,68,,,,68,',
'68,68,68,68,68,68,68,,,,,,68,68,68,68,68,68,68,,,68,,,,,,,68,,,68,68',
'68,68,68,68,68,68,,68,68,68,,68,68,,,68,,,,,,,,,,,,,,,,,,,,68,,,68,',
',68,68,,,68,,68,,,,,,,,,,,,,,,,,,68,68,68,68,,68,68,68,68,,,,,68,68',
',,,69,69,69,68,69,68,68,68,69,69,,,,69,,69,69,69,69,69,69,69,,,,,,69',
'69,69,69,69,69,69,,,69,,,,,,,69,,,69,69,69,69,69,69,69,69,,69,69,69',
',69,69,,,69,,,,,,,,,,,,,,,,,69,,,69,,,69,,,69,69,,,69,,,,,,,,,,,,,,',
',,,,,69,69,69,69,,69,69,69,69,,,,,69,69,,,,70,70,70,69,70,69,69,69,70',
'70,,,,70,,70,70,70,70,70,70,70,,,,,,70,70,70,70,70,70,70,,,70,,,,,,',
'70,,,70,70,70,70,70,70,70,70,,70,70,70,,70,70,,,70,,,,,,,,,,,,,,,,,',
',,70,,,70,,,70,70,,,70,,,890,,890,890,890,890,890,,,,,,,,,890,,70,70',
'70,70,,70,70,70,70,,,,,70,70,,,,,,890,70,,70,70,70,111,111,111,111,111',
'890,890,,111,111,890,,,111,,111,111,111,111,111,111,111,,,,,,111,111',
'111,111,111,111,111,,,111,,,,,,111,111,111,111,111,111,111,111,111,111',
'111,111,,111,111,111,,111,111,111,111,111,,,,,,,,,,,,,,,,,,,,111,,,111',
',,111,111,,,111,,111,,,,111,,,,,,,,,111,,,,,111,111,111,111,,111,111',
'111,111,,,,,111,111,,,,,,111,111,,111,111,111,116,116,116,,116,,,,116',
'116,,,,116,,116,116,116,116,116,116,116,,,,,,116,116,116,116,116,116',
'116,,,116,,,,,,,116,,,116,116,116,116,116,116,116,116,,116,116,116,',
'116,116,116,116,116,,,,,,,,,,,,,,,,,,,,116,,,116,,,116,116,,,116,,,',
',,116,,,,,,,,,116,,,,,116,116,116,116,,116,116,116,116,,,,,116,116,',
',,783,783,783,116,783,116,116,116,783,783,,,,783,,783,783,783,783,783',
'783,783,,,,,,783,783,783,783,783,783,783,,,783,,,,,,,783,,,783,783,783',
'783,783,783,783,783,,783,783,783,,783,783,,,783,,,,,,,,,,,,,,,,,,,,783',
',,783,,,783,783,,,783,,,,,,,,,,,,,,,,,,,,783,783,783,783,,783,783,783',
'783,,,,,783,783,,,,617,617,617,783,617,783,783,783,617,617,,,,617,,617',
'617,617,617,617,617,617,,,,,,617,617,617,617,617,617,617,,,617,,,,,',
',617,,,617,617,617,617,617,617,617,617,,617,617,617,,617,617,617,617',
'617,,,,,,,,,,,,,,,,,,,,617,,,617,,,617,617,,,617,,,,,,617,,,,,,,,,617',
',,,,617,617,617,617,,617,617,617,617,,,,,617,617,,,,339,339,339,617',
'339,617,617,617,339,339,,,,339,,339,339,339,339,339,339,339,,,,,,339',
'339,339,339,339,339,339,,,339,,,,,,,339,,,339,339,339,339,339,339,339',
'339,,339,339,339,,339,339,339,339,339,,,,,,,,,,,,,,,,,,,,339,,,339,',
',339,339,,,339,,,,,,339,,,,,,,,,339,,,,,339,339,339,339,,339,339,339',
'339,,,,,339,339,,,,340,340,340,339,340,339,339,339,340,340,,,,340,,340',
'340,340,340,340,340,340,,,,,,340,340,340,340,340,340,340,,,340,,,,,',
',340,,,340,340,340,340,340,340,340,340,,340,340,340,,340,340,340,340',
'340,,,,,,,,,,,,,,,,,,,,340,,,340,,,340,340,,,340,,,,,,340,,,,,,,,,340',
',,,,340,340,340,340,,340,340,340,340,,,,,340,340,,,,771,771,771,340',
'771,340,340,340,771,771,,,,771,,771,771,771,771,771,771,771,,,,,,771',
'771,771,771,771,771,771,,,771,,,,,,,771,,,771,771,771,771,771,771,771',
'771,,771,771,771,,771,771,771,771,771,,,,,,,,,,,,,,,,,,,,771,,,771,',
',771,771,,,771,,,,,,771,,,,,,,,,771,,,,,771,771,771,771,,771,771,771',
'771,,,,,771,771,,,,721,721,721,771,721,771,771,771,721,721,,,,721,,721',
'721,721,721,721,721,721,,,,,,721,721,721,721,721,721,721,,,721,,,,,',
',721,,,721,721,721,721,721,721,721,721,,721,721,721,,721,721,721,721',
'721,,,,,,,,,,,,,,,,,,,,721,,,721,,,721,721,,,721,,,,,,721,,,,,,,,,721',
',,,,721,721,721,721,,721,721,721,721,,,,,721,721,,,,769,769,769,721',
'769,721,721,721,769,769,,,,769,,769,769,769,769,769,769,769,,,,,,769',
'769,769,769,769,769,769,,,769,,,,,,,769,,,769,769,769,769,769,769,769',
'769,,769,769,769,,769,769,769,769,769,,,,,,,,,,,,,,,,,,,,769,,,769,',
',769,769,,,769,,,,,,769,,,,,,,,,769,,,,,769,769,769,769,,769,769,769',
'769,,,,,769,769,,,,403,403,403,769,403,769,769,769,403,403,,,,403,,403',
'403,403,403,403,403,403,,,,,,403,403,403,403,403,403,403,,,403,,,,,',
',403,,,403,403,403,403,403,403,403,403,,403,403,403,,403,403,403,403',
'403,,,,,,,,,,,,,,,,,,,,403,,,403,,,403,403,,,403,,,,,,403,,,,,,,,,403',
',,,,403,403,403,403,,403,403,403,403,,,,,403,403,,,,768,768,768,403',
'768,403,403,403,768,768,,,,768,,768,768,768,768,768,768,768,,,,,,768',
'768,768,768,768,768,768,,,768,,,,,,,768,,,768,768,768,768,768,768,768',
'768,,768,768,768,,768,768,768,768,768,,,,,,,,,,,,,,,,,,,,768,,,768,',
',768,768,,,768,,,,,,768,,,,,,,,,768,,,,,768,768,768,768,,768,768,768',
'768,,,,,768,768,,,,767,767,767,768,767,768,768,768,767,767,,,,767,,767',
'767,767,767,767,767,767,,,,,,767,767,767,767,767,767,767,,,767,,,,,',
',767,,,767,767,767,767,767,767,767,767,,767,767,767,,767,767,767,767',
'767,,,,,,,,,,,,,,,,,,,,767,,,767,,,767,767,,,767,,,,,,767,,,,,,,,,767',
',,,,767,767,767,767,,767,767,767,767,,,,,767,767,,,,727,727,727,767',
'727,767,767,767,727,727,,,,727,,727,727,727,727,727,727,727,,,,,,727',
'727,727,727,727,727,727,,,727,,,,,,,727,,,727,727,727,727,727,727,727',
'727,,727,727,727,,727,727,727,727,727,,,,,,,,,,,,,,,,,,,,727,,,727,',
',727,727,,,727,,,,,,727,,,,,,,,,727,,,,,727,727,727,727,,727,727,727',
'727,,,,,727,727,,,,766,766,766,727,766,727,727,727,766,766,,,,766,,766',
'766,766,766,766,766,766,,,,,,766,766,766,766,766,766,766,,,766,,,,,',
',766,,,766,766,766,766,766,766,766,766,,766,766,766,,766,766,766,766',
'766,,,,,,,,,,,,,,,,,,,,766,,,766,,,766,766,,,766,,,,,,766,,,,,,,,,766',
',,,,766,766,766,766,,766,766,766,766,,,,,766,766,,,,324,324,324,766',
'324,766,766,766,324,324,,,,324,,324,324,324,324,324,324,324,,,,,,324',
'324,324,324,324,324,324,,,324,,,,,,,324,,,324,324,324,324,324,324,324',
'324,,324,324,324,,324,324,324,324,324,,,,,,,,,,,,,,,,,,,,324,,,324,',
',324,324,,,324,,,,,,324,,,,,,,,,324,,,,,324,324,324,324,,324,324,324',
'324,,,,,324,324,,,,,424,,324,,324,324,324,424,424,424,,,424,424,424',
',424,,,,,,,,,424,424,424,424,,,,,,,,424,424,,424,424,424,424,424,,,',
',,,,,,,,,,,,,,,,,,,424,424,424,424,424,424,424,424,424,424,424,424,424',
'424,,,424,424,424,,,424,,,424,,,424,424,,424,,424,,424,,424,424,,424',
'424,424,424,424,,424,424,424,,,,,,,,,,,,,,424,,,424,424,424,424,56,424',
',424,,,,56,56,56,,,56,56,56,,56,,,,,,,,,,56,56,56,,,,,,,,56,56,,56,56',
'56,56,56,,,,,,,,,,,,,,,,,,,,,,,56,56,56,56,56,56,56,56,56,56,56,56,56',
'56,,,56,56,56,,,56,,,56,,,56,56,,56,,56,,56,,56,56,,56,56,56,56,56,',
'56,,56,,,,,,,,,,,,,,56,,,56,56,56,56,423,56,,56,,,,423,423,423,,,423',
'423,423,,423,,,,,,,,,423,423,423,423,,,,,,,,423,423,,423,423,423,423',
'423,,,,,,,,,,,,,,,,,,,,,,,423,423,423,423,423,423,423,423,423,423,423',
'423,423,423,,,423,423,423,,,423,,,423,,,423,423,,423,,423,,423,,423',
'423,,423,423,423,423,423,,423,423,423,693,,693,693,693,693,693,,,,,',
',423,,693,423,423,423,423,28,423,,423,,,,28,28,28,,,28,28,28,,28,693',
',,,,,,,,28,28,693,693,,,,693,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,',
',,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28',
'28,,,28,28,,28,,28,,28,,28,28,,28,28,28,28,28,,28,473,28,,,,,,473,473',
'473,,,473,473,473,28,473,,28,28,,28,,28,,473,473,,,,,,,,,,473,473,,473',
'473,473,473,473,,,,,,,,,,,,,,,,,,643,,643,643,643,643,643,,,,,,,,,643',
'473,,27,,,,,473,,27,27,27,473,473,27,27,27,,27,,,643,,,,,,27,27,27,643',
'643,643,643,,473,473,643,27,27,,27,27,27,27,27,,,,,473,,,473,,,,,473',
',,,,643,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27',
',27,27,,,27,27,,27,,27,,27,,27,27,,27,27,27,27,27,,27,27,27,,,,,,,,',
',,,,,27,,414,27,27,,27,,27,414,414,414,,,414,414,414,,414,,,,,,,,,414',
'414,414,,,,,,,,,414,414,,414,414,414,414,414,,,,,,,,,,,,,,,,,,,,,,,414',
'414,414,414,414,414,414,414,414,414,414,414,414,414,,,414,414,414,,',
'414,,414,414,,,414,414,,414,,414,,414,,414,414,,414,414,414,414,414',
',414,414,414,,,,,,,,,,,,,,414,,,414,414,,414,,414,9,9,9,9,9,9,9,9,9',
'9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,,,,9,9,9,9,9,9,9,9,9,9,,,,,,9,9,9,9,9',
'9,9,9,9,,,9,,,,,,,,9,9,,9,9,9,9,9,9,9,,,9,9,,,,9,9,9,9,,,,,,,,,,,,,',
'9,9,,9,9,9,9,9,9,9,9,9,9,9,9,,,9,9,,,,,,,,,,,,,,9,394,394,394,394,394',
'394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394',
'394,394,,,,394,394,394,394,394,394,394,394,394,394,,,,,,394,394,394',
'394,394,394,394,394,394,,,394,,,,,,,,394,394,,394,394,394,394,394,394',
'394,,,394,394,,,,394,394,394,394,,,,,,,,,,,,,,394,394,,394,394,394,394',
'394,394,394,394,394,394,394,394,,,394,394,,,,,,,,,,,,,,394,613,613,613',
'613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613',
'613,613,613,613,,,,613,613,613,613,613,613,613,613,613,613,,,,,,613',
'613,613,613,613,613,613,613,613,,,613,,,,,,,,613,613,,613,613,613,613',
'613,613,613,,,613,613,,,,613,613,613,613,,,,,,,,,,,,,,613,613,,613,613',
'613,613,613,613,613,613,613,613,613,613,,,613,613,,,,,,,,,,,,,,613,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8',
',,,,,8,8,8,8,8,8,8,8,8,8,,8,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8',
'8,,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,,,,,8,734',
'734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734',
'734,734,734,734,734,734,,,,734,734,734,734,734,734,734,734,734,734,',
',,,,734,734,734,734,734,734,734,734,734,,,734,,,,,,,,734,734,,734,734',
'734,734,734,734,734,,,734,734,,,,734,734,734,734,,,,,,,,,,,,,,734,734',
',734,734,734,734,734,734,734,734,734,734,734,734,,,734,71,71,71,71,71',
'71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,,,,71,71,71',
'71,71,71,71,71,71,71,,,,,,71,71,71,71,71,71,71,71,71,71,71,71,,71,,',
',,,71,71,,71,71,71,71,71,71,71,,,71,71,,,,71,71,71,71,,,,,,71,,,,,,',
',71,71,,71,71,71,71,71,71,71,71,71,71,71,71,516,516,71,,516,,,,,,,,516',
'516,,516,516,516,516,516,516,516,,,516,516,,,,516,516,516,516,,,,,,516',
',,,,,,,516,516,,516,516,516,516,516,516,516,516,516,516,516,516,573',
'573,516,,573,,,,,,,,573,573,,573,573,573,573,573,573,573,,,573,573,',
',,573,573,573,573,,,,,,573,,,,,,,,573,573,,573,573,573,573,573,573,573',
'573,573,573,573,573,439,439,573,,439,,,,,,,,439,439,,439,439,439,439',
'439,439,439,,,439,439,,,,439,439,439,439,,,,,,439,,,,,,,,439,439,,439',
'439,439,439,439,439,439,439,439,439,439,439,440,440,439,,440,,,,,,,',
'440,440,,440,440,440,440,440,440,440,,,440,440,,,,440,440,440,440,,',
',,,440,,,,,,,,440,440,,440,440,440,440,440,440,440,440,440,440,440,440',
'210,210,440,,210,,,,,,,,210,210,,210,210,210,210,210,210,210,,,210,210',
',,,210,210,210,210,,,,,,210,,,,,,,,210,210,,210,210,210,210,210,210',
'210,210,210,210,210,210,581,581,210,,581,,,,,,,,581,581,,581,581,581',
'581,581,581,581,,,581,581,,,,581,581,581,581,,,,,,581,,,,,,,,581,581',
',581,581,581,581,581,581,581,581,581,581,581,581,979,979,581,,979,,',
',,,,,979,979,,979,979,979,979,979,979,979,,,979,979,,,,979,979,979,979',
',,,,,979,,,,,,,,979,979,,979,979,979,979,979,979,979,979,979,979,979',
'979,515,515,979,,515,,,,,,,,515,515,,515,515,515,515,515,515,515,,,515',
'515,,,,515,515,515,515,,,,,,515,,,,,,,,515,515,,515,515,515,515,515',
'515,515,515,515,515,515,515,933,933,515,,933,,,,,,,,933,933,,933,933',
'933,933,933,933,933,,,933,933,,,,933,933,933,933,,,,,,933,,,,,,,,933',
'933,,933,933,933,933,933,933,933,933,933,933,933,933,980,980,933,,980',
',,,,,,,980,980,,980,980,980,980,980,980,980,,,980,980,,,,980,980,980',
'980,,,,,,980,,,,,,,,980,980,,980,980,980,980,980,980,980,980,980,980',
'980,980,211,211,980,,211,,,,,,,,211,211,,211,211,211,211,211,211,211',
',,211,211,,,,211,211,211,211,,,,,,211,,,,,,,,211,211,,211,211,211,211',
'211,211,211,211,211,211,211,211,505,505,211,,505,,,,,,,,505,505,,505',
'505,505,505,505,505,505,,,505,505,,,,505,505,505,505,,,,,,505,,,,,,',
',505,505,,505,505,505,505,505,505,505,505,505,505,505,505,506,506,505',
',506,,,,,,,,506,506,,506,506,506,506,506,506,506,,,506,506,,,,506,506',
'506,506,,,,,,506,,,,,,,,506,506,,506,506,506,506,506,506,506,506,506',
'506,506,506,259,259,506,,259,,,,,,,,259,259,,259,259,259,259,259,259',
'259,,,259,259,,,,259,259,259,259,,,,,,,,,,,,,,259,259,,259,259,259,259',
'259,259,259,259,259,259,259,259,580,580,259,,580,,,,,,,,580,580,,580',
'580,580,580,580,580,580,,,580,580,,,,580,580,580,580,,,,,,580,,,,,,',
',580,580,,580,580,580,580,580,580,580,580,580,580,580,580,574,574,580',
',574,,,,,,,,574,574,,574,574,574,574,574,574,574,,,574,574,,,,574,574',
'574,574,,,,,,574,,,,,,,,574,574,,574,574,574,574,574,574,574,574,574',
'574,574,574,,733,574,733,733,733,733,733,,691,,691,691,691,691,691,733',
',,,,,,,691,,689,,689,689,689,689,689,,,,,,733,,,689,,,,,691,733,733',
'733,733,,,,733,691,691,691,691,,,,691,689,,860,,860,860,860,860,860',
'689,689,689,689,,,,689,860,,862,,862,862,862,862,862,,888,,888,888,888',
'888,888,862,,,,,860,,,888,,,,,,860,860,860,860,,,,860,862,,,,,,,,888',
'862,862,862,862,,,,862,888,888,888,888,,,732,888,732,732,732,732,732',
'892,,892,892,892,892,892,894,732,894,894,894,894,894,982,892,982,982',
'982,982,982,,894,,,,,,,982,732,,,,,,,892,,732,732,732,732,,894,,732',
',892,892,,982,,892,,894,894,,,,894,,982,982,,,532,982,532,532,532,532',
'532,,964,,964,964,964,964,964,532,,,,,,,,964,,335,,335,335,335,335,335',
',,,,,532,,,335,,,,,964,532,532,532,532,,,,532,964,964,964,964,,,,964',
'335,335,966,,966,966,966,966,966,335,335,335,335,,,,335,966,,968,,968',
'968,968,968,968,970,,970,970,970,970,970,,968,,,,,966,,970,,,,,,,,,966',
'966,,,,966,968,,,,,,,970,,,,968,968,,,,968,,970,970,,,,970' ]
        racc_action_check = arr = ::Array.new(24869, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  2449,  1201,   nil,   472,   nil, 13647,  1469,  1074, 23183, 22799,
  1071,   nil,  1020,  1067,   701,   450,  1007,   886,   nil,   -71,
 16930,  2729,  1103,   nil,   670,   nil,   189, 22536, 22345, 17585,
 17716, 17847,   nil,  2869, 17978, 18109,   nil,   976,   410,   361,
  1050,   275, 18510, 18641, 18772,   961,   981,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil, 22077,   nil,   112, 18903,
 19034,   -21,   nil, 15358, 19296,   nil,   nil, 19427, 19566, 19697,
 19828, 23424,   nil,   nil,   nil,   nil,   nil,   272,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   220,   nil,   nil,     0,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1090,
   nil, 19967,   nil,   nil,   nil,   nil, 20106,   628,  5100,  5231,
  5370,  4269,   nil,    -7,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   940,   nil,  4549,  5501,  5632,  5763,
 23729, 24095,  6156,  6287,  6418,  6549,  6680,  6811,   nil,   nil,
   631,   111,   -56,   968,   -61,   880,   927,   nil,  7597,  3289,
   914,  7859,  7990,  8121,  8252,  8383,  8514,  8645,  8776,  8907,
  9038,  9169,  9300,  9431,  9562,  9693,  9824,  9955, 10086, 10217,
 10348, 10479, 10610, 10741, 10872, 11003, 11134,   nil,   nil, 24278,
   nil,   nil,   903, 11527, 11658,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 11789,   nil,  2309,   nil,   862,   857,   nil, 12182,
   864, 12444,   nil, 12575, 12706,   nil,   nil,   368,   nil, 12984,
  1454,   836,   804,  1609,   807,   846,   802, 13778,  2169,  1091,
  1121,  1052,   878,   462,   nil,   779,   733,    -8,   nil,   nil,
   nil,   770,   219,   722, 14965,   nil,   380,   784,   231,   nil,
   759,   nil, 15227,  3709, 21809,   667,   nil,   463,   522,   590,
   527,   542,   500,   nil,   nil, 24701,   235,    32,    33, 20499,
 20630,   587,   358,   227,     9,    -5,   464,   291,   -18,   231,
   nil,   nil,   228,   460,   293,   nil,   951,   nil,     9, 15620,
   nil,   nil,   nil,   393,   699,   199,   327,   283,   817,   676,
   531,   360,   nil,   648,   nil, 15489,   nil,   347,   356,   385,
   391,   400,   -25,   -29,   294,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   109, 22927,   nil,   nil,   nil,   nil,    94,
   nil,   nil,    15, 21154,   -79,   nil,   nil,   909,  1311,   nil,
  1300,  1295,   125,   409, 22665,   nil,   nil,   nil,   110,   628,
  1336,   nil,   nil, 22211, 21943,   nil,  1749,   nil,  1282,   nil,
   nil,   769,   nil,   nil,   nil,   nil,    24,   nil,  1329, 23607,
 23668, 14703,   -85, 14572, 14441, 14310,  4969,  4269,  3457,   -45,
  1347,  1343,  1340,  1323,  5370,  5231,  5501,  3289,  3429,  3569,
  3709,  3989,  4409,  4689,  4829,  4549,  5100,  3264,   511,  4129,
  3849,  2029,   176, 22457,   nil,   nil,   nil,   nil,  1255,   nil,
   191,   200,  1241,   nil,   nil, 13508,   nil, 13377,   nil, 13246,
   nil,   nil,   nil,   nil, 12845,  1314,  4689,  1215,  1209,   nil,
   nil,  1205, 11920,  1206, 11396, 24156, 24217,   461,  1234,   nil,
  7728,  1188,   nil,  7466,  7335, 23912, 23485,  2589,  7204,  1312,
  1305,   298,  1212,   nil,  6025,   nil,   nil,  5894,   nil,   nil,
   nil,   nil, 24676,   nil,  1168,  1160,   nil,  1155,  1150,  1149,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1137,  3164,   nil,
   nil, 19165,   nil,   nil,   nil,  1224,   nil,   nil,   nil,  1222,
   nil,   nil,  1219,  1189,  1257,   nil,  1049,    96,    95,  1250,
  1240, 17454, 17323, 23546, 24400,    26,   nil,   nil,   430,   nil,
 24339, 23790, 17061,   nil,   nil,   nil,   256,   138,   909,  1136,
   nil,   154,   nil,   nil,   nil,   752,   nil,   nil,   nil,  1098,
   nil,   nil,   145,   nil,   278,   nil,   nil,  1082,   nil,  1079,
   nil,   nil,   nil, 23055,   nil,  1069, 16013, 20368,   389,  1121,
 16144, 16275, 16406, 16537,  1135,   nil,   nil, 16799, 17192,  1149,
   nil, 18248, 18379,   nil,   nil,   113,   225,   356,   492,  1146,
  1049,  1147,   nil, 22467,   nil,  1749,  1258,    24,   -45,   nil,
  4129,  2029,   nil,  1170,   nil,  1221,  6942,   nil,   nil,   nil,
  1200,  -118,  7073,  1182,   nil,  1186,    65,   134,  1233,   364,
   769,  1235,  1193, 11265,  2449,  1271,   202,  1327, 12051,   nil,
  1213,   nil,   -68,   -23,  1235,   817,   nil,   nil,   782, 24487,
   nil, 24470,   nil, 22274,   nil, 14179,   nil,  3229,   nil,  1277,
   288,  1285,   nil,   nil,   nil,   nil,   768,   nil,  1402,   nil,
   nil,   nil,   nil,  1409,   nil,    36,  1292,    31,   -21,    71,
    68, 20892,   324,  1049,   nil,   -31,  2729, 21547,   nil,   nil,
   200,   769, 24603, 24462, 23311,   nil,   nil,   nil,   nil,   nil,
   nil,  4829,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   102,
 15751,  3009, 15882,   nil,   116,   nil,  2869,   nil,  1189,   nil,
   nil,  1329,   nil,  1469,   nil,  1609, 21678, 21416, 21285, 21023,
   244, 20761,   247,   257,   nil,   261,   272,   276,   nil,   369,
   354,   355,   371, 20237,   nil,   nil,   518,   nil,   nil,  1469,
   493,   601,   nil,   nil,   nil,   479,   294,   nil,   nil,   610,
   nil,  4969,   521,   569,   nil,   nil,   584,   nil,   nil,  3569,
  2309,   598,   576,   nil,   nil,   nil,   594,   609,   nil,   619,
   629,   nil,   632,   nil,   nil,   647,  3135,   660,  3369,   nil,
   799,   nil, 15096,   820,  3989,  3849,   nil, 14834,  3149,    39,
   147,   nil,   884,   491,  2589,   nil,   887,   769,   344,   nil,
   776,   773,   nil,  1889, 14048, 13917,  2169,   942,   nil,   nil,
 24526,   nil, 24543,   nil, 18156,   nil,   nil,   837,  1315, 13115,
   909,   894,   nil,   837,   nil,   nil,   nil,  1329,   nil,   nil,
   -10, 12313,   nil,   nil,   852,   960,   nil,   nil, 24551,   nil,
 19875,   nil, 24610,   nil, 24617,   nil,   nil,   nil,   nil,   322,
  3174,   889,   nil,    26,   nil,  1024,  1025,   nil,    18,   nil,
   nil,   nil,  1027,   nil,   nil,   nil,   950,   nil,   910,   nil,
   nil,   923,   924,   928,   929,   nil,   930,   nil,   451,   nil,
   nil,   nil,   527, 23973,   nil,   nil,   nil,  4409,   772,   811,
   841,  1020,   912,   nil,   nil,   nil,   943,   944,   952,   953,
   955,  3445,   956,  3453,  1889,   nil,   nil,   nil,   nil,   nil,
  3429,   nil,  3009,   nil, 24684,   nil, 24740,   nil, 24757,   nil,
 24764,   nil,   nil,   nil,  1175,  1046,  1050,  1136, 16668, 23851,
 24034,   496, 24624,   nil,   nil,   nil,   nil,  3415,  1029,   782,
  1154,  1164,  1041,  1043,  1046,  1048,   nil,   nil,  1052,    10,
     8,    -1,   463,  1063,  1064,   nil,   nil,   nil, 13825,   nil,
   nil,   nil,   nil,    35,   nil,  1070,   nil ]

racc_action_default = [
    -3,  -593,    -1,  -579,    -4,  -593,    -7,  -593,  -593,  -593,
  -593,   -29,  -593,  -593,  -593,  -279,  -593,   -40,   -43,  -581,
  -593,   -48,   -50,   -51,   -52,   -56,  -256,  -256,  -256,  -293,
  -328,  -329,   -68,   -11,   -72,   -80,   -82,  -593,  -486,  -487,
  -593,  -593,  -593,  -593,  -593,  -581,  -237,  -270,  -271,  -272,
  -273,  -274,  -275,  -276,  -277,  -278,  -569,  -281,  -283,  -592,
  -560,  -301,  -389,  -593,  -593,  -306,  -309,  -579,  -593,  -593,
  -593,  -593,  -330,  -331,  -427,  -428,  -429,  -430,  -431,  -452,
  -434,  -435,  -454,  -456,  -439,  -444,  -448,  -450,  -466,  -454,
  -468,  -470,  -471,  -472,  -473,  -567,  -475,  -476,  -568,  -478,
  -479,  -480,  -481,  -482,  -483,  -484,  -485,  -490,  -491,  -593,
    -2,  -580,  -588,  -589,  -590,    -6,  -593,  -593,  -593,  -593,
  -593,    -3,   -17,  -593,  -111,  -112,  -113,  -114,  -115,  -116,
  -117,  -118,  -119,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,  -181,  -182,  -183,  -184,  -185,  -186,  -187,  -188,  -189,
  -190,  -191,  -192,  -193,   -22,  -120,   -11,  -593,  -593,  -246,
  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -581,  -582,   -47,
  -593,  -486,  -487,  -593,  -279,  -593,  -593,  -229,  -593,   -11,
  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,
  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,
  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -396,  -398,  -593,
  -577,  -578,   -57,  -246,  -593,  -300,  -402,  -411,  -413,   -63,
  -408,   -64,  -581,   -65,  -238,  -251,  -260,  -260,  -255,  -593,
  -261,  -593,  -562,  -593,  -593,   -66,   -67,  -579,   -12,  -593,
   -15,  -593,   -70,   -11,  -581,  -593,   -73,   -76,   -11,   -88,
   -89,  -593,  -593,   -96,  -293,  -296,  -581,  -593,  -328,  -329,
  -332,  -409,  -593,   -78,  -593,   -84,  -290,  -469,  -593,  -214,
  -215,  -230,  -593,   -11,  -593,  -581,  -239,  -585,  -585,  -593,
  -593,  -585,  -593,  -302,  -303,  -519,   -49,  -593,  -593,  -593,
  -593,  -579,  -593,  -580,  -486,  -487,  -593,  -593,  -279,  -593,
  -342,  -343,  -106,  -107,  -593,  -109,  -593,  -279,  -593,  -593,
  -486,  -487,  -321,  -111,  -112,  -153,  -154,  -155,  -171,  -176,
  -183,  -186,  -323,  -593,  -558,  -593,  -432,  -593,  -593,  -593,
  -593,  -593,  -593,  -593,  -593,  1017,    -5,  -591,   -23,   -24,
   -25,   -26,   -27,  -593,  -593,   -19,   -20,   -21,  -121,  -593,
   -30,   -39,  -266,  -593,  -593,  -265,   -31,  -196,  -581,  -247,
  -260,  -260,  -570,  -571,  -256,  -406,  -572,  -573,  -571,  -570,
  -256,  -405,  -407,  -572,  -573,   -37,  -204,   -38,  -593,   -41,
   -42,  -194,  -261,   -44,   -45,   -46,  -581,  -299,  -593,  -593,
  -593,  -246,  -290,  -593,  -593,  -593,  -205,  -206,  -207,  -208,
  -209,  -210,  -211,  -212,  -216,  -217,  -218,  -219,  -220,  -221,
  -222,  -223,  -224,  -225,  -226,  -227,  -228,  -231,  -232,  -233,
  -234,  -581,  -378,  -256,  -570,  -571,   -54,   -58,  -581,  -257,
  -378,  -378,  -581,  -295,  -252,  -593,  -253,  -593,  -258,  -593,
  -262,  -565,  -566,   -10,  -580,   -14,    -3,  -581,   -69,  -288,
   -85,   -74,  -593,  -581,  -246,  -593,  -593,   -95,  -593,  -469,
  -593,   -81,   -86,  -593,  -593,  -593,  -593,  -235,  -593,  -419,
  -593,  -284,  -593,  -240,  -587,  -586,  -242,  -587,  -291,  -292,
  -561,  -390,  -519,  -393,  -557,  -557,  -502,  -504,  -504,  -504,
  -518,  -520,  -521,  -522,  -523,  -524,  -525,  -526,  -593,  -528,
  -530,  -532,  -537,  -539,  -540,  -542,  -547,  -549,  -550,  -552,
  -553,  -554,  -593,   -11,  -333,  -334,   -11,  -593,  -593,  -593,
  -593,  -593,  -246,  -593,  -593,  -290,  -314,  -106,  -107,  -108,
  -593,  -593,  -246,  -317,  -492,  -493,  -593,  -593,   -11,  -497,
  -325,  -581,  -433,  -453,  -458,  -593,  -460,  -436,  -455,  -593,
  -457,  -438,  -593,  -441,  -593,  -443,  -446,  -593,  -447,  -593,
  -467,    -8,   -18,  -593,   -28,  -269,  -593,  -593,  -410,  -593,
  -248,  -250,  -593,  -593,   -59,  -245,  -403,  -593,  -593,   -61,
  -404,  -593,  -593,  -298,  -583,  -570,  -571,  -570,  -571,  -581,
  -194,  -593,  -379,  -581,  -381,   -11,   -53,  -399,  -378,  -243,
   -11,   -11,  -294,  -260,  -259,  -263,  -593,  -563,  -564,   -13,
  -593,   -71,  -593,   -77,   -83,  -581,  -570,  -571,  -244,   -92,
   -94,  -593,   -79,  -593,  -203,  -213,  -581,  -592,  -592,  -282,
  -581,  -287,  -585,  -593,  -581,  -593,  -500,  -501,  -593,  -593,
  -511,  -593,  -514,  -593,  -516,  -593,  -344,  -593,  -346,  -348,
  -355,  -581,  -531,  -541,  -551,  -555,  -592,  -335,  -592,  -307,
  -336,  -337,  -310,  -593,  -313,  -593,  -581,  -570,  -571,  -574,
  -289,  -593,  -106,  -107,  -110,  -581,   -11,  -593,  -495,  -319,
  -593,   -11,  -519,  -519,  -593,  -559,  -459,  -462,  -463,  -464,
  -465,   -11,  -437,  -440,  -442,  -445,  -449,  -451,  -122,  -267,
  -593,  -197,  -593,  -584,  -260,   -33,  -199,   -34,  -200,   -60,
   -35,  -202,   -36,  -201,   -62,  -195,  -593,  -593,  -593,  -593,
  -410,  -593,  -557,  -557,  -360,  -362,  -362,  -362,  -377,  -593,
  -581,  -383,  -526,  -534,  -535,  -545,  -593,  -401,  -400,   -11,
  -593,  -593,  -254,  -264,   -16,   -75,   -90,   -87,  -297,  -592,
  -340,   -11,  -420,  -592,  -421,  -422,  -593,  -241,  -391,   -11,
   -11,  -593,  -557,  -538,  -556,  -503,  -504,  -504,  -529,  -504,
  -504,  -548,  -504,  -526,  -543,  -581,  -593,  -353,  -593,  -527,
  -593,  -338,  -593,  -593,   -11,   -11,  -312,  -593,   -11,  -410,
  -593,  -410,  -593,  -593,   -11,  -322,  -593,  -581,  -593,  -326,
  -593,  -268,   -32,  -198,  -249,  -593,  -236,  -593,  -358,  -359,
  -368,  -370,  -593,  -373,  -593,  -375,  -380,  -593,  -593,  -593,
  -533,  -593,  -397,  -593,  -412,  -414,    -9,   -11,  -426,  -341,
  -593,  -593,  -424,  -285,  -593,  -593,  -392,  -499,  -593,  -507,
  -593,  -509,  -593,  -512,  -593,  -515,  -517,  -345,  -347,  -351,
  -593,  -356,  -304,  -593,  -305,  -593,  -593,  -263,  -592,  -315,
  -318,  -494,  -593,  -324,  -496,  -498,  -497,  -461,  -557,  -536,
  -361,  -362,  -362,  -362,  -362,  -546,  -362,  -382,  -581,  -385,
  -387,  -388,  -544,  -593,  -290,   -55,  -425,   -11,   -97,   -98,
  -593,  -593,  -105,  -423,  -394,  -395,  -504,  -504,  -504,  -504,
  -349,  -593,  -354,  -593,   -11,  -308,  -311,  -415,  -416,  -417,
   -11,  -320,   -11,  -357,  -593,  -365,  -593,  -367,  -593,  -371,
  -593,  -374,  -376,  -384,  -593,  -289,  -574,  -419,  -246,  -593,
  -593,  -104,  -593,  -505,  -508,  -510,  -513,  -593,  -352,  -592,
  -593,  -593,  -362,  -362,  -362,  -362,  -386,  -418,  -581,  -570,
  -571,  -574,  -103,  -504,  -350,  -339,  -316,  -327,  -593,  -363,
  -366,  -369,  -372,  -410,  -506,  -362,  -364 ]

clist = [
'216,258,326,408,14,275,275,275,372,14,477,333,414,420,310,310,486,520',
'132,132,677,276,276,276,220,430,322,570,127,127,405,114,2,220,220,220',
'427,14,301,301,122,205,130,130,266,270,259,618,310,310,310,327,533,296',
'657,336,336,478,654,336,654,473,110,731,111,219,777,220,220,540,294',
'220,346,356,356,686,687,262,269,271,292,317,830,337,338,563,566,341',
'313,523,526,127,776,530,657,114,579,645,709,712,511,701,821,818,901',
'650,651,779,336,336,336,336,817,925,819,14,799,115,332,898,220,220,220',
'220,14,14,342,277,277,277,929,593,931,600,603,603,388,389,390,391,6',
'382,378,358,362,6,648,833,811,384,486,602,604,393,736,741,727,328,331',
'273,285,286,816,813,919,383,394,401,351,613,204,659,329,876,647,374',
'952,330,334,1,349,583,373,323,324,275,680,325,657,339,834,340,835,654',
'654,721,960,726,844,404,588,589,734,916,778,404,433,434,435,436,14,220',
'220,220,780,925,220,220,220,220,220,220,928,386,531,808,335,988,415',
'683,472,424,480,14,481,639,996,957,931,275,275,414,420,803,867,880,898',
'376,275,684,825,6,400,406,713,377,276,425,429,379,392,6,380,1004,276',
'402,540,220,220,381,,432,,789,818,,220,310,770,,,,730,922,,923,,508',
'663,,,,,14,310,,672,14,665,821,,301,14,,796,,522,668,818,921,,946,,858',
'859,114,521,668,301,,,,724,,,266,,14,220,270,497,336,336,512,,503,,488',
',490,292,491,492,220,220,292,493,958,494,,501,587,509,887,,839,744,',
'744,567,568,,277,220,841,1005,716,591,,114,277,909,759,,,668,725,764',
',220,,,,668,818,,584,992,,619,962,,792,,479,590,,,,,569,,482,,132,,',
',,,,,,,127,,,275,,,842,657,,,,846,612,654,130,495,,,625,,,16,,,630,',
'16,,,430,807,220,,,795,847,848,13,641,,,,13,415,,963,424,615,,838,,624',
'540,540,16,,,629,,,,,,,997,,275,,310,,13,,,26,,,310,625,26,792,,,,,14',
',14,804,,350,,,301,26,220,,676,,,,301,,26,26,26,,26,512,220,415,646',
',424,,660,512,,,,415,,,424,,912,,,,,655,,332,16,658,275,,26,26,,,26',
'16,16,,275,,,,13,715,,,,14,,,14,13,13,,,,220,,,,,783,655,653,,332,220',
',,,,415,14,959,424,710,710,788,26,415,424,,,26,26,26,26,26,26,702,,',
',,728,729,,,,,619,805,682,132,781,787,220,220,937,432,,220,220,127,',
'220,6,1013,,,,16,310,,,748,619,130,428,14,,954,,310,14,14,991,13,,,',
'806,,,16,781,301,755,757,,404,849,760,762,749,,429,301,655,332,13,512',
',,,,625,,,630,,,797,26,26,26,26,619,,26,26,26,26,26,26,,619,,,,,,,336',
'793,,26,,754,336,,,,,16,220,,,16,,14,220,,16,,14,802,,,,13,840,878,',
'13,14,882,843,437,13,26,26,,824,127,,220,,16,26,,781,,310,,,,,,,,,998',
',13,,26,,,,26,668,,,295,26,,870,,,,,,14,,783,,852,783,,783,,783,483',
',14,,,851,,26,26,,14,14,,,,,,,,,,336,498,26,26,,,,,,,,,220,,14,14,,',
'14,,774,,26,,14,310,,,903,,,,,,,,,310,26,,,39,,,710,,39,911,,932,,,915',
',,,,14,,,,940,814,,,814,,,,,,907,,,39,300,300,,783,,783,,783,,783,973',
',,332,,,,,,,,,,,,,775,,,26,16,,16,,345,361,361,361,,,,,14,,,,13,783',
'13,,,,,,424,275,,,399,14,,,,,,14,,14,633,,,,,,820,,822,39,,,619,295',
'26,220,26,773,39,39,,,,,26,,,,,,415,16,,424,16,861,863,865,26,,,,649',
',,,652,13,,,13,,,,,,16,,,812,,661,,,,,,664,,,,,13,,,,,295,,,,,295,26',
',,26,,,,,814,26,,774,,774,,774,428,,,26,,39,,,,26,,,547,,16,,,,,16,16',
',,,,690,692,694,39,,13,,,,,13,13,,,,,,,26,26,,,,26,26,,,26,,,,735,,',
',,,,,,,26,,,,,26,26,,,,,,924,,926,,965,967,969,971,,972,39,,,,39,,,16',
'300,39,,774,16,774,,774,947,774,948,,949,,16,13,,300,,,13,,,,,,39,,',
',13,,,,,,918,,,773,,773,,773,,798,26,774,,,,26,26,,,,26,1009,1010,1011',
'1012,,16,,,,26,,,,829,15,,,16,,15,26,13,,1016,,16,16,993,,994,,995,',
'13,,,,,,,,13,13,,,1003,,15,303,303,16,16,,,16,,547,26,,,16,,,,,,13,13',
',26,13,1015,696,,,,13,26,26,,,,348,357,357,,773,,773,,773,,773,16,,706',
',943,708,,26,,26,26,,,26,,,13,,,26,,,,,,,,,,,,,15,,,38,,773,,,38,15',
'15,,897,,,39,,39,,,26,,,300,,,889,891,16,893,895,300,896,,914,,38,299',
'299,,,,782,,13,16,,,,,,16,786,16,,,,790,791,,,13,,,,,,13,,13,,344,360',
'360,360,,,,,,26,,,,39,,,39,547,,547,,,,,15,696,26,,827,,,,26,,26,,,',
'39,,,,,38,,,,15,,,26,,38,38,,,,,,,547,547,,,,,,,,,,,,,,,,850,,,,,,,',
'983,984,985,986,,,,,,,39,,,,,39,39,,,,,,15,,,,15,300,,,303,15,,,,,,',
'300,,873,,,,,,,303,,,,,879,38,,,15,1014,,,884,885,,,,,,,,696,,696,,',
',,38,,,,,,,,,905,906,,,908,,39,,,,,39,,,,,,,782,,782,39,,,,,,,,,,,,',
',,,,,,,,,936,,,547,,,,,38,,,,38,,950,696,299,38,,,361,,,,,,39,,,,,,',
'299,,,,,39,,,,38,,,,39,39,,,,,,,,,,,,,977,,,,,,696,,696,,,39,39,,,39',
',989,,782,,39,,990,,,,,,,,,,,,,,,,15,,15,696,,,,361,303,,,,,,,39,303',
',,939,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15,,,15,,,39',
',,,,,,,,,,,,,,,,39,,15,,,,39,,39,740,,,,,,,,,,,,,38,,38,,,,,,299,,,',
',,,,299,,,,,,,,,,,,,,,,,,,,,15,,,,,15,15,,,,,,,,,,,303,,,,,,,,,,,303',
',,,38,,,38,,,,,,,,,,,,,,,,,,,,,,38,,,,,,,,,,,,,,,,,,,,,,,,15,,,,,15',
',,,,,,,,,15,,,,,,,,,,,,,,,,,,38,,,,,38,38,,,,,,,,,,,299,,,,,,,357,,',
',299,,15,,,,227,,,,,,,,15,274,274,274,,,,,15,15,,,,,319,320,321,,,,',
',,,,,,,,,,274,274,15,15,,,15,,38,,,,15,38,,,,,,,,,,38,,,,,,,,,,,,,,357',
',,,,,,,15,,,,942,,,,,,,,,,,,,,,,360,,,,,,38,,,,,,,,,,,,38,,,,,,,,38',
'38,,,,,,,,,,,,,15,,,,,,,,,,,38,38,,,38,,15,,,,38,,15,,15,,,,,,,,,,,',
',,,,,,274,407,274,360,,426,431,,,,,38,,,,938,,,,,,227,,,446,447,448',
'449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465',
'466,467,468,469,470,471,,,,,,,274,274,,,,,,,,274,,,,,,38,274,,274,,274',
'274,,,,,,,,,,,38,,,,,,38,,38,,,,,,,,,,,,,,,,,,,517,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,426,640,407,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,274,,274,,274,,,,,,,,,,,,,,,274,,,,,,,,,674',
'675,,,,,,,,,,274,,,274,,,,,,,,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,,',
',274,274,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,751,,,274',
'274,756,758,,,,761,763,,,640,765,,,,,,,,,,,,,,,,,,,,,,,,274,,,,,,,,',
',,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,274,,853,,,,,,,,,,,,,,756,758,763,761,,856,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,',
',,,,,,,,,,,,,,,274,853,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,274' ]
        racc_goto_table = arr = ::Array.new(2985, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'31,138,67,23,22,33,33,33,56,22,39,86,37,37,64,64,73,8,61,61,10,68,68',
'68,22,18,31,92,57,57,27,95,2,22,22,22,27,22,22,22,15,15,60,60,71,71',
'36,24,64,64,64,68,137,49,175,29,29,23,74,29,74,37,4,96,6,20,127,22,22',
'161,46,22,22,22,22,121,121,38,38,38,45,63,90,17,17,89,89,17,50,69,69',
'57,126,69,175,95,54,40,91,91,51,116,171,166,117,40,40,129,29,29,29,29',
'127,172,127,22,11,5,65,114,22,22,22,22,22,22,4,70,70,70,131,154,132',
'154,154,154,17,17,17,17,7,156,150,55,55,7,42,11,129,150,73,153,153,2',
'158,159,160,70,70,44,44,44,165,168,169,157,30,28,19,62,16,14,66,12,72',
'84,117,85,88,1,93,94,97,98,99,33,100,101,175,102,103,104,105,74,74,106',
'107,108,109,68,110,111,112,113,118,68,29,29,29,29,22,22,22,22,124,172',
'22,22,22,22,22,22,130,5,133,134,135,117,71,136,139,57,141,22,142,23',
'131,143,132,33,33,37,37,144,129,145,114,148,33,137,116,7,20,20,92,149',
'68,20,20,151,7,7,152,117,68,65,161,22,22,155,,65,,40,166,,22,64,24,',
',,8,127,,127,,31,51,,,,,22,64,,51,22,23,171,,22,22,,24,,31,37,166,126',
',127,,121,121,95,29,37,22,,,,54,,,71,,22,22,71,46,29,29,49,,46,,65,',
'65,45,65,65,22,22,45,4,11,6,,50,29,63,121,,24,154,,154,17,17,,70,22',
'24,90,23,29,,95,70,91,39,,,37,23,39,,22,,,,37,166,,95,127,,31,96,,73',
',44,36,,,,,4,,44,,61,,,,,,,,,,57,,,33,,,8,175,,,,8,15,74,60,7,,,71,',
',26,,,71,,26,,,18,69,22,,,51,137,137,21,31,,,,21,71,,121,57,65,,89,',
'38,161,161,26,,,38,,,,,,,10,,33,,64,,21,,,41,,,64,71,41,73,,,,,22,,22',
'27,,26,,,22,41,22,,29,,,,22,,41,41,41,,41,49,22,71,38,,57,,2,49,,,,71',
',,57,,8,,,,,65,,65,26,65,33,,41,41,,,41,26,26,,33,,,,21,68,,,,22,,,22',
'21,21,,,,22,,,,,167,65,70,,65,22,,,,,71,22,92,57,95,95,86,41,71,57,',
',41,41,41,41,41,41,65,,,,,95,95,,,,,31,67,70,61,31,138,22,22,89,65,',
'22,22,57,,22,7,24,,,,26,64,,,15,31,60,26,22,,89,,64,22,22,8,21,,,,31',
',,26,31,22,20,20,,68,56,20,20,65,,20,22,65,65,21,49,,,,,71,,,71,,,49',
'41,41,41,41,31,,41,41,41,41,41,41,,31,,,,,,,29,65,,41,,70,29,,,,,26',
'22,,,26,,22,22,,26,,22,65,,,,21,17,67,,21,22,67,17,47,21,41,41,,65,57',
',22,,26,41,,31,,64,,,,,,,,,23,,21,,41,,,,41,37,,,9,41,,22,,,,,,22,,167',
',20,167,,167,,167,47,,22,,,65,,41,41,,22,22,,,,,,,,,,29,47,41,41,,,',
',,,,,22,,22,22,,,22,,122,,41,,22,64,,,17,,,,,,,,,64,41,,,53,,,95,,53',
'95,,22,,,95,,,,,22,,,,22,122,,,122,,,,,,65,,,53,53,53,,167,,167,,167',
',167,31,,,65,,,,,,,,,,,,,125,,,41,26,,26,,53,53,53,53,,,,,22,,,,21,167',
'21,,,,,,57,33,,,9,22,,,,,,22,,22,47,,,,,,125,,125,53,,,31,9,41,22,41',
'120,53,53,,,,,41,,,,,,71,26,,57,26,123,123,123,41,,,,47,,,,47,21,,,21',
',,,,,26,,,120,,47,,,,,,47,,,,,21,,,,,9,,,,,9,41,,,41,,,,,122,41,,122',
',122,,122,26,,,41,,53,,,,41,,,115,,26,,,,,26,26,,,,,164,164,164,53,',
'21,,,,,21,21,,,,,,,41,41,,,,41,41,,,41,,,,47,,,,,,,,,,41,,,,,41,41,',
',,,,125,,125,,123,123,123,123,,123,53,,,,53,,,26,53,53,,122,26,122,',
'122,125,122,125,,125,,26,21,,53,,,21,,,,,,53,,,,21,,,,,,120,,,120,,120',
',120,,47,41,122,,,,41,41,,,,41,123,123,123,123,,26,,,,41,,,,47,25,,',
'26,,25,41,21,,123,,26,26,125,,125,,125,,21,,,,,,,,21,21,,,125,,25,25',
'25,26,26,,,26,,115,41,,,26,,,,,,21,21,,41,21,125,115,,,,21,41,41,,,',
'25,25,25,,120,,120,,120,,120,26,,9,,26,9,,41,,41,41,,,41,,,21,,,41,',
',,,,,,,,,,,25,,,52,,120,,,52,25,25,,47,,,53,,53,,,41,,,53,,,164,164',
'26,164,164,53,164,,47,,52,52,52,,,,115,,21,26,,,,,,26,9,26,,,,9,9,,',
'21,,,,,,21,,21,,52,52,52,52,,,,,,41,,,,53,,,53,115,,115,,,,,25,115,41',
',115,,,,41,,41,,,,53,,,,,52,,,,25,,,41,,52,52,,,,,,,115,115,,,,,,,,',
',,,,,,,9,,,,,,,,164,164,164,164,,,,,,,53,,,,,53,53,,,,,,25,,,,25,53',
',,25,25,,,,,,,53,,9,,,,,,,25,,,,,9,52,,,25,164,,,9,9,,,,,,,,115,,115',
',,,,52,,,,,,,,,9,9,,,9,,53,,,,,53,,,,,,,115,,115,53,,,,,,,,,,,,,,,,',
',,,,,9,,,115,,,,,52,,,,52,,115,115,52,52,,,53,,,,,,53,,,,,,,52,,,,,53',
',,,52,,,,53,53,,,,,,,,,,,,,9,,,,,,115,,115,,,53,53,,,53,,9,,115,,53',
',9,,,,,,,,,,,,,,,,25,,25,115,,,,53,25,,,,,,,53,25,,,53,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,25,,,53,,,,,,,,,,,,,,,,,53',
',25,,,,53,,53,25,,,,,,,,,,,,,52,,52,,,,,,52,,,,,,,,52,,,,,,,,,,,,,,',
',,,,,,25,,,,,25,25,,,,,,,,,,,25,,,,,,,,,,,25,,,,52,,,52,,,,,,,,,,,,',
',,,,,,,,,52,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,25,,,,,,,,,,25,,,,,,,,,,,',
',,,,,,52,,,,,52,52,,,,,,,,,,,52,,,,,,,25,,,,52,,25,,,,32,,,,,,,,25,32',
'32,32,,,,,25,25,,,,,32,32,32,,,,,,,,,,,,,,,32,32,25,25,,,25,,52,,,,25',
'52,,,,,,,,,,52,,,,,,,,,,,,,,25,,,,,,,,25,,,,25,,,,,,,,,,,,,,,,52,,,',
',,52,,,,,,,,,,,,52,,,,,,,,52,52,,,,,,,,,,,,,25,,,,,,,,,,,52,52,,,52',
',25,,,,52,,25,,25,,,,,,,,,,,,,,,,,,32,32,32,52,,32,32,,,,,52,,,,52,',
',,,,32,,,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32',
'32,32,32,32,32,32,,,,,,,32,32,,,,,,,,32,,,,,,52,32,,32,,32,32,,,,,,',
',,,,52,,,,,,52,,52,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,32,,32,32,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,32,,32,,32,,,,,,,,,,,,,,,32,,,,,,,,,32,32,,,,,,,,,,32,,,32,',
',,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,32,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,32,32,,,32,32,32,32,,,,32,32,,,32,32,,,,',
',,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,32,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,,,,,,,,,,',
',,,32,32,32,32,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,32' ]
        racc_goto_check = arr = ::Array.new(2985, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   179,    32,   nil,    59,   112,    61,   140,  -306,   751,
  -499,  -561,  -626,   nil,  -323,    32,   161,    20,  -188,   100,
    45,   451,     4,  -206,  -361,  1233,   435,  -177,   -40,    -8,
    44,   -19,  2006,   -24,   nil,   nil,    22,  -198,    51,  -252,
  -375,   487,  -330,   nil,   130,    47,    37,   531,   nil,    19,
    53,  -214,  1347,   865,  -258,    74,   -63,    20,   nil,   nil,
    34,    10,  -229,    40,   -20,    58,   113,   -57,    -8,  -238,
    98,    18,  -299,  -261,  -427,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   104,   117,   -50,   nil,   116,  -252,
  -624,  -469,  -315,   112,  -177,    28,  -526,   111,   126,   126,
  -335,   129,   124,  -519,   125,  -520,  -381,  -713,  -386,  -531,
  -162,  -171,  -388,  -646,  -707,   743,  -447,  -724,  -439,   nil,
   341,  -459,   201,   227,  -429,   282,  -551,  -577,   nil,  -536,
  -646,  -738,  -736,  -111,  -458,   164,  -302,  -283,   -21,   -27,
   nil,   -35,   -34,  -671,  -435,  -558,   nil,   nil,   170,   176,
    60,   176,   178,  -229,  -246,   184,    55,    78,  -441,  -441,
  -429,  -266,   nil,   nil,   554,  -527,  -586,   -62,  -522,  -693,
   nil,  -589,  -749,   nil,   nil,  -433 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   343,   290,   nil,   519,
   nil,   831,   nil,   287,   288,   nil,   nil,   nil,    11,    12,
    18,   226,   318,   nil,   nil,   224,   225,   nil,   nil,    17,
   nil,   438,    21,    22,    23,    24,   nil,   671,   nil,   nil,
   nil,   307,   nil,    25,   409,    32,   nil,   nil,    34,    37,
    36,   nil,   221,   222,   355,   nil,   129,   417,   128,   131,
    75,    76,   nil,    90,    46,   280,   nil,   800,   410,   nil,
   411,   422,   626,   484,   278,   264,    47,    48,    49,    50,
    51,    52,    53,    54,    55,   nil,   265,    61,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   564,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   698,   823,   nil,   699,   920,   772,
   535,   nil,   536,   nil,   nil,   537,   nil,   539,   642,   nil,
   nil,   nil,   545,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   421,   nil,   nil,   nil,   nil,   nil,    74,    77,    78,   nil,
   nil,   nil,   nil,   nil,   598,   nil,   nil,   nil,   nil,   nil,
   nil,   815,   733,   534,   nil,   538,   549,   551,   552,   784,
   555,   556,   785,   559,   562,   282 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 144, :_reduce_none,
  2, 145, :_reduce_2,
  0, 146, :_reduce_3,
  1, 146, :_reduce_4,
  3, 146, :_reduce_5,
  2, 146, :_reduce_6,
  1, 148, :_reduce_none,
  4, 148, :_reduce_8,
  4, 151, :_reduce_9,
  2, 152, :_reduce_10,
  0, 156, :_reduce_11,
  1, 156, :_reduce_12,
  3, 156, :_reduce_13,
  2, 156, :_reduce_14,
  1, 157, :_reduce_none,
  4, 157, :_reduce_16,
  0, 173, :_reduce_17,
  4, 150, :_reduce_18,
  3, 150, :_reduce_19,
  3, 150, :_reduce_20,
  3, 150, :_reduce_21,
  2, 150, :_reduce_22,
  3, 150, :_reduce_23,
  3, 150, :_reduce_24,
  3, 150, :_reduce_25,
  3, 150, :_reduce_26,
  3, 150, :_reduce_27,
  4, 150, :_reduce_28,
  1, 150, :_reduce_none,
  3, 150, :_reduce_30,
  3, 150, :_reduce_31,
  6, 150, :_reduce_32,
  5, 150, :_reduce_33,
  5, 150, :_reduce_34,
  5, 150, :_reduce_35,
  5, 150, :_reduce_36,
  3, 150, :_reduce_37,
  3, 150, :_reduce_38,
  3, 150, :_reduce_39,
  1, 150, :_reduce_none,
  3, 161, :_reduce_41,
  3, 161, :_reduce_42,
  1, 172, :_reduce_none,
  3, 172, :_reduce_44,
  3, 172, :_reduce_45,
  3, 172, :_reduce_46,
  2, 172, :_reduce_47,
  1, 172, :_reduce_none,
  1, 160, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 177, :_reduce_none,
  4, 177, :_reduce_53,
  0, 185, :_reduce_54,
  5, 182, :_reduce_55,
  1, 184, :_reduce_none,
  2, 176, :_reduce_57,
  3, 176, :_reduce_58,
  4, 176, :_reduce_59,
  5, 176, :_reduce_60,
  4, 176, :_reduce_61,
  5, 176, :_reduce_62,
  2, 176, :_reduce_63,
  2, 176, :_reduce_64,
  2, 176, :_reduce_65,
  2, 176, :_reduce_66,
  2, 176, :_reduce_67,
  1, 162, :_reduce_68,
  3, 162, :_reduce_69,
  1, 189, :_reduce_70,
  3, 189, :_reduce_71,
  1, 188, :_reduce_none,
  2, 188, :_reduce_73,
  3, 188, :_reduce_74,
  5, 188, :_reduce_75,
  2, 188, :_reduce_76,
  4, 188, :_reduce_77,
  2, 188, :_reduce_78,
  4, 188, :_reduce_79,
  1, 188, :_reduce_80,
  3, 188, :_reduce_81,
  1, 192, :_reduce_none,
  3, 192, :_reduce_83,
  2, 191, :_reduce_84,
  3, 191, :_reduce_85,
  1, 194, :_reduce_86,
  3, 194, :_reduce_87,
  1, 193, :_reduce_88,
  1, 193, :_reduce_89,
  4, 193, :_reduce_90,
  3, 193, :_reduce_91,
  3, 193, :_reduce_92,
  3, 193, :_reduce_93,
  3, 193, :_reduce_94,
  2, 193, :_reduce_95,
  1, 193, :_reduce_96,
  1, 169, :_reduce_97,
  1, 169, :_reduce_98,
  4, 169, :_reduce_99,
  3, 169, :_reduce_100,
  3, 169, :_reduce_101,
  3, 169, :_reduce_102,
  3, 169, :_reduce_103,
  2, 169, :_reduce_104,
  1, 169, :_reduce_105,
  1, 197, :_reduce_106,
  1, 197, :_reduce_none,
  2, 198, :_reduce_108,
  1, 198, :_reduce_109,
  3, 198, :_reduce_110,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 202, :_reduce_116,
  1, 202, :_reduce_none,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  1, 159, :_reduce_120,
  0, 205, :_reduce_121,
  4, 159, :_reduce_122,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  3, 175, :_reduce_194,
  5, 175, :_reduce_195,
  3, 175, :_reduce_196,
  5, 175, :_reduce_197,
  6, 175, :_reduce_198,
  5, 175, :_reduce_199,
  5, 175, :_reduce_200,
  5, 175, :_reduce_201,
  5, 175, :_reduce_202,
  4, 175, :_reduce_203,
  3, 175, :_reduce_204,
  3, 175, :_reduce_205,
  3, 175, :_reduce_206,
  3, 175, :_reduce_207,
  3, 175, :_reduce_208,
  3, 175, :_reduce_209,
  3, 175, :_reduce_210,
  3, 175, :_reduce_211,
  3, 175, :_reduce_212,
  4, 175, :_reduce_213,
  2, 175, :_reduce_214,
  2, 175, :_reduce_215,
  3, 175, :_reduce_216,
  3, 175, :_reduce_217,
  3, 175, :_reduce_218,
  3, 175, :_reduce_219,
  3, 175, :_reduce_220,
  3, 175, :_reduce_221,
  3, 175, :_reduce_222,
  3, 175, :_reduce_223,
  3, 175, :_reduce_224,
  3, 175, :_reduce_225,
  3, 175, :_reduce_226,
  3, 175, :_reduce_227,
  3, 175, :_reduce_228,
  2, 175, :_reduce_229,
  2, 175, :_reduce_230,
  3, 175, :_reduce_231,
  3, 175, :_reduce_232,
  3, 175, :_reduce_233,
  3, 175, :_reduce_234,
  3, 175, :_reduce_235,
  6, 175, :_reduce_236,
  1, 175, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_none,
  2, 209, :_reduce_none,
  4, 209, :_reduce_241,
  2, 209, :_reduce_242,
  3, 214, :_reduce_243,
  0, 215, :_reduce_244,
  1, 215, :_reduce_none,
  0, 166, :_reduce_246,
  1, 166, :_reduce_none,
  2, 166, :_reduce_none,
  4, 166, :_reduce_249,
  2, 166, :_reduce_250,
  1, 187, :_reduce_251,
  2, 187, :_reduce_252,
  2, 187, :_reduce_253,
  4, 187, :_reduce_254,
  1, 187, :_reduce_255,
  0, 218, :_reduce_256,
  2, 181, :_reduce_257,
  2, 217, :_reduce_258,
  2, 216, :_reduce_259,
  0, 216, :_reduce_260,
  1, 211, :_reduce_261,
  2, 211, :_reduce_262,
  3, 211, :_reduce_263,
  4, 211, :_reduce_264,
  1, 171, :_reduce_265,
  1, 171, :_reduce_none,
  3, 170, :_reduce_267,
  4, 170, :_reduce_268,
  2, 170, :_reduce_269,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_280,
  0, 241, :_reduce_281,
  4, 207, :_reduce_282,
  0, 242, :_reduce_283,
  0, 243, :_reduce_284,
  6, 207, :_reduce_285,
  0, 244, :_reduce_286,
  4, 207, :_reduce_287,
  3, 207, :_reduce_288,
  3, 207, :_reduce_289,
  2, 207, :_reduce_290,
  3, 207, :_reduce_291,
  3, 207, :_reduce_292,
  1, 207, :_reduce_293,
  4, 207, :_reduce_294,
  3, 207, :_reduce_295,
  1, 207, :_reduce_296,
  5, 207, :_reduce_297,
  4, 207, :_reduce_298,
  3, 207, :_reduce_299,
  2, 207, :_reduce_300,
  1, 207, :_reduce_none,
  2, 207, :_reduce_302,
  2, 207, :_reduce_303,
  6, 207, :_reduce_304,
  6, 207, :_reduce_305,
  0, 245, :_reduce_306,
  0, 246, :_reduce_307,
  7, 207, :_reduce_308,
  0, 247, :_reduce_309,
  0, 248, :_reduce_310,
  7, 207, :_reduce_311,
  5, 207, :_reduce_312,
  4, 207, :_reduce_313,
  0, 249, :_reduce_314,
  0, 250, :_reduce_315,
  9, 207, :_reduce_316,
  0, 251, :_reduce_317,
  6, 207, :_reduce_318,
  0, 252, :_reduce_319,
  7, 207, :_reduce_320,
  0, 253, :_reduce_321,
  5, 207, :_reduce_322,
  0, 254, :_reduce_323,
  6, 207, :_reduce_324,
  0, 255, :_reduce_325,
  0, 256, :_reduce_326,
  9, 207, :_reduce_327,
  1, 207, :_reduce_328,
  1, 207, :_reduce_329,
  1, 207, :_reduce_330,
  1, 207, :_reduce_331,
  1, 165, :_reduce_none,
  1, 232, :_reduce_none,
  1, 232, :_reduce_none,
  2, 232, :_reduce_335,
  1, 234, :_reduce_none,
  1, 234, :_reduce_none,
  1, 233, :_reduce_none,
  5, 233, :_reduce_339,
  1, 154, :_reduce_none,
  2, 154, :_reduce_341,
  1, 236, :_reduce_none,
  1, 236, :_reduce_none,
  1, 257, :_reduce_344,
  3, 257, :_reduce_345,
  1, 260, :_reduce_346,
  3, 260, :_reduce_347,
  1, 259, :_reduce_none,
  4, 259, :_reduce_349,
  6, 259, :_reduce_350,
  3, 259, :_reduce_351,
  5, 259, :_reduce_352,
  2, 259, :_reduce_353,
  4, 259, :_reduce_354,
  1, 259, :_reduce_355,
  3, 259, :_reduce_356,
  4, 261, :_reduce_357,
  2, 261, :_reduce_358,
  2, 261, :_reduce_359,
  1, 261, :_reduce_360,
  2, 266, :_reduce_361,
  0, 266, :_reduce_362,
  6, 267, :_reduce_363,
  8, 267, :_reduce_364,
  4, 267, :_reduce_365,
  6, 267, :_reduce_366,
  4, 267, :_reduce_367,
  2, 267, :_reduce_none,
  6, 267, :_reduce_369,
  2, 267, :_reduce_370,
  4, 267, :_reduce_371,
  6, 267, :_reduce_372,
  2, 267, :_reduce_373,
  4, 267, :_reduce_374,
  2, 267, :_reduce_375,
  4, 267, :_reduce_376,
  1, 267, :_reduce_none,
  0, 183, :_reduce_378,
  1, 183, :_reduce_379,
  3, 271, :_reduce_380,
  1, 271, :_reduce_381,
  4, 271, :_reduce_382,
  1, 272, :_reduce_383,
  4, 272, :_reduce_384,
  1, 273, :_reduce_385,
  3, 273, :_reduce_386,
  1, 274, :_reduce_387,
  1, 274, :_reduce_none,
  0, 278, :_reduce_389,
  0, 279, :_reduce_390,
  4, 231, :_reduce_391,
  4, 276, :_reduce_392,
  1, 276, :_reduce_393,
  3, 277, :_reduce_394,
  3, 277, :_reduce_395,
  0, 282, :_reduce_396,
  5, 281, :_reduce_397,
  2, 178, :_reduce_398,
  4, 178, :_reduce_399,
  5, 178, :_reduce_400,
  5, 178, :_reduce_401,
  2, 230, :_reduce_402,
  4, 230, :_reduce_403,
  4, 230, :_reduce_404,
  3, 230, :_reduce_405,
  3, 230, :_reduce_406,
  3, 230, :_reduce_407,
  2, 230, :_reduce_408,
  1, 230, :_reduce_409,
  4, 230, :_reduce_410,
  0, 284, :_reduce_411,
  5, 229, :_reduce_412,
  0, 285, :_reduce_413,
  5, 229, :_reduce_414,
  5, 235, :_reduce_415,
  1, 286, :_reduce_416,
  1, 286, :_reduce_none,
  6, 153, :_reduce_418,
  0, 153, :_reduce_419,
  1, 287, :_reduce_420,
  1, 287, :_reduce_none,
  1, 287, :_reduce_none,
  2, 288, :_reduce_423,
  1, 288, :_reduce_none,
  2, 155, :_reduce_425,
  1, 155, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 220, :_reduce_430,
  1, 290, :_reduce_431,
  2, 290, :_reduce_432,
  3, 291, :_reduce_433,
  1, 291, :_reduce_434,
  1, 291, :_reduce_435,
  3, 221, :_reduce_436,
  4, 222, :_reduce_437,
  3, 223, :_reduce_438,
  0, 295, :_reduce_439,
  3, 295, :_reduce_440,
  1, 296, :_reduce_441,
  2, 296, :_reduce_442,
  3, 225, :_reduce_443,
  0, 298, :_reduce_444,
  3, 298, :_reduce_445,
  3, 224, :_reduce_446,
  3, 226, :_reduce_447,
  0, 299, :_reduce_448,
  3, 299, :_reduce_449,
  0, 300, :_reduce_450,
  3, 300, :_reduce_451,
  0, 292, :_reduce_452,
  2, 292, :_reduce_453,
  0, 293, :_reduce_454,
  2, 293, :_reduce_455,
  0, 294, :_reduce_456,
  2, 294, :_reduce_457,
  1, 297, :_reduce_458,
  2, 297, :_reduce_459,
  0, 302, :_reduce_460,
  4, 297, :_reduce_461,
  1, 301, :_reduce_462,
  1, 301, :_reduce_463,
  1, 301, :_reduce_464,
  1, 301, :_reduce_none,
  1, 203, :_reduce_466,
  3, 204, :_reduce_467,
  1, 289, :_reduce_468,
  2, 289, :_reduce_469,
  1, 206, :_reduce_470,
  1, 206, :_reduce_471,
  1, 206, :_reduce_472,
  1, 206, :_reduce_473,
  1, 195, :_reduce_474,
  1, 195, :_reduce_475,
  1, 195, :_reduce_476,
  1, 195, :_reduce_477,
  1, 195, :_reduce_478,
  1, 196, :_reduce_479,
  1, 196, :_reduce_480,
  1, 196, :_reduce_481,
  1, 196, :_reduce_482,
  1, 196, :_reduce_483,
  1, 196, :_reduce_484,
  1, 196, :_reduce_485,
  1, 227, :_reduce_486,
  1, 227, :_reduce_487,
  1, 164, :_reduce_488,
  1, 164, :_reduce_489,
  1, 168, :_reduce_490,
  1, 168, :_reduce_491,
  1, 237, :_reduce_492,
  0, 303, :_reduce_493,
  4, 237, :_reduce_494,
  2, 237, :_reduce_495,
  3, 239, :_reduce_496,
  0, 305, :_reduce_497,
  3, 239, :_reduce_498,
  4, 304, :_reduce_499,
  2, 304, :_reduce_500,
  2, 304, :_reduce_501,
  1, 304, :_reduce_502,
  2, 307, :_reduce_503,
  0, 307, :_reduce_504,
  6, 280, :_reduce_505,
  8, 280, :_reduce_506,
  4, 280, :_reduce_507,
  6, 280, :_reduce_508,
  4, 280, :_reduce_509,
  6, 280, :_reduce_510,
  2, 280, :_reduce_511,
  4, 280, :_reduce_512,
  6, 280, :_reduce_513,
  2, 280, :_reduce_514,
  4, 280, :_reduce_515,
  2, 280, :_reduce_516,
  4, 280, :_reduce_517,
  1, 280, :_reduce_518,
  0, 280, :_reduce_519,
  1, 275, :_reduce_520,
  1, 275, :_reduce_521,
  1, 275, :_reduce_522,
  1, 275, :_reduce_523,
  1, 258, :_reduce_none,
  1, 258, :_reduce_525,
  1, 309, :_reduce_526,
  3, 309, :_reduce_527,
  1, 268, :_reduce_528,
  3, 268, :_reduce_529,
  1, 310, :_reduce_530,
  2, 311, :_reduce_531,
  1, 311, :_reduce_532,
  2, 312, :_reduce_533,
  1, 312, :_reduce_534,
  1, 262, :_reduce_535,
  3, 262, :_reduce_536,
  1, 306, :_reduce_537,
  3, 306, :_reduce_538,
  1, 313, :_reduce_none,
  1, 313, :_reduce_none,
  2, 263, :_reduce_541,
  1, 263, :_reduce_542,
  3, 314, :_reduce_543,
  3, 315, :_reduce_544,
  1, 269, :_reduce_545,
  3, 269, :_reduce_546,
  1, 308, :_reduce_547,
  3, 308, :_reduce_548,
  1, 316, :_reduce_none,
  1, 316, :_reduce_none,
  2, 270, :_reduce_551,
  1, 270, :_reduce_552,
  1, 317, :_reduce_none,
  1, 317, :_reduce_none,
  2, 265, :_reduce_555,
  2, 264, :_reduce_556,
  0, 264, :_reduce_557,
  1, 240, :_reduce_none,
  3, 240, :_reduce_559,
  0, 228, :_reduce_560,
  2, 228, :_reduce_none,
  1, 213, :_reduce_562,
  3, 213, :_reduce_563,
  3, 318, :_reduce_564,
  2, 318, :_reduce_565,
  2, 318, :_reduce_566,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  0, 147, :_reduce_none,
  1, 147, :_reduce_none,
  0, 174, :_reduce_none,
  1, 174, :_reduce_none,
  2, 190, :_reduce_583,
  2, 167, :_reduce_584,
  0, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 238, :_reduce_588,
  1, 238, :_reduce_none,
  1, 149, :_reduce_none,
  2, 149, :_reduce_none,
  0, 210, :_reduce_592 ]

racc_reduce_n = 593

racc_shift_n = 1017

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tDSTAR => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tREGEXP_OPT => 119,
  :tWORDS_BEG => 120,
  :tQWORDS_BEG => 121,
  :tSYMBOLS_BEG => 122,
  :tQSYMBOLS_BEG => 123,
  :tSTRING_DBEG => 124,
  :tSTRING_DVAR => 125,
  :tSTRING_END => 126,
  :tSTRING_DEND => 127,
  :tSTRING => 128,
  :tSYMBOL => 129,
  :tNL => 130,
  :tEH => 131,
  :tCOLON => 132,
  :tCOMMA => 133,
  :tSPACE => 134,
  :tSEMI => 135,
  :tLAMBDA => 136,
  :tLAMBEG => 137,
  :tCHARACTER => 138,
  :tRATIONAL => 139,
  :tIMAGINARY => 140,
  :tEQL => 141,
  :tLOWEST => 142 }

racc_nt_base = 143

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tDSTAR",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSYMBOLS_BEG",
  "tQSYMBOLS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING_DEND",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tRATIONAL",
  "tIMAGINARY",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "stmt_or_begin",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "mrhs_arg",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "dot_or_colon",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "fcall",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "simple_numeric",
  "primary",
  "arg_value",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "symbols",
  "qsymbols",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@21",
  "@22",
  "f_args",
  "do_block",
  "@23",
  "operation3",
  "@24",
  "@25",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "symbol_list",
  "qword_list",
  "qsym_list",
  "string_dvar",
  "@26",
  "@27",
  "args_tail",
  "@28",
  "f_kwarg",
  "opt_args_tail",
  "f_optarg",
  "f_arg_item",
  "f_label",
  "f_kw",
  "f_block_kw",
  "kwrest_mark",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby21.y', 52)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 57)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 61)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 65)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 69)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby21.y', 75)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 80)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 96)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 101)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 105)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 109)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 113)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'ruby21.y', 119)
  def _reduce_16(val, _values, result)
                          diagnostic :error, :begin_in_method, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 124)
  def _reduce_17(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 128)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 132)
  def _reduce_19(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 138)
  def _reduce_20(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 144)
  def _reduce_21(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 148)
  def _reduce_22(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 152)
  def _reduce_23(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 157)
  def _reduce_24(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 162)
  def _reduce_25(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 166)
  def _reduce_26(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 170)
  def _reduce_27(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 178)
  def _reduce_28(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'ruby21.y', 183)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 187)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 191)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 198)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 205)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 212)
  def _reduce_35(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 219)
  def _reduce_36(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 226)
  def _reduce_37(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 230)
  def _reduce_38(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 235)
  def _reduce_39(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'ruby21.y', 241)
  def _reduce_41(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 245)
  def _reduce_42(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'ruby21.y', 251)
  def _reduce_44(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 255)
  def _reduce_45(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 259)
  def _reduce_46(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 263)
  def _reduce_47(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'ruby21.y', 275)
  def _reduce_53(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 281)
  def _reduce_54(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 285)
  def _reduce_55(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby21.y', 294)
  def _reduce_57(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 299)
  def _reduce_58(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 308)
  def _reduce_59(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 313)
  def _reduce_60(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 322)
  def _reduce_61(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 327)
  def _reduce_62(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 336)
  def _reduce_63(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 341)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 346)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 351)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 356)
  def _reduce_67(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 362)
  def _reduce_68(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 366)
  def _reduce_69(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 371)
  def _reduce_70(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 375)
  def _reduce_71(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'ruby21.y', 381)
  def _reduce_73(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 386)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 391)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 397)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 402)
  def _reduce_77(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 408)
  def _reduce_78(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 412)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 417)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 421)
  def _reduce_81(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 82 omitted

module_eval(<<'.,.,', 'ruby21.y', 428)
  def _reduce_83(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 433)
  def _reduce_84(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 437)
  def _reduce_85(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 442)
  def _reduce_86(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 446)
  def _reduce_87(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 451)
  def _reduce_88(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 455)
  def _reduce_89(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 459)
  def _reduce_90(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 463)
  def _reduce_91(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 467)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 471)
  def _reduce_93(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 475)
  def _reduce_94(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 480)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 485)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 490)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 494)
  def _reduce_98(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 498)
  def _reduce_99(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 502)
  def _reduce_100(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 506)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 510)
  def _reduce_102(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 514)
  def _reduce_103(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 519)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 524)
  def _reduce_105(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 529)
  def _reduce_106(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'ruby21.y', 535)
  def _reduce_108(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 539)
  def _reduce_109(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 543)
  def _reduce_110(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'ruby21.y', 552)
  def _reduce_116(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'ruby21.y', 561)
  def _reduce_120(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 565)
  def _reduce_121(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 569)
  def _reduce_122(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

module_eval(<<'.,.,', 'ruby21.y', 590)
  def _reduce_194(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 594)
  def _reduce_195(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 604)
  def _reduce_196(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 608)
  def _reduce_197(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 618)
  def _reduce_198(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 625)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 632)
  def _reduce_200(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 639)
  def _reduce_201(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 646)
  def _reduce_202(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                      result = @builder.op_assign(const, val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 652)
  def _reduce_203(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_global(val[0], val[1]))
                      result = @builder.op_assign(const, val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 658)
  def _reduce_204(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 662)
  def _reduce_205(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 666)
  def _reduce_206(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 670)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 674)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 678)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 682)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 686)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 690)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 694)
  def _reduce_213(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    val[1], val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 700)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 704)
  def _reduce_215(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 708)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 712)
  def _reduce_217(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 716)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 720)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 724)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 728)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 732)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 736)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 740)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 744)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 748)
  def _reduce_226(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 752)
  def _reduce_227(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 756)
  def _reduce_228(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 760)
  def _reduce_229(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 764)
  def _reduce_230(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 768)
  def _reduce_231(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 772)
  def _reduce_232(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 776)
  def _reduce_233(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 780)
  def _reduce_234(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 784)
  def _reduce_235(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 789)
  def _reduce_236(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

# reduce 240 omitted

module_eval(<<'.,.,', 'ruby21.y', 800)
  def _reduce_241(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 804)
  def _reduce_242(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 809)
  def _reduce_243(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 814)
  def _reduce_244(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 245 omitted

module_eval(<<'.,.,', 'ruby21.y', 820)
  def _reduce_246(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 247 omitted

# reduce 248 omitted

module_eval(<<'.,.,', 'ruby21.y', 826)
  def _reduce_249(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 830)
  def _reduce_250(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 835)
  def _reduce_251(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 839)
  def _reduce_252(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 843)
  def _reduce_253(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 848)
  def _reduce_254(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 854)
  def _reduce_255(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 858)
  def _reduce_256(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 863)
  def _reduce_257(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 870)
  def _reduce_258(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 875)
  def _reduce_259(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 879)
  def _reduce_260(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 884)
  def _reduce_261(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 888)
  def _reduce_262(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 892)
  def _reduce_263(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 896)
  def _reduce_264(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 901)
  def _reduce_265(val, _values, result)
                          result = @builder.array(nil, val[0], nil)
                    
    result
  end
.,.,

# reduce 266 omitted

module_eval(<<'.,.,', 'ruby21.y', 907)
  def _reduce_267(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 911)
  def _reduce_268(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 915)
  def _reduce_269(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

module_eval(<<'.,.,', 'ruby21.y', 930)
  def _reduce_280(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 934)
  def _reduce_281(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 939)
  def _reduce_282(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin_keyword(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 945)
  def _reduce_283(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 950)
  def _reduce_284(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 954)
  def _reduce_285(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 960)
  def _reduce_286(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 964)
  def _reduce_287(val, _values, result)
                          result = @builder.begin(val[0], nil, val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 968)
  def _reduce_288(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 972)
  def _reduce_289(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 976)
  def _reduce_290(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 980)
  def _reduce_291(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 984)
  def _reduce_292(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 988)
  def _reduce_293(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 992)
  def _reduce_294(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 996)
  def _reduce_295(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1000)
  def _reduce_296(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1004)
  def _reduce_297(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1009)
  def _reduce_298(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1013)
  def _reduce_299(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1017)
  def _reduce_300(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 301 omitted

module_eval(<<'.,.,', 'ruby21.y', 1026)
  def _reduce_302(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1032)
  def _reduce_303(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1040)
  def _reduce_304(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1047)
  def _reduce_305(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1054)
  def _reduce_306(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1058)
  def _reduce_307(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1062)
  def _reduce_308(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1067)
  def _reduce_309(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1071)
  def _reduce_310(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1075)
  def _reduce_311(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1080)
  def _reduce_312(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1088)
  def _reduce_313(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1096)
  def _reduce_314(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1100)
  def _reduce_315(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1104)
  def _reduce_316(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1110)
  def _reduce_317(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1115)
  def _reduce_318(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1129)
  def _reduce_319(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1137)
  def _reduce_320(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1147)
  def _reduce_321(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1152)
  def _reduce_322(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1164)
  def _reduce_323(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1170)
  def _reduce_324(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1179)
  def _reduce_325(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1183)
  def _reduce_326(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1189)
  def _reduce_327(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1198)
  def _reduce_328(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1202)
  def _reduce_329(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1206)
  def _reduce_330(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1210)
  def _reduce_331(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

module_eval(<<'.,.,', 'ruby21.y', 1219)
  def _reduce_335(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

module_eval(<<'.,.,', 'ruby21.y', 1228)
  def _reduce_339(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby21.y', 1239)
  def _reduce_341(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 342 omitted

# reduce 343 omitted

module_eval(<<'.,.,', 'ruby21.y', 1247)
  def _reduce_344(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1251)
  def _reduce_345(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1256)
  def _reduce_346(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1260)
  def _reduce_347(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 348 omitted

module_eval(<<'.,.,', 'ruby21.y', 1266)
  def _reduce_349(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1271)
  def _reduce_350(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1277)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1282)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1288)
  def _reduce_353(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1292)
  def _reduce_354(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1297)
  def _reduce_355(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1301)
  def _reduce_356(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1307)
  def _reduce_357(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1311)
  def _reduce_358(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1315)
  def _reduce_359(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1319)
  def _reduce_360(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1325)
  def _reduce_361(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1329)
  def _reduce_362(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1334)
  def _reduce_363(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1341)
  def _reduce_364(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1349)
  def _reduce_365(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1355)
  def _reduce_366(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1362)
  def _reduce_367(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 368 omitted

module_eval(<<'.,.,', 'ruby21.y', 1369)
  def _reduce_369(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1376)
  def _reduce_370(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1380)
  def _reduce_371(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1386)
  def _reduce_372(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1393)
  def _reduce_373(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1398)
  def _reduce_374(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1404)
  def _reduce_375(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1409)
  def _reduce_376(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 377 omitted

module_eval(<<'.,.,', 'ruby21.y', 1417)
  def _reduce_378(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1421)
  def _reduce_379(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1426)
  def _reduce_380(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1430)
  def _reduce_381(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1434)
  def _reduce_382(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1439)
  def _reduce_383(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1443)
  def _reduce_384(val, _values, result)
                          result = val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1448)
  def _reduce_385(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1452)
  def _reduce_386(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1457)
  def _reduce_387(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 388 omitted

module_eval(<<'.,.,', 'ruby21.y', 1462)
  def _reduce_389(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1466)
  def _reduce_390(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1471)
  def _reduce_391(val, _values, result)
                          @lexer.cmdarg = val[2]
                      @lexer.cmdarg.lexpop

                      result = [ val[1], val[3] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1481)
  def _reduce_392(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1485)
  def _reduce_393(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1490)
  def _reduce_394(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1494)
  def _reduce_395(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1499)
  def _reduce_396(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1503)
  def _reduce_397(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1510)
  def _reduce_398(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1516)
  def _reduce_399(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1522)
  def _reduce_400(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      method_call = @builder.call_method(val[0], val[1], val[2],
                                      lparen_t, args, rparen_t)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1532)
  def _reduce_401(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                      nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1542)
  def _reduce_402(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1548)
  def _reduce_403(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1554)
  def _reduce_404(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1560)
  def _reduce_405(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1564)
  def _reduce_406(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1570)
  def _reduce_407(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1576)
  def _reduce_408(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1582)
  def _reduce_409(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1586)
  def _reduce_410(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1591)
  def _reduce_411(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1595)
  def _reduce_412(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1601)
  def _reduce_413(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1605)
  def _reduce_414(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1612)
  def _reduce_415(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1618)
  def _reduce_416(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 417 omitted

module_eval(<<'.,.,', 'ruby21.y', 1624)
  def _reduce_418(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1637)
  def _reduce_419(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1642)
  def _reduce_420(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 421 omitted

# reduce 422 omitted

module_eval(<<'.,.,', 'ruby21.y', 1649)
  def _reduce_423(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 424 omitted

module_eval(<<'.,.,', 'ruby21.y', 1655)
  def _reduce_425(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

module_eval(<<'.,.,', 'ruby21.y', 1665)
  def _reduce_430(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1670)
  def _reduce_431(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1674)
  def _reduce_432(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1679)
  def _reduce_433(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1683)
  def _reduce_434(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1687)
  def _reduce_435(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1692)
  def _reduce_436(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1697)
  def _reduce_437(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1703)
  def _reduce_438(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1708)
  def _reduce_439(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1712)
  def _reduce_440(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1717)
  def _reduce_441(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1721)
  def _reduce_442(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1726)
  def _reduce_443(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1731)
  def _reduce_444(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1735)
  def _reduce_445(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1740)
  def _reduce_446(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1745)
  def _reduce_447(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1750)
  def _reduce_448(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1754)
  def _reduce_449(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1759)
  def _reduce_450(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1763)
  def _reduce_451(val, _values, result)
                          result = val[0] << @builder.symbol_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1768)
  def _reduce_452(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1772)
  def _reduce_453(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1777)
  def _reduce_454(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1781)
  def _reduce_455(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1786)
  def _reduce_456(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1790)
  def _reduce_457(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1795)
  def _reduce_458(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1799)
  def _reduce_459(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1803)
  def _reduce_460(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1808)
  def _reduce_461(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1816)
  def _reduce_462(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1820)
  def _reduce_463(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1824)
  def _reduce_464(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 465 omitted

module_eval(<<'.,.,', 'ruby21.y', 1831)
  def _reduce_466(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1836)
  def _reduce_467(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1841)
  def _reduce_468(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1845)
  def _reduce_469(val, _values, result)
                          result = @builder.negate(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1850)
  def _reduce_470(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1854)
  def _reduce_471(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1858)
  def _reduce_472(val, _values, result)
                          result = @builder.rational(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1862)
  def _reduce_473(val, _values, result)
                          result = @builder.complex(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1867)
  def _reduce_474(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1871)
  def _reduce_475(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1875)
  def _reduce_476(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1879)
  def _reduce_477(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1883)
  def _reduce_478(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1888)
  def _reduce_479(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1892)
  def _reduce_480(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1896)
  def _reduce_481(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1900)
  def _reduce_482(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1904)
  def _reduce_483(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1908)
  def _reduce_484(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1912)
  def _reduce_485(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1917)
  def _reduce_486(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1921)
  def _reduce_487(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1926)
  def _reduce_488(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1930)
  def _reduce_489(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1935)
  def _reduce_490(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1939)
  def _reduce_491(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1944)
  def _reduce_492(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1948)
  def _reduce_493(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1952)
  def _reduce_494(val, _values, result)
                          result = [ val[0], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1956)
  def _reduce_495(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1962)
  def _reduce_496(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1967)
  def _reduce_497(val, _values, result)
                          result = @lexer.in_kwarg
                      @lexer.in_kwarg = true
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1972)
  def _reduce_498(val, _values, result)
                          @lexer.in_kwarg = val[0]
                      result = @builder.args(nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1979)
  def _reduce_499(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1983)
  def _reduce_500(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1987)
  def _reduce_501(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1991)
  def _reduce_502(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1996)
  def _reduce_503(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2000)
  def _reduce_504(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2005)
  def _reduce_505(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2012)
  def _reduce_506(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2020)
  def _reduce_507(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2026)
  def _reduce_508(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2033)
  def _reduce_509(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2039)
  def _reduce_510(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2046)
  def _reduce_511(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2051)
  def _reduce_512(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2057)
  def _reduce_513(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2064)
  def _reduce_514(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2069)
  def _reduce_515(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2075)
  def _reduce_516(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2080)
  def _reduce_517(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2086)
  def _reduce_518(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2090)
  def _reduce_519(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2095)
  def _reduce_520(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2099)
  def _reduce_521(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2103)
  def _reduce_522(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2107)
  def _reduce_523(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 524 omitted

module_eval(<<'.,.,', 'ruby21.y', 2113)
  def _reduce_525(val, _values, result)
                          @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2120)
  def _reduce_526(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2124)
  def _reduce_527(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2129)
  def _reduce_528(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2133)
  def _reduce_529(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2138)
  def _reduce_530(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2147)
  def _reduce_531(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2151)
  def _reduce_532(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2156)
  def _reduce_533(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2160)
  def _reduce_534(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2165)
  def _reduce_535(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2169)
  def _reduce_536(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2174)
  def _reduce_537(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2178)
  def _reduce_538(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 539 omitted

# reduce 540 omitted

module_eval(<<'.,.,', 'ruby21.y', 2185)
  def _reduce_541(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.kwrestarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2191)
  def _reduce_542(val, _values, result)
                          result = [ @builder.kwrestarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2196)
  def _reduce_543(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2201)
  def _reduce_544(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2206)
  def _reduce_545(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2210)
  def _reduce_546(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2215)
  def _reduce_547(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2219)
  def _reduce_548(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 549 omitted

# reduce 550 omitted

module_eval(<<'.,.,', 'ruby21.y', 2226)
  def _reduce_551(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2232)
  def _reduce_552(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 553 omitted

# reduce 554 omitted

module_eval(<<'.,.,', 'ruby21.y', 2239)
  def _reduce_555(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2246)
  def _reduce_556(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2250)
  def _reduce_557(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 558 omitted

module_eval(<<'.,.,', 'ruby21.y', 2256)
  def _reduce_559(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2261)
  def _reduce_560(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 561 omitted

module_eval(<<'.,.,', 'ruby21.y', 2267)
  def _reduce_562(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2271)
  def _reduce_563(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2276)
  def _reduce_564(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2280)
  def _reduce_565(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2284)
  def _reduce_566(val, _values, result)
                          result = @builder.kwsplat(val[0], val[1])
                    
    result
  end
.,.,

# reduce 567 omitted

# reduce 568 omitted

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

# reduce 581 omitted

# reduce 582 omitted

module_eval(<<'.,.,', 'ruby21.y', 2295)
  def _reduce_583(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2299)
  def _reduce_584(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 585 omitted

# reduce 586 omitted

# reduce 587 omitted

module_eval(<<'.,.,', 'ruby21.y', 2305)
  def _reduce_588(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 589 omitted

# reduce 590 omitted

# reduce 591 omitted

module_eval(<<'.,.,', 'ruby21.y', 2314)
  def _reduce_592(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby21
  end   # module Parser
