# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class Ruby20 < Parser::Base

module_eval(<<'...end ruby20.y/module_eval...', 'ruby20.y', 2317)

  def version
    20
  end

  def default_encoding
    Encoding::UTF_8
  end
...end ruby20.y/module_eval...
##### State transition tables begin ###

clist = [
'-567,265,563,473,265,-98,-99,-567,-567,-567,-286,-100,-567,-567,-567',
'-84,-567,265,214,607,563,-70,563,642,257,-567,-567,-567,-567,605,584',
'258,-106,-101,215,-103,-567,-567,-101,-567,-567,-567,-567,-567,-103',
'563,511,803,-105,575,-286,-102,563,576,211,212,-102,-104,641,215,211',
'212,803,684,569,260,-567,-567,-567,-567,-567,-567,-567,-567,-567,-567',
'-567,-567,-567,-567,836,-100,-567,-567,-567,606,770,-567,264,-94,-567',
'264,677,-567,-567,604,-567,713,-567,-105,-567,215,-567,-567,264,-567',
'-567,-567,-567,-567,-289,-567,-567,-567,-89,-90,-563,-289,-289,-289',
'110,-563,-564,-289,-289,109,-289,-567,-563,-100,-567,-567,-567,-567',
'-100,-567,583,-567,110,-102,110,-97,-92,109,-94,109,-289,-289,215,-289',
'-289,-289,-289,-289,215,-94,-101,-96,-92,110,473,-101,-103,110,109,-93',
'-95,-103,109,-102,110,713,683,837,-102,109,-289,-289,-289,-289,-289',
'-289,-289,-289,-289,-289,-289,-289,-289,-289,-91,265,-289,-289,-289',
'-94,625,-485,-94,855,-289,110,-564,-289,-94,592,109,592,-289,642,-289',
'524,-289,-289,526,-289,-289,-289,-289,-289,-289,-289,524,-289,-92,523',
'713,-289,-289,-289,211,212,-289,-289,-289,-484,-289,-289,211,212,-289',
'-289,-484,-95,641,-289,-289,-289,-289,-104,-98,-484,-100,-409,755,260',
'-289,-289,-264,-289,-289,-289,-289,-289,-92,642,642,-92,749,594,593',
'594,593,-92,215,110,748,592,264,747,109,745,524,440,1003,526,-289,-289',
'-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,641,641',
'-289,-289,-289,-409,771,-289,-477,845,-289,209,-409,-289,-289,-477,-289',
'744,-289,592,-289,-409,-289,-289,215,-289,-289,-289,-289,-289,110,-289',
'110,-289,689,109,-106,109,592,-486,-409,594,593,603,592,-486,769,-289',
'-567,592,-289,-289,-289,-289,-471,-289,106,-289,-97,-104,210,-471,-471',
'-471,-106,768,-471,-471,-471,235,-471,702,976,542,541,540,-265,543,-471',
'977,-471,-471,-471,594,593,599,-90,-567,975,1004,-471,-471,-99,-471',
'-471,-471,-471,-471,-99,-103,-567,232,594,593,597,234,233,-567,594,593',
'595,592,-563,594,593,590,-567,1005,-101,854,-471,-471,-471,-471,-471',
'-471,-471,-471,-471,-471,-471,-471,-471,-471,716,-567,-471,-471,-471',
'-567,-471,-471,-476,569,-471,754,-567,-471,-471,-476,-471,-563,-471',
'948,-471,-567,-471,-471,-561,-471,-471,-471,-471,-471,571,-471,702,-471',
'542,541,540,572,543,393,-567,594,593,608,395,394,570,-471,-560,709,-471',
'-471,-471,-471,-474,-471,-485,-471,-91,-471,313,-474,-474,-474,-100',
'79,-474,-474,-474,702,-474,542,541,540,707,543,-474,80,-474,-474,-474',
'-474,-474,-474,110,967,-474,81,-561,109,-474,-474,-474,-474,-474,-474',
'-474,-474,511,110,-471,579,621,-89,109,110,698,-471,932,-98,109,-561',
'-560,110,828,899,-471,580,109,967,-474,-474,-474,-474,-474,-474,-474',
'-474,-474,-474,-474,-474,-474,-474,967,-560,-474,-474,-474,-471,-474',
'-474,215,235,-474,-96,-471,-474,-474,-94,-474,-105,-474,620,-474,-103',
'-474,-474,706,-474,-474,-474,-474,-474,705,-474,857,-474,784,-478,542',
'541,540,785,543,232,-478,110,689,234,233,-474,109,551,-474,-474,-474',
'-474,-567,-474,860,-474,-290,-474,862,-567,-567,-567,864,-290,-92,-567',
'-567,-483,-567,547,-101,110,-290,866,-483,-479,109,-567,556,555,559',
'558,-479,-483,524,552,215,526,-567,-567,-482,-567,-567,-567,-567,-567',
'215,-482,868,971,545,-289,542,541,540,549,543,-480,-289,-481,869,215',
'696,-564,-480,551,-481,-289,-567,-567,-567,-567,-567,-567,-567,-567',
'-567,-567,-567,-567,-567,-567,257,785,-567,-567,-567,547,626,258,506',
'507,-567,551,872,-567,556,555,559,558,-567,694,-567,552,-567,-567,549',
'-567,-567,-567,-567,-567,-332,-567,-567,-567,551,874,702,-332,542,541',
'540,-279,543,875,559,558,-332,-567,-279,552,-567,-567,671,-93,692,-567',
'877,-279,690,-102,286,69,70,71,9,57,-263,559,558,63,64,881,552,698,67',
'883,65,66,68,30,31,72,73,113,114,115,116,117,29,28,27,98,97,99,100,884',
'702,19,542,541,540,885,543,8,45,288,10,102,101,103,92,56,94,93,95,886',
'96,104,105,689,90,91,42,43,41,702,888,542,541,540,890,543,892,698,894',
'702,-289,542,541,540,894,543,701,-289,40,832,803,33,-564,215,58,59,-289',
'689,60,929,35,542,541,540,44,543,698,900,702,686,542,541,540,20,543',
'701,698,902,89,79,82,83,950,84,86,85,87,211,212,211,212,80,88,286,69',
'70,71,9,57,62,680,81,63,64,904,698,205,67,396,65,66,68,30,31,72,73,113',
'114,115,116,117,29,28,27,98,97,99,100,832,803,19,314,315,235,211,212',
'8,45,288,10,102,101,103,92,56,94,93,95,204,96,104,105,678,90,91,42,43',
'41,235,-586,-586,-586,-586,241,243,232,203,-586,-586,234,233,677,230',
'231,249,250,984,40,559,558,33,894,439,58,59,894,441,60,442,35,232,894',
'238,44,234,233,671,230,231,242,240,236,20,237,214,979,910,89,79,82,83',
'961,84,86,85,87,517,913,215,916,80,88,286,69,70,71,9,57,62,-266,81,63',
'64,215,894,950,67,978,65,66,68,30,31,72,73,113,114,115,116,117,29,28',
'27,98,97,99,100,660,-84,19,215,926,235,118,215,8,45,288,10,102,101,103',
'92,56,94,93,95,933,96,104,105,934,90,91,42,43,41,235,-586,-586,-586',
'-586,241,243,232,215,-586,-586,234,233,235,230,231,249,250,235,40,235',
'235,33,473,967,58,59,632,629,60,482,35,232,484,238,44,234,233,215,230',
'231,242,240,236,20,237,486,260,950,89,79,82,83,619,84,86,85,87,569,952',
'493,-69,80,88,286,69,70,71,9,57,62,383,81,63,64,215,496,497,67,953,65',
'66,68,30,31,72,73,618,215,614,967,504,29,28,27,98,97,99,100,-263,702',
'19,542,541,540,269,543,8,45,288,10,102,101,103,92,56,94,93,95,215,96',
'104,105,612,90,91,42,43,41,235,-586,-586,-586,-586,241,243,-290,698',
'-586,-586,-483,260,508,-290,609,249,250,-483,40,512,513,33,-290,965',
'58,59,-483,235,60,958,35,232,963,238,44,234,233,215,230,231,242,240',
'236,20,237,527,528,486,89,79,82,83,574,84,86,85,87,573,385,260,260,80',
'88,286,69,70,71,9,57,62,215,81,63,64,671,671,235,67,235,65,66,68,30',
'31,72,73,796,803,486,215,254,29,28,27,98,97,99,100,484,702,19,542,541',
'540,215,543,8,45,288,10,102,101,103,92,56,94,93,95,254,96,104,105,773',
'90,91,42,43,41,235,-586,-586,-586,-586,241,243,-484,698,-586,-586,436',
'215,312,-484,950,249,250,437,40,967,826,290,-484,,58,59,438,,60,,35',
'232,,238,44,234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,98,97,99,100,,929,19,542,541,540,,543,8,45,288,10',
'102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,-586,-586',
'-586,-586,241,243,579,-289,-586,-586,-290,,,578,-289,249,250,-290,40',
'-564,,290,580,-289,58,59,-290,,60,,35,232,,238,44,234,233,,230,231,242',
'240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9',
'57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100',
'739,740,19,,741,104,105,,8,45,288,10,102,101,103,92,56,94,93,95,,96',
'104,105,,90,91,42,43,41,235,239,244,245,246,241,243,-279,207,247,248',
'579,,,-279,208,249,250,932,40,,,33,-279,206,58,59,580,,60,,35,232,,238',
'44,234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,235,239,244,245,246,241,243,251,502',
'247,248,514,,,,503,249,250,515,40,,,33,,501,58,59,438,,60,,35,232,,238',
'44,234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,235,239,244,245,246,241,243,251,252',
'247,248,,-586,-586,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44,234',
'233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
'286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96',
'104,105,,90,91,42,43,41,235,239,244,245,246,241,243,251,252,247,248',
',-586,-586,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,',
'230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286',
'69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,235,-586,-586,-586,-586,241,243,,,-586,-586,,,,',
',249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,,230,231,242',
'240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,5,69,70,71,9,57',
'62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100',
',,19,,,,,,8,45,7,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42',
'43,41,235,,,,,,,,,,,,,,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238',
'44,234,233,,230,231,,,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95',
',96,104,105,,90,91,42,43,41,235,,,,,,,,,,,,,,,,249,250,,40,,,33,,,58',
'59,,,60,,35,232,,238,44,234,233,,230,231,,,236,20,237,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,5,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,7,10,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,,,,,,,,,,,,,,,,249,250',
',40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,,230,231,,,236,20,237',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45',
'288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,,',
',,,,,,,,,,,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,',
'230,231,,,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70',
'71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97',
'99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,235,,,,,,,,,,,,,,,,249,250,,40,,,33,,,58,59,,,60,,35',
'232,,238,44,234,233,,230,231,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,',
'80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,235,,,,,,,,,,,,,,,,249,250,,40,,,290',
',,58,59,,,60,,35,232,,238,44,234,233,,230,231,,,,20,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,,,,,,,,,,,,,,,,249',
'250,,40,,,33,,,58,59,,,60,,35,232,,,44,234,233,,230,231,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288',
'10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,',
',,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40',
',,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59',
',,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286',
'69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44',
',,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,5,69,70,71,9,57,62',
',81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19',
',,,,,8,45,7,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288',
'10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,',
',,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40',
',,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,630,8,45,288,10,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,235,239,244,245,246,241,243,251',
'252,247,248,,228,229,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44',
'234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,',
'80,88,,253,-569,-240,,,62,,81,-569,-569,-569,,,-569,-569,-569,,-569',
',,,,,,,,-569,-569,-569,-569,,,,,,,,-569,-569,,-569,-569,-569,-569,-569',
',,,,,,,,,,,,,,,,,,,,,,-569,-569,-569,-569,-569,-569,-569,-569,-569,-569',
'-569,-569,-569,-569,,,-569,-569,-569,,,-569,,,-569,,,-569,-569,,-569',
',-569,,-569,,-569,-569,,-569,-569,-569,-569,-569,,-569,-569,-569,,,',
',,,,,,,,,,-569,,,-569,-569,-569,-569,-568,-569,,-569,,,,-568,-568,-568',
',,-568,-568,-568,,-568,,,,,,,,,-568,-568,-568,-568,,,,,,,,-568,-568',
',-568,-568,-568,-568,-568,,,,,,,,,,,,,,,,,,,,,,,-568,-568,-568,-568',
'-568,-568,-568,-568,-568,-568,-568,-568,-568,-568,,,-568,-568,-568,',
',-568,,,-568,,,-568,-568,,-568,,-568,,-568,,-568,-568,,-568,-568,-568',
'-568,-568,,-568,-568,-568,,,,,,,,,,,,,,-568,,,-568,-568,-568,-568,-280',
'-568,,-568,,,,-280,-280,-280,,,-280,-280,-280,,-280,,,,,,,,,,-280,-280',
'-280,,,,,,,,-280,-280,,-280,-280,-280,-280,-280,,,,,,,,,,,,,,,,,,,,',
',,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280',
',,-280,-280,-280,,,-280,,,-280,,,-280,-280,,-280,,-280,,-280,,-280,-280',
',-280,-280,-280,-280,-280,,-280,,-280,,,,,,,,,,,,,,-280,,,-280,-280',
'-280,-280,,-280,,-280,286,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33',
',,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95',
',96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60',
',35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70',
'71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97',
'99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62',
',81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19',
',,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45',
'288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,',
',,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92',
'56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226',
',,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,98,97,99,100,,,19,,,,,,8,45,7,10,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44',
',,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,',
'81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227',
',,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,',
',,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220',
',,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226',
',,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,299,,,295,,,58,59,,,60',
',294,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,',
'57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97',
'99,100,,,227,,,,,630,,303,,,102,101,103,92,56,94,93,95,,96,104,105,',
'90,91,,,309,235,239,244,245,246,241,243,251,252,247,248,,228,229,,,249',
'250,,299,,,226,,,58,59,,,60,,,232,,238,,234,233,,230,231,242,240,236',
',237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,253,,311,,,62,,81,69,70',
'71,,57,,,,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97',
'99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91',
'42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,',
',,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,',
',,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68',
'305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220',
',,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,',
',,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,278,,,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301',
'302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280',
'96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60',
',,,,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70',
'71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97',
'99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91',
'42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,',
',102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,',
',,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,615,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,235,239,244,245,246,241,243,251',
'252,247,248,,228,229,,,249,250,,220,,,226,,,58,59,,,60,,,232,,238,44',
'234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,',
'80,88,110,253,,,,109,62,,81,69,70,71,,57,,,,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,345,,,33',
',,58,59,,,60,,35,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,303,,,102,101,103,350,56,94,93,351,,96',
'104,105,,90,91,,,309,,,,,,,,,,,,,,,,,357,,,352,,,226,,,58,59,,,60,,',
',,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,303,,,102,101,103,350,56,94,93,351,,96,104,105,,90,91,,',
'309,,,,,,,,,,,,,,,,,,,,352,,,226,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,9,57,62,,81,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,7,10,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,239,244,245,246',
'241,243,251,252,247,248,,228,229,,,249,250,,40,,,33,,,58,59,,,60,,35',
'232,,238,44,234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,253,,,,385,62,,81,69,70,71,,57,,,,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,',
'81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19',
',,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,',
',,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,',
'29,28,27,98,97,99,100,,,19,,,,,,8,45,,10,102,101,103,92,56,94,93,95',
',96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60',
',35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71',
',57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99',
'100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42',
'43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,401,,,,44,,,,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92',
'56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
'69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,401,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19',
',,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,',
',,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,215,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227',
',,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,',
',,,,,,,,,,,220,,,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101',
'103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,',
',220,,,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,215,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68',
'305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220',
',,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,',
',,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,9,57,62,,81,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,,10,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73',
',,,,,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,,,309,235,239,244,245,246,241,243,251,252,247',
'248,,228,229,,,249,250,,299,,,226,,,58,59,,,60,,,232,,238,,234,233,',
'230,231,242,240,236,,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,253',
',499,,,62,,81,69,70,71,,57,,,,63,64,,,,67,,65,66,68,305,306,72,73,,',
',,,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,299,,,295,,,58,59,,,60',
',,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57',
'62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99',
'100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42',
'43,41,,,,,,,,,,,,,,,,,,,,220,,,226,517,,58,59,,,60,,,,,,44,,,,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,',
',102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,',
',,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98',
'97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90',
'91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,',
',,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,',
',45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,',
',,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227',
',,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,',
',,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,',
',,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68',
'305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220',
',,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,',
',,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,654,',
'276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70',
'71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98',
'97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,276,,44',
',,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57',
'62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99',
'100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42',
'43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,9,57,62,,81,63,64,',
',,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45',
'288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,239',
'244,245,246,241,243,251,252,247,248,,228,229,,,249,250,,40,,,33,,,58',
'59,,,60,,35,232,,238,44,234,233,,230,231,242,240,236,20,237,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,253,,,,385,62,,81,69,70,71,,57,,,,63,64',
',,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,',
',,,,303,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,,,309,,,,,,',
',,,,,,,,,,,,,299,,,295,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92',
'56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,299,,,295,,,58',
'59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70',
'71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98',
'97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90',
'91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,',
',,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63',
'64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227',
',,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,',
',,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70',
'71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98',
'97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,654,,,,44',
',,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57',
'62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99',
'100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104,105,,90,91',
'42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,281,,,',
',,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63',
'64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227',
',,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,',
',,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,278,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226',
',,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,752,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
'69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42',
'43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,654,,276,,44,,,281',
',,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,276,,44,,,281,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92',
'56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226',
',,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227',
',,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,',
',,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,303,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,,,309',
',,,,,,,,,,,,,,,,,,,299,,,295,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68',
'305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,299,',
',295,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301',
'302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96',
'104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,401',
',,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,',
'57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97',
'99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91',
'42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,',
',102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,',
',,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,',
',,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,',
',,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,871,,,226',
',,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
'69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,654,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,',
',,,,,,,,,,,220,,,226,,,58,59,,,60,,,,276,,44,,,281,,,,,,225,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,871,,,226,,,58',
'59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70',
'71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98',
'97,99,100,,,227,,,,,,,303,,,102,101,103,92,56,94,93,95,,96,104,105,',
'90,91,,,309,,,,,,,,,,,,,,,,,,,,940,,,226,,,58,59,,,60,,,,,,,,,,,,,,',
',,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,',
',,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,235,239',
'244,245,246,241,243,251,252,247,248,,228,229,,,249,250,,220,,,226,,',
'58,59,,,60,,278,232,276,238,44,234,233,281,230,231,242,240,236,225,237',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,253,-246,,,,62,,81,-246,-246',
'-246,,,-246,-246,-246,702,-246,542,541,540,785,543,,,,-246,-246,,,,551',
',,,,,-246,-246,,-246,-246,-246,-246,-246,,,,,,,,,547,,,,,,,,,,,559,558',
',,,552,,,,,,,,,-246,,-246,,,,,-246,,-246,-246,-246,260,-246,-246,-246',
'-246,,-246,,,,,,,,,-246,-246,-246,,,,,,-246,-246,,-246,-246,,-246,-246',
'-246,-246,-246,,,,,-246,,,-246,,,,,-246,,,,,,,,,,-246,-246,-246,-246',
'-246,-246,-246,-246,-246,-246,-246,-246,-246,-246,,,-246,-246,-246,',
',-246,,260,-246,,,-246,-246,,-246,,-246,,-246,,-246,-246,,-246,-246',
'-246,-246,-246,-296,-246,-246,-246,,,,-296,-296,-296,,,-296,-296,-296',
',-296,-246,,,-246,-246,,-246,,-246,-296,-296,,,,,,,,,-296,-296,,-296',
'-296,-296,-296,-296,,,,,,,,,,,,,,,,,,,,,,,-296,-296,-296,-296,-296,-296',
'-296,-296,-296,-296,-296,-296,-296,-296,,,-296,-296,-296,,,-296,,269',
'-296,,,-296,-296,,-296,,-296,,-296,,-296,-296,,-296,-296,-296,-296,-296',
',-296,-408,-296,,,,,,-408,-408,-408,,,-408,-408,-408,-296,-408,,-296',
'-296,,-296,,-296,,-408,-408,-408,,,,,,,,,-408,-408,,-408,-408,-408,-408',
'-408,,,,,,,,,,,,,,,,,,,,,,,-408,-408,-408,-408,-408,-408,-408,-408,-408',
'-408,-408,-408,-408,-408,,,-408,-408,-408,,,-408,,260,-408,,,-408,-408',
',-408,,-408,,-408,,-408,-408,,-408,-408,-408,-408,-408,,-408,-408,-408',
',,,,,,,,,,,,,-408,,,-408,-408,,-408,,-408,170,181,171,194,167,187,177',
'176,197,198,192,175,174,169,195,199,200,179,168,182,186,188,180,173',
',,,189,196,191,190,183,193,178,166,185,184,,,,,,165,172,163,164,160',
'161,162,121,123,,,122,,,,,,,,154,155,,151,133,134,135,142,139,141,,',
'136,137,,,,156,157,143,144,,,,,,,,,,,,,,148,147,,132,153,150,149,158',
'145,146,140,138,130,152,131,,,159,89,,,,,,,,,,,,,,88,170,181,171,194',
'167,187,177,176,197,198,192,175,174,169,195,199,200,179,168,182,186',
'188,180,173,,,,189,196,191,190,183,193,178,166,185,184,,,,,,165,172',
'163,164,160,161,162,121,123,,,122,,,,,,,,154,155,,151,133,134,135,142',
'139,141,,,136,137,,,,156,157,143,144,,,,,,,,,,,,,,148,147,,132,153,150',
'149,158,145,146,140,138,130,152,131,,,159,89,,,,,,,,,,,,,,88,170,181',
'171,194,167,187,177,176,197,198,192,175,174,169,195,199,200,179,168',
'182,186,188,180,173,,,,189,196,191,190,183,193,178,166,185,184,,,,,',
'165,172,163,164,160,161,162,121,123,120,,122,,,,,,,,154,155,,151,133',
'134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,,,,,,,,,148,147',
',132,153,150,149,158,145,146,140,138,130,152,131,,,159,89,,,,,,,,,,',
',,,88,170,181,171,194,167,187,177,176,197,198,192,175,174,169,195,199',
'200,179,168,182,186,188,180,173,,,,189,196,191,190,183,193,178,166,185',
'184,,,,,,165,172,163,164,160,161,162,121,123,,,122,,,,,,,,154,155,,151',
'133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,,,,,,,,,148',
'147,,132,153,150,149,158,145,146,140,138,130,152,131,,,159,89,,,,,,',
',,,,,,,88,170,181,171,194,167,187,177,176,197,198,192,175,174,169,195',
'199,200,179,168,182,186,188,180,173,,,,189,196,191,190,183,193,178,166',
'185,184,,,,,,165,172,163,164,160,161,162,121,123,,,122,,,,,,,,154,155',
',151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,,,,,',
',,,148,147,,132,153,150,149,158,145,146,140,138,130,152,131,,,159,170',
'181,171,194,167,187,177,176,197,198,192,175,174,169,195,199,200,179',
'168,182,186,188,180,173,,,,189,196,191,368,367,369,366,166,185,184,',
',,,,165,172,163,164,363,364,365,361,123,94,93,362,,96,,,,,,154,155,',
'151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,373,,',
',,,,,148,147,,132,153,150,149,158,145,146,140,138,130,152,131,,,159',
'235,239,244,245,246,241,243,251,252,247,248,,228,229,,,249,250,,,702',
',542,541,540,549,543,,,,,,232,,238,551,234,233,,230,231,242,240,236',
',237,235,239,244,245,246,241,243,251,252,247,248,547,228,229,,,249,250',
'215,253,,,559,558,,,,552,,,,,232,,238,,234,233,,230,231,242,240,236',
',237,235,239,244,245,246,241,243,251,252,247,248,,228,229,,,249,250',
',253,702,,542,541,540,549,543,,,,,,232,,238,551,234,233,,230,231,242',
'240,236,,237,235,239,244,245,246,241,243,251,252,247,248,547,228,229',
',,249,250,,253,,,559,558,,,,552,,,,,232,,238,,234,233,,230,231,242,240',
'236,,237,235,239,244,245,246,241,243,251,252,247,248,,228,229,,,249',
'250,,253,545,,542,541,540,549,543,,,,,,232,,238,551,234,233,,230,231',
'242,240,236,,237,235,239,244,245,246,241,243,251,252,247,248,547,228',
'229,,,249,250,,253,556,555,559,558,,,,552,,,,,232,,238,,234,233,,230',
'231,242,240,236,,237,235,239,244,245,246,241,243,251,252,247,248,,228',
'229,,,249,250,,253,702,,542,541,540,785,543,,,,,,232,,238,551,234,233',
',230,231,242,240,236,,237,235,239,244,245,246,241,243,251,252,247,248',
'547,228,229,,,249,250,,253,,,559,558,,,,552,,,,,232,,238,,234,233,,230',
'231,242,240,236,,237,235,239,244,245,246,241,243,251,252,247,248,,228',
'229,,,249,250,,253,784,,542,541,540,785,543,,,,,,232,,238,551,234,233',
',230,231,242,240,236,,237,235,239,244,245,246,241,243,251,252,247,248',
'547,228,229,,,249,250,,253,556,555,559,558,,,,552,,,,,232,,238,,234',
'233,,230,231,242,240,236,,237,,,,,,996,413,,,997,,,,,,,,154,155,253',
'151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,,',
',,,,,148,147,,132,153,150,149,158,145,146,140,138,130,152,131,998,420',
'159,,999,,,,,,,,154,155,,151,133,134,135,142,139,141,,,136,137,,,,156',
'157,143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158,145,146,140',
'138,130,152,131,973,420,159,,972,,,,,,,,154,155,,151,133,134,135,142',
'139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147,,132,153',
'150,149,158,145,146,140,138,130,152,131,471,413,159,,472,,,,,,,,154',
'155,,151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260',
',,,,,,,148,147,,132,153,150,149,158,145,146,140,138,130,152,131,724',
'420,159,,725,,,,,,,,154,155,,151,133,134,135,142,139,141,,,136,137,',
',,156,157,143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158,145,146',
'140,138,130,152,131,721,420,159,,722,,,,,,,,154,155,,151,133,134,135',
'142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147,,132',
'153,150,149,158,145,146,140,138,130,152,131,719,413,159,,720,,,,,,,',
'154,155,,151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,',
',,,260,,,,,,,,148,147,,132,153,150,149,158,145,146,140,138,130,152,131',
'416,420,159,,415,,,,,,,,154,155,,151,133,134,135,142,139,141,,,136,137',
',,,156,157,143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158,145',
'146,140,138,130,152,131,409,413,159,,410,,,,,,,,154,155,,151,133,134',
'135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147',
',132,153,150,149,158,145,146,140,138,130,152,131,664,413,159,,665,,',
',,,,,154,155,,151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144',
',,,,,260,,,,,,,,148,147,,132,153,150,149,158,145,146,140,138,130,152',
'131,667,420,159,,668,,,,,,,,154,155,,151,133,134,135,142,139,141,,,136',
'137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158',
'145,146,140,138,130,152,131,633,413,159,,634,,,,,,,,154,155,,151,133',
'134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148',
'147,,132,153,150,149,158,145,146,140,138,130,152,131,635,420,159,,636',
',,,,,,,154,155,,151,133,134,135,142,139,141,,,136,137,,,,156,157,143',
'144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158,145,146,140,138,130',
'152,131,633,413,159,,634,,,,,,,,154,155,,151,133,134,135,142,139,141',
',,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149',
'158,145,146,140,138,130,152,131,635,420,159,,636,,,,,,,,154,155,,151',
'133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,',
',148,147,,132,153,150,149,158,145,146,140,138,130,152,131,471,413,159',
',472,,,,,,,,154,155,,151,133,134,135,142,139,141,,,136,137,,,,156,157',
'143,144,784,,542,541,540,785,543,,,,,,,148,147,551,132,153,150,149,158',
'145,146,140,138,130,152,131,,702,159,542,541,540,549,543,,547,,,,,,',
'551,,556,555,559,558,,,545,552,542,541,540,549,543,702,,542,541,540',
'785,543,547,551,,,,,,,551,,,559,558,,,,552,,,,,,,547,734,,,,,,547,,556',
'555,559,558,,,,552,,559,558,,,545,552,542,541,540,549,543,,545,,542',
'541,540,549,543,551,,,,,,,,551,,702,,542,541,540,549,543,,,,,,547,,',
'551,,,,,547,556,555,559,558,,,,552,556,555,559,558,,,,552,547,,702,',
'542,541,540,549,543,,,559,558,,,,552,551,,702,,542,541,540,785,543,702',
',542,541,540,785,543,,551,,,,,547,,551,,784,,542,541,540,785,543,559',
'558,,,,552,547,,551,,,,,547,,,,559,558,,,,552,,559,558,,,,552,547,,545',
',542,541,540,549,543,556,555,559,558,,,,552,551,,545,,542,541,540,549',
'543,,,,,,,,,551,,,,,547,531,,,,,,,,556,555,559,558,,,,552,547,,545,',
'542,541,540,549,543,556,555,559,558,,,,552,551,,,,,,,,,,,,,,,,,,,,,',
'547,734,,,,,,,,556,555,559,558,,,,552' ]
        racc_action_table = arr = ::Array.new(24934, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'635,26,880,627,645,342,343,635,635,635,58,1010,635,635,635,659,635,61',
'19,381,335,659,336,469,24,635,635,635,635,380,356,24,346,719,703,720',
'635,635,996,635,635,635,635,635,997,903,439,710,573,352,58,998,717,352',
'433,433,721,722,469,19,589,589,908,530,908,26,635,635,635,635,635,635',
'635,635,635,635,635,635,635,635,715,839,635,635,635,381,635,635,26,665',
'635,645,974,635,635,380,635,566,635,439,635,718,635,635,61,635,635,635',
'635,635,415,635,635,635,342,343,973,415,415,415,880,721,722,415,415',
'880,415,635,998,1010,635,635,635,635,1010,635,356,635,335,635,336,346',
'719,335,720,336,415,415,433,415,415,415,415,415,589,665,996,573,664',
'356,622,996,997,903,356,721,722,997,903,998,717,565,530,717,998,717',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,839,304,415',
'415,415,665,415,218,665,772,415,566,972,415,665,602,566,600,415,477',
'415,329,415,415,329,415,415,415,415,415,636,415,325,415,664,325,840',
'636,636,636,675,675,636,636,636,938,636,415,585,585,415,415,938,415',
'477,415,636,636,636,415,218,938,772,798,617,304,636,636,613,636,636',
'636,636,636,664,646,478,664,607,602,602,600,600,664,727,565,605,379',
'304,602,565,600,326,221,987,326,636,636,636,636,636,636,636,636,636',
'636,636,636,636,636,646,478,636,636,636,798,636,636,368,732,636,15,798',
'636,636,368,636,597,636,378,636,798,636,636,675,636,636,636,636,636',
'840,636,585,636,917,840,221,585,377,39,798,379,379,379,376,219,634,636',
'667,375,636,636,636,636,92,636,1,636,15,636,16,92,92,92,15,633,92,92',
'92,446,92,899,939,899,899,899,751,899,92,939,92,92,92,378,378,378,39',
'724,939,988,92,92,39,92,92,92,92,92,219,634,667,446,377,377,377,446',
'446,667,376,376,376,382,667,375,375,375,667,989,633,756,92,92,92,92',
'92,92,92,92,92,92,92,92,92,92,568,667,92,92,92,724,92,92,367,567,92',
'616,724,92,92,367,92,724,92,899,92,724,92,92,351,92,92,92,92,92,344',
'92,701,92,701,701,701,344,701,120,724,382,382,382,120,120,344,92,350',
'562,92,92,92,92,95,92,38,92,616,92,40,95,95,95,616,77,95,95,95,826,95',
'826,826,826,560,826,351,77,95,362,95,95,95,351,339,990,362,77,351,339',
'95,95,351,95,95,95,95,95,313,3,350,870,410,38,3,584,826,350,870,38,584',
'351,350,735,701,826,350,870,735,991,95,95,95,95,95,95,95,95,95,95,95',
'95,95,95,992,350,95,95,95,361,95,95,995,445,95,313,361,95,95,410,95',
'313,95,409,95,410,95,95,557,95,95,95,95,95,553,95,774,95,641,369,641',
'641,641,641,641,445,369,843,775,445,445,95,843,641,95,95,95,95,416,95',
'777,95,576,95,778,416,416,416,779,576,409,416,416,937,416,641,409,284',
'576,781,937,366,284,416,641,641,641,641,366,937,681,641,782,681,416',
'416,365,416,416,416,416,416,927,365,783,927,531,725,531,531,531,531',
'531,364,725,363,784,641,545,725,364,531,363,725,416,416,416,416,416',
'416,416,416,416,416,416,416,416,416,371,857,416,416,416,531,416,371',
'309,309,416,857,788,416,531,531,531,531,416,538,416,531,416,416,686',
'416,416,416,416,416,46,416,416,416,686,792,828,46,828,828,828,941,828',
'793,857,857,46,416,941,857,416,416,797,416,537,416,801,941,536,416,957',
'957,957,957,957,957,804,686,686,957,957,805,686,828,957,808,957,957',
'957,957,957,957,957,6,6,6,6,6,957,957,957,957,957,957,957,810,547,957',
'547,547,547,811,547,957,957,957,957,957,957,957,957,957,957,957,957',
'812,957,957,957,813,957,957,957,957,957,698,817,698,698,698,818,698',
'820,547,821,950,668,950,950,950,823,950,547,668,957,986,986,957,668',
'825,957,957,668,534,957,971,957,971,971,971,957,971,698,827,948,533',
'948,948,948,957,948,698,950,830,957,957,957,957,949,957,957,957,957',
'334,334,17,17,957,957,684,684,684,684,684,684,957,521,957,684,684,833',
'948,13,684,201,684,684,684,684,684,684,684,287,287,287,287,287,684,684',
'684,684,684,684,684,708,708,684,41,41,464,520,520,684,684,684,684,684',
'684,684,684,684,684,684,684,12,684,684,684,519,684,684,684,684,684,459',
'459,459,459,459,459,459,464,10,459,459,464,464,518,464,464,459,459,947',
'684,689,689,684,946,220,684,684,945,222,684,223,684,459,944,459,684',
'459,459,509,459,459,459,459,459,684,459,227,943,842,684,684,684,684',
'920,684,684,684,684,505,846,847,850,684,684,683,683,683,683,683,683',
'684,851,684,683,683,500,1000,1001,683,940,683,683,683,683,683,683,683',
'492,492,492,492,492,683,683,683,683,683,683,683,498,495,683,494,867',
'465,7,479,683,683,683,683,683,683,683,683,683,683,683,683,871,683,683',
'683,873,683,683,683,683,683,461,461,461,461,461,461,461,465,475,461',
'461,465,465,450,465,465,461,461,449,683,448,447,683,259,925,683,683',
'435,425,683,273,683,461,274,461,683,461,461,45,461,461,461,461,461,683',
'461,277,417,901,683,683,683,683,408,683,683,683,683,340,905,288,289',
'683,683,321,321,321,321,321,321,683,106,683,321,321,291,292,293,321',
'906,321,321,321,321,321,321,321,407,405,402,923,299,321,321,321,321',
'321,321,321,399,900,321,900,900,900,302,900,321,321,321,321,321,321',
'321,321,321,321,321,321,303,321,321,321,397,321,321,321,321,321,462',
'462,462,462,462,462,462,504,900,462,462,296,308,310,504,391,462,462',
'296,321,314,315,321,504,922,321,321,296,318,321,912,321,462,921,462',
'321,462,462,323,462,462,462,462,462,321,462,327,328,330,321,321,321',
'321,347,321,321,321,321,345,341,666,669,321,321,295,295,295,295,295',
'295,321,663,321,295,295,670,661,673,295,674,295,295,295,295,295,295',
'295,658,676,653,679,22,295,295,295,295,295,295,295,651,984,295,984,984',
'984,685,984,295,295,295,295,295,295,295,295,295,295,295,295,644,295',
'295,295,639,295,295,295,295,295,460,460,460,460,460,460,460,297,984',
'460,460,217,637,37,297,985,460,460,217,295,1012,700,295,297,,295,295',
'217,,295,,295,460,,460,295,460,460,,460,460,460,460,460,295,460,,,,295',
'295,295,295,,295,295,295,295,,,,,295,295,290,290,290,290,290,290,295',
',295,290,290,,,,290,,290,290,290,290,290,290,290,,,,,,290,290,290,290',
'290,290,290,,868,290,868,868,868,,868,290,290,290,290,290,290,290,290',
'290,290,290,290,,290,290,290,,290,290,290,290,290,463,463,463,463,463',
'463,463,354,999,463,463,978,,,354,999,463,463,978,290,999,,290,354,999',
'290,290,978,,290,,290,463,,463,290,463,463,,463,463,463,463,463,290',
'463,,,,290,290,290,290,,290,290,290,290,,,,,290,290,649,649,649,649',
'649,649,290,,290,649,649,,,,649,,649,649,649,649,649,649,649,,,,,,649',
'649,649,649,649,649,649,593,593,649,,593,593,593,,649,649,649,649,649',
'649,649,649,649,649,649,649,,649,649,649,,649,649,649,649,649,466,466',
'466,466,466,466,466,300,14,466,466,931,,,300,14,466,466,931,649,,,649',
'300,14,649,649,931,,649,,649,466,,466,649,466,466,,466,466,466,466,466',
'649,466,,,,649,649,649,649,,649,649,649,649,,,,,649,649,648,648,648',
'648,648,648,649,,649,648,648,,,,648,,648,648,648,648,648,648,648,,,',
',,648,648,648,648,648,648,648,,,648,,,,,,648,648,648,648,648,648,648',
'648,648,648,648,648,,648,648,648,,648,648,648,648,648,467,467,467,467',
'467,467,467,467,298,467,467,316,,,,298,467,467,316,648,,,648,,298,648',
'648,316,,648,,648,467,,467,648,467,467,,467,467,467,467,467,648,467',
',,,648,648,648,648,,648,648,648,648,,,,,648,648,643,643,643,643,643',
'643,648,,648,643,643,,,,643,,643,643,643,643,643,643,643,,,,,,643,643',
'643,643,643,643,643,,,643,,,,,,643,643,643,643,643,643,643,643,643,643',
'643,643,,643,643,643,,643,643,643,643,643,444,444,444,444,444,444,444',
'444,444,444,444,,444,444,,,444,444,,643,,,643,,,643,643,,,643,,643,444',
',444,643,444,444,,444,444,444,444,444,643,444,,,,643,643,643,643,,643',
'643,643,643,,,,,643,643,959,959,959,959,959,959,643,,643,959,959,,,',
'959,,959,959,959,959,959,959,959,,,,,,959,959,959,959,959,959,959,,',
'959,,,,,,959,959,959,959,959,959,959,959,959,959,959,959,,959,959,959',
',959,959,959,959,959,443,443,443,443,443,443,443,443,443,443,443,,443',
'443,,,443,443,,959,,,959,,,959,959,,,959,,959,443,,443,959,443,443,',
'443,443,443,443,443,959,443,,,,959,959,959,959,,959,959,959,959,,,,',
'959,959,951,951,951,951,951,951,959,,959,951,951,,,,951,,951,951,951',
'951,951,951,951,,,,,,951,951,951,951,951,951,951,,,951,,,,,,951,951',
'951,951,951,951,951,951,951,951,951,951,,951,951,951,,951,951,951,951',
'951,454,454,454,454,454,454,454,,,454,454,,,,,,454,454,,951,,,951,,',
'951,951,,,951,,951,454,,454,951,454,454,,454,454,454,454,454,951,454',
',,,951,951,951,951,,951,951,951,951,,,,,951,951,118,118,118,118,118',
'118,951,,951,118,118,,,,118,,118,118,118,118,118,118,118,,,,,,118,118',
'118,118,118,118,118,,,118,,,,,,118,118,118,118,118,118,118,118,118,118',
'118,118,,118,118,118,,118,118,118,118,118,455,,,,,,,,,,,,,,,,455,455',
',118,,,118,,,118,118,,,118,,118,455,,455,118,455,455,,455,455,,,455',
'118,455,,,,118,118,118,118,,118,118,118,118,,,,,118,118,226,226,226',
'226,226,226,118,,118,226,226,,,,226,,226,226,226,226,226,226,226,,,',
',,226,226,226,226,226,226,226,,,226,,,,,,226,226,226,226,226,226,226',
'226,226,226,226,226,,226,226,226,,226,226,226,226,226,456,,,,,,,,,,',
',,,,,456,456,,226,,,226,,,226,226,,,226,,226,456,,456,226,456,456,,456',
'456,,,456,226,456,,,,226,226,226,226,,226,226,226,226,,,,,226,226,0',
'0,0,0,0,0,226,,226,0,0,,,,0,,0,0,0,0,0,0,0,,,,,,0,0,0,0,0,0,0,,,0,,',
',,,0,0,0,0,0,0,0,0,0,0,0,0,,0,0,0,,0,0,0,0,0,457,,,,,,,,,,,,,,,,457',
'457,,0,,,0,,,0,0,,,0,,0,457,,457,0,457,457,,457,457,,,457,0,457,,,,0',
'0,0,0,,0,0,0,0,,,,,0,0,203,203,203,203,203,203,0,,0,203,203,,,,203,',
'203,203,203,203,203,203,203,,,,,,203,203,203,203,203,203,203,,,203,',
',,,,203,203,203,203,203,203,203,203,203,203,203,203,,203,203,203,,203',
'203,203,203,203,458,,,,,,,,,,,,,,,,458,458,,203,,,203,,,203,203,,,203',
',203,458,,458,203,458,458,,458,458,,,458,203,458,,,,203,203,203,203',
',203,203,203,203,,,,,203,203,936,936,936,936,936,936,203,,203,936,936',
',,,936,,936,936,936,936,936,936,936,,,,,,936,936,936,936,936,936,936',
',,936,,,,,,936,936,936,936,936,936,936,936,936,936,936,936,,936,936',
'936,,936,936,936,936,936,451,,,,,,,,,,,,,,,,451,451,,936,,,936,,,936',
'936,,,936,,936,451,,451,936,451,451,,451,451,,,,936,,,,,936,936,936',
'936,,936,936,936,936,,,,,936,936,33,33,33,33,33,33,936,,936,33,33,,',
',33,,33,33,33,33,33,33,33,,,,,,33,33,33,33,33,33,33,,,33,,,,,,33,33',
'33,33,33,33,33,33,33,33,33,33,,33,33,33,,33,33,33,33,33,452,,,,,,,,',
',,,,,,,452,452,,33,,,33,,,33,33,,,33,,33,452,,452,33,452,452,,452,452',
',,,33,,,,,33,33,33,33,,33,33,33,33,,,,,33,33,877,877,877,877,877,877',
'33,,33,877,877,,,,877,,877,877,877,877,877,877,877,,,,,,877,877,877',
'877,877,877,877,,,877,,,,,,877,877,877,877,877,877,877,877,877,877,877',
'877,,877,877,877,,877,877,877,877,877,453,,,,,,,,,,,,,,,,453,453,,877',
',,877,,,877,877,,,877,,877,453,,,877,453,453,,453,453,,,,877,,,,,877',
'877,877,877,,877,877,877,877,,,,,877,877,844,844,844,844,844,844,877',
',877,844,844,,,,844,,844,844,844,844,844,844,844,,,,,,844,844,844,844',
'844,844,844,,,844,,,,,,844,844,844,844,844,844,844,844,844,844,844,844',
',844,844,844,,844,844,844,844,844,,,,,,,,,,,,,,,,,,,,844,,,844,,,844',
'844,,,844,,844,,,,844,,,,,,,,,844,,,,,844,844,844,844,,844,844,844,844',
',,,,844,844,586,586,586,586,586,586,844,,844,586,586,,,,586,,586,586',
'586,586,586,586,586,,,,,,586,586,586,586,586,586,586,,,586,,,,,,586',
'586,586,586,586,586,586,586,586,586,586,586,,586,586,586,,586,586,586',
'586,586,,,,,,,,,,,,,,,,,,,,586,,,586,,,586,586,,,586,,586,,,,586,,,',
',,,,,586,,,,,586,586,586,586,,586,586,586,586,,,,,586,586,564,564,564',
'564,564,564,586,,586,564,564,,,,564,,564,564,564,564,564,564,564,,,',
',,564,564,564,564,564,564,564,,,564,,,,,,564,564,564,564,564,564,564',
'564,564,564,564,564,,564,564,564,,564,564,564,564,564,,,,,,,,,,,,,,',
',,,,,564,,,564,,,564,564,,,564,,564,,,,564,,,,,,,,,564,,,,,564,564,564',
'564,,564,564,564,564,,,,,564,564,561,561,561,561,561,561,564,,564,561',
'561,,,,561,,561,561,561,561,561,561,561,,,,,,561,561,561,561,561,561',
'561,,,561,,,,,,561,561,561,561,561,561,561,561,561,561,561,561,,561',
'561,561,,561,561,561,561,561,,,,,,,,,,,,,,,,,,,,561,,,561,,,561,561',
',,561,,561,,,,561,,,,,,,,,561,,,,,561,561,561,561,,561,561,561,561,',
',,,561,561,493,493,493,493,493,493,561,,561,493,493,,,,493,,493,493',
'493,493,493,493,493,,,,,,493,493,493,493,493,493,493,,,493,,,,,,493',
'493,493,493,493,493,493,493,493,493,493,493,,493,493,493,,493,493,493',
'493,493,,,,,,,,,,,,,,,,,,,,493,,,493,,,493,493,,,493,,493,,,,493,,,',
',,,,,493,,,,,493,493,493,493,,493,493,493,493,,,,,493,493,838,838,838',
'838,838,838,493,,493,838,838,,,,838,,838,838,838,838,838,838,838,,,',
',,838,838,838,838,838,838,838,,,838,,,,,,838,838,838,838,838,838,838',
'838,838,838,838,838,,838,838,838,,838,838,838,838,838,,,,,,,,,,,,,,',
',,,,,838,,,838,,,838,838,,,838,,838,,,,838,,,,,,,,,838,,,,,838,838,838',
'838,,838,838,838,838,,,,,838,838,835,835,835,835,835,835,838,,838,835',
'835,,,,835,,835,835,835,835,835,835,835,,,,,,835,835,835,835,835,835',
'835,,,835,,,,,,835,835,835,835,835,835,835,835,835,835,835,835,,835',
'835,835,,835,835,835,835,835,,,,,,,,,,,,,,,,,,,,835,,,835,,,835,835',
',,835,,835,,,,835,,,,,,,,,835,,,,,835,835,835,835,,835,835,835,835,',
',,,835,835,834,834,834,834,834,834,835,,835,834,834,,,,834,,834,834',
'834,834,834,834,834,,,,,,834,834,834,834,834,834,834,,,834,,,,,428,834',
'834,834,834,834,834,834,834,834,834,834,834,,834,834,834,,834,834,834',
'834,834,428,428,428,428,428,428,428,428,428,428,428,,428,428,,,428,428',
',834,,,834,,,834,834,,,834,,834,428,,428,834,428,428,,428,428,428,428',
'428,834,428,,,,834,834,834,834,,834,834,834,834,,,,,834,834,,428,421',
'428,,,834,,834,421,421,421,,,421,421,421,,421,,,,,,,,,421,421,421,421',
',,,,,,,421,421,,421,421,421,421,421,,,,,,,,,,,,,,,,,,,,,,,421,421,421',
'421,421,421,421,421,421,421,421,421,421,421,,,421,421,421,,,421,,,421',
',,421,421,,421,,421,,421,,421,421,,421,421,421,421,421,,421,421,421',
',,,,,,,,,,,,,421,,,421,421,421,421,420,421,,421,,,,420,420,420,,,420',
'420,420,,420,,,,,,,,,420,420,420,420,,,,,,,,420,420,,420,420,420,420',
'420,,,,,,,,,,,,,,,,,,,,,,,420,420,420,420,420,420,420,420,420,420,420',
'420,420,420,,,420,420,420,,,420,,,420,,,420,420,,420,,420,,420,,420',
'420,,420,420,420,420,420,,420,420,420,,,,,,,,,,,,,,420,,,420,420,420',
'420,56,420,,420,,,,56,56,56,,,56,56,56,,56,,,,,,,,,,56,56,56,,,,,,,',
'56,56,,56,56,56,56,56,,,,,,,,,,,,,,,,,,,,,,,56,56,56,56,56,56,56,56',
'56,56,56,56,56,56,,,56,56,56,,,56,,,56,,,56,56,,56,,56,,56,,56,56,,56',
'56,56,56,56,,56,,56,,,,,,,,,,,,,,56,,,56,56,56,56,,56,,56,803,803,803',
'803,803,803,,,,803,803,,,,803,,803,803,803,803,803,803,803,,,,,,803',
'803,803,803,803,803,803,,,803,,,,,,803,803,803,803,803,803,803,803,803',
'803,803,803,,803,803,803,,803,803,803,803,803,,,,,,,,,,,,,,,,,,,,803',
',,803,,,803,803,,,803,,803,,,,803,,,,,,,,,803,,,,,803,803,803,803,,803',
'803,803,803,,,,,803,803,791,791,791,791,791,791,803,,803,791,791,,,',
'791,,791,791,791,791,791,791,791,,,,,,791,791,791,791,791,791,791,,',
'791,,,,,,791,791,791,791,791,791,791,791,791,791,791,791,,791,791,791',
',791,791,791,791,791,,,,,,,,,,,,,,,,,,,,791,,,791,,,791,791,,,791,,791',
',,,791,,,,,,,,,791,,,,,791,791,791,791,,791,791,791,791,,,,,791,791',
'743,743,743,743,743,743,791,,791,743,743,,,,743,,743,743,743,743,743',
'743,743,,,,,,743,743,743,743,743,743,743,,,743,,,,,,743,743,743,743',
'743,743,743,743,743,743,743,743,,743,743,743,,743,743,743,743,743,,',
',,,,,,,,,,,,,,,,,743,,,743,,,743,743,,,743,,743,,,,743,,,,,,,,,743,',
',,,743,743,743,743,,743,743,743,743,,,,,743,743,733,733,733,733,733',
'733,743,,743,733,733,,,,733,,733,733,733,733,733,733,733,,,,,,733,733',
'733,733,733,733,733,,,733,,,,,,733,733,733,733,733,733,733,733,733,733',
'733,733,,733,733,733,,733,733,733,733,733,,,,,,,,,,,,,,,,,,,,733,,,733',
',,733,733,,,733,,733,,,,733,,,,,,,,,733,,,,,733,733,733,733,,733,733',
'733,733,,,,,733,733,728,728,728,728,728,728,733,,733,728,728,,,,728',
',728,728,728,728,728,728,728,,,,,,728,728,728,728,728,728,728,,,728',
',,,,,728,728,728,728,728,728,728,728,728,728,728,728,,728,728,728,,728',
'728,728,728,728,,,,,,,,,,,,,,,,,,,,728,,,728,,,728,728,,,728,,728,,',
',728,,,,,,,,,728,,,,,728,728,728,728,,728,728,728,728,,,,,728,728,,211',
'211,211,,211,728,,728,211,211,,,,211,,211,211,211,211,211,211,211,,',
',,,211,211,211,211,211,211,211,,,211,,,,,,,211,,,211,211,211,211,211',
'211,211,211,,211,211,211,,211,211,211,211,211,,,,,,,,,,,,,,,,,,,,211',
',,211,,,211,211,,,211,,,,,,211,,,,,,,,,211,,,,,211,211,211,211,,211',
'211,211,211,,,,,211,211,,5,5,5,5,5,211,,211,5,5,,,,5,,5,5,5,5,5,5,5',
',,,,,5,5,5,5,5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,,5,5,5,,5,5,5,5',
'5,,,,,,,,,,,,,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,,5,,,,,5,5,5,5,',
'5,5,5,5,,,,,5,5,,20,20,20,,20,5,,5,20,20,,,,20,,20,20,20,20,20,20,20',
',,,,,20,20,20,20,20,20,20,,,20,,,,,,,20,,,20,20,20,20,20,20,20,20,,20',
'20,20,,20,20,20,20,20,,,,,,,,,,,,,,,,,,,,20,,,20,,,20,20,,,20,,,,,,20',
',,,,,,,,20,,,,,20,20,20,20,,20,20,20,20,,,,,20,20,,29,29,29,,29,20,',
'20,29,29,,,,29,,29,29,29,29,29,29,29,,,,,,29,29,29,29,29,29,29,,,29',
',,,,,,29,,,29,29,29,29,29,29,29,29,29,29,29,29,,29,29,29,29,29,,,,,',
',,,,,,,,,,,,,,29,,,29,,,29,29,,,29,,29,,29,,29,,,29,,,,,,29,,,,,29,29',
'29,29,,29,29,29,29,,,,,29,29,,30,30,30,,30,29,,29,30,30,,,,30,,30,30',
'30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30,,,,,,,30,,,30,30,30,30',
'30,30,30,30,30,30,30,30,,30,30,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,',
',30,30,,,30,,30,,30,,30,,,30,,,,,,30,,,,,30,30,30,30,,30,30,30,30,,',
',,30,30,,31,31,31,,31,30,,30,31,31,,,,31,,31,31,31,31,31,31,31,,,,,',
'31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31,31,31,31,31,31,31,31',
'31,,31,31,31,31,31,,,,,,,,,,,,,,,,,,,,31,,,31,,,31,31,,,31,,31,,31,',
'31,,,31,,,,,,31,,,,,31,31,31,31,,31,31,31,31,,,,,31,31,,34,34,34,,34',
'31,,31,34,34,,,,34,,34,34,34,34,34,34,34,,,,,,34,34,34,34,34,34,34,',
',34,,,,,,,34,,,34,34,34,34,34,34,34,34,,34,34,34,,34,34,,,34,,,,,,,',
',,,,,,,,,,,,34,,,34,,,34,34,,,34,,34,,,,,,,,,,,,,,,,,,34,34,34,34,,34',
'34,34,34,,,,,34,34,,35,35,35,,35,34,,34,35,35,,,,35,,35,35,35,35,35',
'35,35,,,,,,35,35,35,35,35,35,35,,,35,,,,,638,,35,,,35,35,35,35,35,35',
'35,35,,35,35,35,,35,35,,,35,638,638,638,638,638,638,638,638,638,638',
'638,,638,638,,,638,638,,35,,,35,,,35,35,,,35,,,638,,638,,638,638,,638',
'638,638,638,638,,638,,,,35,35,35,35,,35,35,35,35,,,,,35,35,,638,,35',
',,35,,35,42,42,42,,42,,,,42,42,,,,42,,42,42,42,42,42,42,42,,,,,,42,42',
'42,42,42,42,42,,,42,,,,,,,42,,,42,42,42,42,42,42,42,42,,42,42,42,,42',
'42,42,42,42,,,,,,,,,,,,,,,,,,,,42,,,42,,,42,42,,,42,,,,,,42,,,,,,,,',
'42,,,,,42,42,42,42,,42,42,42,42,,,,,42,42,,43,43,43,,43,42,,42,43,43',
',,,43,,43,43,43,43,43,43,43,,,,,,43,43,43,43,43,43,43,,,43,,,,,,,43',
',,43,43,43,43,43,43,43,43,,43,43,43,,43,43,43,43,43,,,,,,,,,,,,,,,,',
',,,43,,,43,,,43,43,,,43,,,,,,43,,,,,,,,,43,,,,,43,43,43,43,,43,43,43',
'43,,,,,43,43,,44,44,44,,44,43,,43,44,44,,,,44,,44,44,44,44,44,44,44',
',,,,,44,44,44,44,44,44,44,,,44,,,,,,,44,,,44,44,44,44,44,44,44,44,,44',
'44,44,,44,44,44,44,44,,,,,,,,,,,,,,,,,,,,44,,,44,,,44,44,,,44,,,,,,44',
',,,,,,,,44,,,,,44,44,44,44,,44,44,44,44,,,,,44,44,,59,59,59,,59,44,',
'44,59,59,,,,59,,59,59,59,59,59,59,59,,,,,,59,59,59,59,59,59,59,,,59',
',,,,,,59,,,59,59,59,59,59,59,59,59,59,59,59,59,,59,59,59,59,59,,,,,',
',,,,,,,,,,,,,,59,,,59,,,59,59,,,59,,59,,,,59,,,59,,,,,,59,,,,,59,59',
'59,59,,59,59,59,59,,,,,59,59,,60,60,60,,60,59,,59,60,60,,,,60,,60,60',
'60,60,60,60,60,,,,,,60,60,60,60,60,60,60,,,60,,,,,,,60,,,60,60,60,60',
'60,60,60,60,60,60,60,60,,60,60,60,60,60,,,,,,,,,,,,,,,,,,,,60,,,60,',
',60,60,,,60,,,,,,60,,,60,,,,,,60,,,,,60,60,60,60,,60,60,60,60,,,,,60',
'60,,63,63,63,,63,60,,60,63,63,,,,63,,63,63,63,63,63,63,63,,,,,,63,63',
'63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63,63,63,63,,63,63,63,,63',
'63,63,63,63,,,,,,,,,,,,,,,,,,,,63,,,63,,,63,63,,,63,,,,,,63,,,,,,,,',
'63,,,,,63,63,63,63,,63,63,63,63,,,,,63,63,,64,64,64,,64,63,,63,64,64',
',,,64,,64,64,64,64,64,64,64,,,,,,64,64,64,64,64,64,64,,,64,,,,,,,64',
',,64,64,64,64,64,64,64,64,,64,64,64,,64,64,64,64,64,,,,,,,,,,,,,,,,',
',,,64,,,64,,,64,64,,,64,,,,,,64,,,,,,,,,64,,,,,64,64,64,64,,64,64,64',
'64,,,,,64,64,,67,67,67,,67,64,,64,67,67,,,,67,,67,67,67,67,67,67,67',
',,,,,67,67,67,67,67,67,67,,,67,,,,,404,,67,,,67,67,67,67,67,67,67,67',
',67,67,67,,67,67,67,67,67,404,404,404,404,404,404,404,404,404,404,404',
',404,404,,,404,404,,67,,,67,,,67,67,,,67,,,404,,404,67,404,404,,404',
'404,404,404,404,67,404,,,,67,67,67,67,,67,67,67,67,,,,,67,67,67,404',
',,,67,67,,67,68,68,68,,68,,,,68,68,,,,68,,68,68,68,68,68,68,68,,,,,',
'68,68,68,68,68,68,68,,,68,,,,,,,68,,,68,68,68,68,68,68,68,68,,68,68',
'68,,68,68,,,68,,,,,,,,,,,,,,,,,,,,68,,,68,,,68,68,,,68,,68,,,,,,,,,',
',,,,,,,,68,68,68,68,,68,68,68,68,,,,,68,68,,69,69,69,,69,68,,68,69,69',
',,,69,,69,69,69,69,69,69,69,,,,,,69,69,69,69,69,69,69,,,69,,,,,,,69',
',,69,69,69,69,69,69,69,69,,69,69,69,,69,69,,,69,,,,,,,,,,,,,,,,,69,',
',69,,,69,,,69,69,,,69,,,,,,,,,,,,,,,,,,,,69,69,69,69,,69,69,69,69,,',
',,69,69,,70,70,70,,70,69,,69,70,70,,,,70,,70,70,70,70,70,70,70,,,,,',
'70,70,70,70,70,70,70,,,70,,,,,,,70,,,70,70,70,70,70,70,70,70,,70,70',
'70,,70,70,,,70,,,,,,,,,,,,,,,,,,,,70,,,70,,,70,70,,,70,,,,,,,,,,,,,',
',,,,,,70,70,70,70,,70,70,70,70,,,,,70,70,,108,108,108,108,108,70,,70',
'108,108,,,,108,,108,108,108,108,108,108,108,,,,,,108,108,108,108,108',
'108,108,,,108,,,,,,108,108,108,108,108,108,108,108,108,108,108,108,',
'108,108,108,,108,108,108,108,108,765,765,765,765,765,765,765,765,765',
'765,765,,765,765,,,765,765,,108,,,108,,,108,108,,,108,,108,765,,765',
'108,765,765,,765,765,765,765,765,108,765,,,,108,108,108,108,,108,108',
'108,108,,,,,108,108,,765,,,,108,108,,108,113,113,113,,113,,,,113,113',
',,,113,,113,113,113,113,113,113,113,,,,,,113,113,113,113,113,113,113',
',,113,,,,,,,113,,,113,113,113,113,113,113,113,113,,113,113,113,,113',
'113,113,113,113,,,,,,,,,,,,,,,,,,,,113,,,113,,,113,113,,,113,,,,,,113',
',,,,,,,,113,,,,,113,113,113,113,,113,113,113,113,,,,,113,113,,114,114',
'114,,114,113,,113,114,114,,,,114,,114,114,114,114,114,114,114,,,,,,114',
'114,114,114,114,114,114,,,114,,,,,,,114,,,114,114,114,114,114,114,114',
'114,,114,114,114,,114,114,114,114,114,,,,,,,,,,,,,,,,,,,,114,,,114,',
',114,114,,,114,,,,,,114,,,,,,,,,114,,,,,114,114,114,114,,114,114,114',
'114,,,,,114,114,,115,115,115,,115,114,,114,115,115,,,,115,,115,115,115',
'115,115,115,115,,,,,,115,115,115,115,115,115,115,,,115,,,,,,,115,,,115',
'115,115,115,115,115,115,115,,115,115,115,,115,115,115,115,115,,,,,,',
',,,,,,,,,,,,,115,,,115,,,115,115,,,115,,,,,,115,,,,,,,,,115,,,,,115',
'115,115,115,,115,115,115,115,,,,,115,115,,116,116,116,,116,115,,115',
'116,116,,,,116,,116,116,116,116,116,116,116,,,,,,116,116,116,116,116',
'116,116,,,116,,,,,,,116,,,116,116,116,116,116,116,116,116,,116,116,116',
',116,116,116,116,116,,,,,,,,,,,,,,,,,,,,116,,,116,,,116,116,,,116,,',
',,,116,,,,,,,,,116,,,,,116,116,116,116,,116,116,116,116,,,,,116,116',
',117,117,117,117,117,116,,116,117,117,,,,117,,117,117,117,117,117,117',
'117,,,,,,117,117,117,117,117,117,117,,,117,,,,,,117,117,,117,117,117',
'117,117,117,117,117,117,,117,117,117,,117,117,117,117,117,,,,,,,,,,',
',,,,,,,,,117,,,117,,,117,117,,,117,,117,,,,117,,,,,,,,,117,,,,,117,117',
'117,117,,117,117,117,117,,,,,117,117,,204,204,204,,204,117,,117,204',
'204,,,,204,,204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204',
'204,,,204,,,,,,,204,,,204,204,204,204,204,204,204,204,,204,204,204,',
'204,204,204,204,204,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,204,,,204,,204',
',,,204,,,,,,,,,204,,,,,204,204,204,204,,204,204,204,204,,,,,204,204',
',205,205,205,,205,204,,204,205,205,,,,205,,205,205,205,205,205,205,205',
',,,,,205,205,205,205,205,205,205,,,205,,,,,,,205,,,205,205,205,205,205',
'205,205,205,,205,205,205,,205,205,205,205,205,,,,,,,,,,,,,,,,,,,,205',
',,205,,,205,205,,,205,,,,,,205,,,,,,,,,205,,,,,205,205,205,205,,205',
'205,205,205,,,,,205,205,,206,206,206,,206,205,,205,206,206,,,,206,,206',
'206,206,206,206,206,206,,,,,,206,206,206,206,206,206,206,,,206,,,,,',
',206,,,206,206,206,206,206,206,206,206,206,206,206,206,,206,206,206',
'206,206,,,,,,,,,,,,,,,,,,,,206,,,206,,,206,206,,,206,,206,,206,,206',
',,206,,,,,,206,,,,,206,206,206,206,,206,206,206,206,,,,,206,206,,209',
'209,209,,209,206,,206,209,209,,,,209,,209,209,209,209,209,209,209,,',
',,,209,209,209,209,209,209,209,,,209,,,,,,,209,,,209,209,209,209,209',
'209,209,209,,209,209,209,,209,209,209,209,209,,,,,,,,,,,,,,,,,,,,209',
',,209,,,209,209,,,209,,,,,,209,,,,,,,,,209,,,,,209,209,209,209,,209',
'209,209,209,,,,,209,209,,210,210,210,,210,209,,209,210,210,,,,210,,210',
'210,210,210,210,210,210,,,,,,210,210,210,210,210,210,210,,,210,,,,,',
',210,,,210,210,210,210,210,210,210,210,,210,210,210,,210,210,210,210',
'210,,,,,,,,,,,,,,,,,,,,210,,,210,,,210,210,,,210,,210,,,,210,,,,,,,',
',210,,,,,210,210,210,210,,210,210,210,210,,,,,210,210,,212,212,212,',
'212,210,,210,212,212,,,,212,,212,212,212,212,212,212,212,,,,,,212,212',
'212,212,212,212,212,,,212,,,,,,,212,,,212,212,212,212,212,212,212,212',
',212,212,212,,212,212,212,212,212,,,,,,,,,,,,,,,,,,,,212,,,212,,,212',
'212,,,212,,,,,,212,,,,,,,,,212,,,,,212,212,212,212,,212,212,212,212',
',,,,212,212,,213,213,213,,213,212,,212,213,213,,,,213,,213,213,213,213',
'213,213,213,,,,,,213,213,213,213,213,213,213,,,213,,,,,,,213,,,213,213',
'213,213,213,213,213,213,,213,213,213,,213,213,213,213,213,,,,,,,,,,',
',,,,,,,,,213,,,213,,,213,213,,,213,,,,,,213,,,,,,,,,213,,,,,213,213',
'213,213,,213,213,213,213,,,,,213,213,,214,214,214,,214,213,,213,214',
'214,,,,214,,214,214,214,214,214,214,214,,,,,,214,214,214,214,214,214',
'214,,,214,,,,,,,214,,,214,214,214,214,214,214,214,214,,214,214,214,',
'214,214,214,214,214,,,,,,,,,,,,,,,,,,,,214,,,214,,,214,214,,,214,,,',
',,214,,,,,,,,,214,,,,,214,214,214,214,,214,214,214,214,,,,,214,214,214',
'225,225,225,,225,214,,214,225,225,,,,225,,225,225,225,225,225,225,225',
',,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,225,225,225',
'225,225,225,,225,225,225,,225,225,225,225,225,,,,,,,,,,,,,,,,,,,,225',
',,225,,,225,225,,,225,,,,,,225,,,,,,,,,225,,,,,225,225,225,225,,225',
'225,225,225,,,,,225,225,,228,228,228,,228,225,,225,228,228,,,,228,,228',
'228,228,228,228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,',
',228,,,228,228,228,228,228,228,228,228,,228,228,228,,228,228,228,228',
'228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,228,,,228,,,,,,228,,,,,,,,,228',
',,,,228,228,228,228,,228,228,228,228,,,,,228,228,,229,229,229,,229,228',
',228,229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229,229,229',
'229,229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229,229,,229,229',
'229,,229,229,229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,229,,,229',
',,,,,229,,,,,,,,,229,,,,,229,229,229,229,,229,229,229,229,,,,,229,229',
',230,230,230,,230,229,,229,230,230,,,,230,,230,230,230,230,230,230,230',
',,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230,230',
'230,230,230,,230,230,230,,230,230,230,230,230,,,,,,,,,,,,,,,,,,,,230',
',,230,,,230,230,,,230,,,,,,230,,,,,,,,,230,,,,,230,230,230,230,,230',
'230,230,230,,,,,230,230,,231,231,231,,231,230,,230,231,231,,,,231,,231',
'231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,',
',231,,,231,231,231,231,231,231,231,231,,231,231,231,,231,231,231,231',
'231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,231,,,231,,,,,,231,,,,,,,,,231',
',,,,231,231,231,231,,231,231,231,231,,,,,231,231,,232,232,232,,232,231',
',231,232,232,,,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232',
'232,232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232,,232,232',
'232,,232,232,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,232,,,232',
',,,,,232,,,,,,,,,232,,,,,232,232,232,232,,232,232,232,232,,,,,232,232',
',233,233,233,,233,232,,232,233,233,,,,233,,233,233,233,233,233,233,233',
',,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233',
'233,233,233,,233,233,233,,233,233,233,233,233,,,,,,,,,,,,,,,,,,,,233',
',,233,,,233,233,,,233,,,,,,233,,,,,,,,,233,,,,,233,233,233,233,,233',
'233,233,233,,,,,233,233,,234,234,234,,234,233,,233,234,234,,,,234,,234',
'234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,',
',234,,,234,234,234,234,234,234,234,234,,234,234,234,,234,234,234,234',
'234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,234,,,234,,,,,,234,,,,,,,,,234',
',,,,234,234,234,234,,234,234,234,234,,,,,234,234,,235,235,235,,235,234',
',234,235,235,,,,235,,235,235,235,235,235,235,235,,,,,,235,235,235,235',
'235,235,235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,235,,235,235',
'235,,235,235,235,235,235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,235,,,235',
',,,,,235,,,,,,,,,235,,,,,235,235,235,235,,235,235,235,235,,,,,235,235',
',236,236,236,,236,235,,235,236,236,,,,236,,236,236,236,236,236,236,236',
',,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236,236,236',
'236,236,236,,236,236,236,,236,236,236,236,236,,,,,,,,,,,,,,,,,,,,236',
',,236,,,236,236,,,236,,,,,,236,,,,,,,,,236,,,,,236,236,236,236,,236',
'236,236,236,,,,,236,236,,237,237,237,,237,236,,236,237,237,,,,237,,237',
'237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,',
',237,,,237,237,237,237,237,237,237,237,,237,237,237,,237,237,237,237',
'237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,237,,,237,,,,,,237,,,,,,,,,237',
',,,,237,237,237,237,,237,237,237,237,,,,,237,237,,238,238,238,,238,237',
',237,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238,238,238,238',
'238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,238,,238,238',
'238,,238,238,238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,238,,,238',
',,,,,238,,,,,,,,,238,,,,,238,238,238,238,,238,238,238,238,,,,,238,238',
',239,239,239,,239,238,,238,239,239,,,,239,,239,239,239,239,239,239,239',
',,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,239,239,239',
'239,239,239,,239,239,239,,239,239,239,239,239,,,,,,,,,,,,,,,,,,,,239',
',,239,,,239,239,,,239,,,,,,239,,,,,,,,,239,,,,,239,239,239,239,,239',
'239,239,239,,,,,239,239,,240,240,240,,240,239,,239,240,240,,,,240,,240',
'240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,',
',240,,,240,240,240,240,240,240,240,240,,240,240,240,,240,240,240,240',
'240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,240,,,240,,,,,,240,,,,,,,,,240',
',,,,240,240,240,240,,240,240,240,240,,,,,240,240,,241,241,241,,241,240',
',240,241,241,,,,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241',
'241,241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,,241,241',
'241,,241,241,241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,241,,,241',
',,,,,241,,,,,,,,,241,,,,,241,241,241,241,,241,241,241,241,,,,,241,241',
',242,242,242,,242,241,,241,242,242,,,,242,,242,242,242,242,242,242,242',
',,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,242,242,242',
'242,242,242,,242,242,242,,242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242',
',,242,,,242,242,,,242,,,,,,242,,,,,,,,,242,,,,,242,242,242,242,,242',
'242,242,242,,,,,242,242,,243,243,243,,243,242,,242,243,243,,,,243,,243',
'243,243,243,243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,',
',243,,,243,243,243,243,243,243,243,243,,243,243,243,,243,243,243,243',
'243,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,243,,,243,,,,,,243,,,,,,,,,243',
',,,,243,243,243,243,,243,243,243,243,,,,,243,243,,244,244,244,,244,243',
',243,244,244,,,,244,,244,244,244,244,244,244,244,,,,,,244,244,244,244',
'244,244,244,,,244,,,,,,,244,,,244,244,244,244,244,244,244,244,,244,244',
'244,,244,244,244,244,244,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,244,,,244',
',,,,,244,,,,,,,,,244,,,,,244,244,244,244,,244,244,244,244,,,,,244,244',
',245,245,245,,245,244,,244,245,245,,,,245,,245,245,245,245,245,245,245',
',,,,,245,245,245,245,245,245,245,,,245,,,,,,,245,,,245,245,245,245,245',
'245,245,245,,245,245,245,,245,245,245,245,245,,,,,,,,,,,,,,,,,,,,245',
',,245,,,245,245,,,245,,,,,,245,,,,,,,,,245,,,,,245,245,245,245,,245',
'245,245,245,,,,,245,245,,246,246,246,,246,245,,245,246,246,,,,246,,246',
'246,246,246,246,246,246,,,,,,246,246,246,246,246,246,246,,,246,,,,,',
',246,,,246,246,246,246,246,246,246,246,,246,246,246,,246,246,246,246',
'246,,,,,,,,,,,,,,,,,,,,246,,,246,,,246,246,,,246,,,,,,246,,,,,,,,,246',
',,,,246,246,246,246,,246,246,246,246,,,,,246,246,,247,247,247,,247,246',
',246,247,247,,,,247,,247,247,247,247,247,247,247,,,,,,247,247,247,247',
'247,247,247,,,247,,,,,,,247,,,247,247,247,247,247,247,247,247,,247,247',
'247,,247,247,247,247,247,,,,,,,,,,,,,,,,,,,,247,,,247,,,247,247,,,247',
',,,,,247,,,,,,,,,247,,,,,247,247,247,247,,247,247,247,247,,,,,247,247',
',248,248,248,,248,247,,247,248,248,,,,248,,248,248,248,248,248,248,248',
',,,,,248,248,248,248,248,248,248,,,248,,,,,,,248,,,248,248,248,248,248',
'248,248,248,,248,248,248,,248,248,248,248,248,,,,,,,,,,,,,,,,,,,,248',
',,248,,,248,248,,,248,,,,,,248,,,,,,,,,248,,,,,248,248,248,248,,248',
'248,248,248,,,,,248,248,,249,249,249,,249,248,,248,249,249,,,,249,,249',
'249,249,249,249,249,249,,,,,,249,249,249,249,249,249,249,,,249,,,,,',
',249,,,249,249,249,249,249,249,249,249,,249,249,249,,249,249,249,249',
'249,,,,,,,,,,,,,,,,,,,,249,,,249,,,249,249,,,249,,,,,,249,,,,,,,,,249',
',,,,249,249,249,249,,249,249,249,249,,,,,249,249,,250,250,250,,250,249',
',249,250,250,,,,250,,250,250,250,250,250,250,250,,,,,,250,250,250,250',
'250,250,250,,,250,,,,,,,250,,,250,250,250,250,250,250,250,250,,250,250',
'250,,250,250,250,250,250,,,,,,,,,,,,,,,,,,,,250,,,250,,,250,250,,,250',
',,,,,250,,,,,,,,,250,,,,,250,250,250,250,,250,250,250,250,,,,,250,250',
',251,251,251,,251,250,,250,251,251,,,,251,,251,251,251,251,251,251,251',
',,,,,251,251,251,251,251,251,251,,,251,,,,,,,251,,,251,251,251,251,251',
'251,251,251,,251,251,251,,251,251,251,251,251,,,,,,,,,,,,,,,,,,,,251',
',,251,,,251,251,,,251,,,,,,251,,,,,,,,,251,,,,,251,251,251,251,,251',
'251,251,251,,,,,251,251,,252,252,252,,252,251,,251,252,252,,,,252,,252',
'252,252,252,252,252,252,,,,,,252,252,252,252,252,252,252,,,252,,,,,',
',252,,,252,252,252,252,252,252,252,252,,252,252,252,,252,252,252,252',
'252,,,,,,,,,,,,,,,,,,,,252,,,252,,,252,252,,,252,,,,,,252,,,,,,,,,252',
',,,,252,252,252,252,,252,252,252,252,,,,,252,252,,253,253,253,,253,252',
',252,253,253,,,,253,,253,253,253,253,253,253,253,,,,,,253,253,253,253',
'253,253,253,,,253,,,,,,,253,,,253,253,253,253,253,253,253,253,,253,253',
'253,,253,253,253,253,253,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,253,,,253',
',,,,,253,,,,,,,,,253,,,,,253,253,253,253,,253,253,253,253,,,,,253,253',
',260,260,260,,260,253,,253,260,260,,,,260,,260,260,260,260,260,260,260',
',,,,,260,260,260,260,260,260,260,,,260,,,,,,,260,,,260,260,260,260,260',
'260,260,260,260,260,260,260,,260,260,260,260,260,,,,,,,,,,,,,,,,,,,',
'260,,,260,,,260,260,,,260,,260,,260,,260,,,260,,,,,,260,,,,,260,260',
'260,260,,260,260,260,260,,,,,260,260,,261,261,261,,261,260,,260,261',
'261,,,,261,,261,261,261,261,261,261,261,,,,,,261,261,261,261,261,261',
'261,,,261,,,,,,,261,,,261,261,261,261,261,261,261,261,261,261,261,261',
',261,261,261,261,261,,,,,,,,,,,,,,,,,,,,261,,,261,,,261,261,,,261,,261',
',261,,261,,,261,,,,,,261,,,,,261,261,261,261,,261,261,261,261,,,,,261',
'261,,269,269,269,,269,261,,261,269,269,,,,269,,269,269,269,269,269,269',
'269,,,,,,269,269,269,269,269,269,269,,,269,,,,,,,269,,,269,269,269,269',
'269,269,269,269,269,269,269,269,,269,269,269,269,269,,,,,,,,,,,,,,,',
',,,,269,,,269,,,269,269,,,269,,269,,269,,269,,,269,,,,,,269,,,,,269',
'269,269,269,,269,269,269,269,,,,,269,269,269,276,276,276,,276,269,,269',
'276,276,,,,276,,276,276,276,276,276,276,276,,,,,,276,276,276,276,276',
'276,276,,,276,,,,,,,276,,,276,276,276,276,276,276,276,276,,276,276,276',
',276,276,276,276,276,,,,,,,,,,,,,,,,,,,,276,,,276,,,276,276,,,276,,',
',,,276,,,,,,,,,276,,,,,276,276,276,276,,276,276,276,276,,,,,276,276',
',278,278,278,,278,276,,276,278,278,,,,278,,278,278,278,278,278,278,278',
',,,,,278,278,278,278,278,278,278,,,278,,,,,,,278,,,278,278,278,278,278',
'278,278,278,,278,278,278,,278,278,278,278,278,,,,,,,,,,,,,,,,,,,,278',
',,278,,,278,278,,,278,,,,,,278,,,,,,,,,278,,,,,278,278,278,278,,278',
'278,278,278,,,,,278,278,,280,280,280,,280,278,,278,280,280,,,,280,,280',
'280,280,280,280,280,280,,,,,,280,280,280,280,280,280,280,,,280,,,,,',
',280,,,280,280,280,280,280,280,280,280,,280,280,280,,280,280,280,280',
'280,,,,,,,,,,,,,,,,,,,,280,,,280,,,280,280,,,280,,,,,,280,,,,,,,,,280',
',,,,280,280,280,280,,280,280,280,280,,,,,280,280,,281,281,281,,281,280',
',280,281,281,,,,281,,281,281,281,281,281,281,281,,,,,,281,281,281,281',
'281,281,281,,,281,,,,,,,281,,,281,281,281,281,281,281,281,281,,281,281',
'281,,281,281,281,281,281,,,,,,,,,,,,,,,,,,,,281,,,281,,,281,281,,,281',
',,,,,281,,,,,,,,,281,,,,,281,281,281,281,,281,281,281,281,,,,,281,281',
',286,286,286,286,286,281,,281,286,286,,,,286,,286,286,286,286,286,286',
'286,,,,,,286,286,286,286,286,286,286,,,286,,,,,,286,286,,286,286,286',
'286,286,286,286,286,286,,286,286,286,,286,286,286,286,286,,,,,,,,,,',
',,,,,,,,,286,,,286,,,286,286,,,286,,286,,,,286,,,,,,,,,286,,,,,286,286',
'286,286,,286,286,286,286,,,,,286,286,,294,294,294,,294,286,,286,294',
'294,,,,294,,294,294,294,294,294,294,294,,,,,,294,294,294,294,294,294',
'294,,,294,,,,,,,294,,,294,294,294,294,294,294,294,294,,294,294,294,',
'294,294,,,294,271,271,271,271,271,271,271,271,271,271,271,,271,271,',
',271,271,,294,,,294,,,294,294,,,294,,,271,,271,,271,271,,271,271,271',
'271,271,,271,,,,294,294,294,294,,294,294,294,294,,,,,294,294,,271,,294',
',,294,,294,311,311,311,,311,,,,311,311,,,,311,,311,311,311,311,311,311',
'311,,,,,,311,311,311,311,311,311,311,,,311,,,,,,,311,,,311,311,311,311',
'311,311,311,311,,311,311,311,,311,311,,,311,,,,,,,,,,,,,,,,,,,,311,',
',311,,,311,311,,,311,,,,,,,,,,,,,,,,,,,,311,311,311,311,,311,311,311',
'311,,,,,311,311,,320,320,320,,320,311,,311,320,320,,,,320,,320,320,320',
'320,320,320,320,,,,,,320,320,320,320,320,320,320,,,320,,,,,,,320,,,320',
'320,320,320,320,320,320,320,,320,320,320,,320,320,320,320,320,,,,,,',
',,,,,,,,,,,,,320,,,320,320,,320,320,,,320,,,,,,320,,,,,,,,,320,,,,,320',
'320,320,320,,320,320,320,320,,,,,320,320,,322,322,322,,322,320,,320',
'322,322,,,,322,,322,322,322,322,322,322,322,,,,,,322,322,322,322,322',
'322,322,,,322,,,,,,,322,,,322,322,322,322,322,322,322,322,,322,322,322',
',322,322,322,322,322,,,,,,,,,,,,,,,,,,,,322,,,322,,,322,322,,,322,,',
',,,322,,,,,,,,,322,,,,,322,322,322,322,,322,322,322,322,,,,,322,322',
',337,337,337,,337,322,,322,337,337,,,,337,,337,337,337,337,337,337,337',
',,,,,337,337,337,337,337,337,337,,,337,,,,,,,337,,,337,337,337,337,337',
'337,337,337,,337,337,337,,337,337,337,337,337,,,,,,,,,,,,,,,,,,,,337',
',,337,,,337,337,,,337,,,,,,337,,,,,,,,,337,,,,,337,337,337,337,,337',
'337,337,337,,,,,337,337,,338,338,338,,338,337,,337,338,338,,,,338,,338',
'338,338,338,338,338,338,,,,,,338,338,338,338,338,338,338,,,338,,,,,',
',338,,,338,338,338,338,338,338,338,338,,338,338,338,,338,338,338,338',
'338,,,,,,,,,,,,,,,,,,,,338,,,338,,,338,338,,,338,,,,,,338,,,,,,,,,338',
',,,,338,338,338,338,,338,338,338,338,,,,,338,338,,357,357,357,,357,338',
',338,357,357,,,,357,,357,357,357,357,357,357,357,,,,,,357,357,357,357',
'357,357,357,,,357,,,,,,,357,,,357,357,357,357,357,357,357,357,,357,357',
'357,,357,357,357,357,357,,,,,,,,,,,,,,,,,,,,357,,,357,,,357,357,,,357',
',,,,,357,,,,,,,,,357,,,,,357,357,357,357,,357,357,357,357,,,,,357,357',
',373,373,373,,373,357,,357,373,373,,,,373,,373,373,373,373,373,373,373',
',,,,,373,373,373,373,373,373,373,,,373,,,,,,,373,,,373,373,373,373,373',
'373,373,373,,373,373,373,,373,373,373,373,373,,,,,,,,,,,,,,,,,,,,373',
',,373,,,373,373,,,373,,,,,,373,,,,,,,,,373,,,,,373,373,373,373,,373',
'373,373,373,,,,,373,373,,401,401,401,,401,373,,373,401,401,,,,401,,401',
'401,401,401,401,401,401,,,,,,401,401,401,401,401,401,401,,,401,,,,,',
',401,,,401,401,401,401,401,401,401,401,,401,401,401,,401,401,401,401',
'401,,,,,,,,,,,,,,,,,,,,401,,,401,,,401,401,,,401,,,,,,401,,,,,,,,,401',
',,,,401,401,401,401,,401,401,401,401,,,,,401,401,,438,438,438,,438,401',
',401,438,438,,,,438,,438,438,438,438,438,438,438,,,,,,438,438,438,438',
'438,438,438,,,438,,,,,,,438,,,438,438,438,438,438,438,438,438,438,438',
'438,438,,438,438,438,438,438,,,,,,,,,,,,,,,,,,,,438,,,438,,,438,438',
',,438,,438,,438,,438,,,438,,,,,,438,,,,,438,438,438,438,,438,438,438',
'438,,,,,438,438,,440,440,440,,440,438,,438,440,440,,,,440,,440,440,440',
'440,440,440,440,,,,,,440,440,440,440,440,440,440,,,440,,,,,,,440,,,440',
'440,440,440,440,440,440,440,,440,440,440,,440,440,440,440,440,,,,,,',
',,,,,,,,,,,,,440,,,440,,,440,440,,,440,,,,,,440,,,,,,,,,440,,,,,440',
'440,440,440,,440,440,440,440,,,,,440,440,,441,441,441,,441,440,,440',
'441,441,,,,441,,441,441,441,441,441,441,441,,,,,,441,441,441,441,441',
'441,441,,,441,,,,,,,441,,,441,441,441,441,441,441,441,441,,441,441,441',
',441,441,441,441,441,,,,,,,,,,,,,,,,,,,,441,,,441,,,441,441,,,441,,',
',,,441,,,,,,,,,441,,,,,441,441,441,441,,441,441,441,441,,,,,441,441',
',442,442,442,,442,441,,441,442,442,,,,442,,442,442,442,442,442,442,442',
',,,,,442,442,442,442,442,442,442,,,442,,,,,,,442,,,442,442,442,442,442',
'442,442,442,,442,442,442,,442,442,442,442,442,,,,,,,,,,,,,,,,,,,,442',
',,442,,,442,442,,,442,,,,,,442,,,,,,,,,442,,,,,442,442,442,442,,442',
'442,442,442,,,,,442,442,,482,482,482,,482,442,,442,482,482,,,,482,,482',
'482,482,482,482,482,482,,,,,,482,482,482,482,482,482,482,,,482,,,,,',
',482,,,482,482,482,482,482,482,482,482,482,482,482,482,,482,482,482',
'482,482,,,,,,,,,,,,,,,,,,,,482,,,482,,,482,482,,,482,,482,,482,,482',
',,482,,,,,,482,,,,,482,482,482,482,,482,482,482,482,,,,,482,482,,484',
'484,484,,484,482,,482,484,484,,,,484,,484,484,484,484,484,484,484,,',
',,,484,484,484,484,484,484,484,,,484,,,,,,,484,,,484,484,484,484,484',
'484,484,484,484,484,484,484,,484,484,484,484,484,,,,,,,,,,,,,,,,,,,',
'484,,,484,,,484,484,,,484,,,,484,,484,,,484,,,,,,484,,,,,484,484,484',
'484,,484,484,484,484,,,,,484,484,,486,486,486,,486,484,,484,486,486',
',,,486,,486,486,486,486,486,486,486,,,,,,486,486,486,486,486,486,486',
',,486,,,,,,,486,,,486,486,486,486,486,486,486,486,,486,486,486,,486',
'486,486,486,486,,,,,,,,,,,,,,,,,,,,486,,,486,,,486,486,,,486,,,,,,486',
',,,,,,,,486,,,,,486,486,486,486,,486,486,486,486,,,,,486,486,,491,491',
'491,491,491,486,,486,491,491,,,,491,,491,491,491,491,491,491,491,,,',
',,491,491,491,491,491,491,491,,,491,,,,,,491,491,491,491,491,491,491',
'491,491,491,491,491,,491,491,491,,491,491,491,491,491,672,672,672,672',
'672,672,672,672,672,672,672,,672,672,,,672,672,,491,,,491,,,491,491',
',,491,,491,672,,672,491,672,672,,672,672,672,672,672,491,672,,,,491',
'491,491,491,,491,491,491,491,,,,,491,491,,672,,,,491,491,,491,499,499',
'499,,499,,,,499,499,,,,499,,499,499,499,499,499,499,499,,,,,,499,499',
'499,499,499,499,499,,,499,,,,,,,499,,,499,499,499,499,499,499,499,499',
',499,499,499,,499,499,,,499,,,,,,,,,,,,,,,,,,,,499,,,499,,,499,499,',
',499,,,,,,,,,,,,,,,,,,,,499,499,499,499,,499,499,499,499,,,,,499,499',
',501,501,501,,501,499,,499,501,501,,,,501,,501,501,501,501,501,501,501',
',,,,,501,501,501,501,501,501,501,,,501,,,,,,,501,,,501,501,501,501,501',
'501,501,501,501,501,501,501,,501,501,501,501,501,,,,,,,,,,,,,,,,,,,',
'501,,,501,,,501,501,,,501,,501,,501,,501,,,501,,,,,,501,,,,,501,501',
'501,501,,501,501,501,501,,,,,501,501,,508,508,508,,508,501,,501,508',
'508,,,,508,,508,508,508,508,508,508,508,,,,,,508,508,508,508,508,508',
'508,,,508,,,,,,,508,,,508,508,508,508,508,508,508,508,,508,508,508,',
'508,508,,,508,,,,,,,,,,,,,,,,,,,,508,,,508,,,508,508,,,508,,,,,,,,,',
',,,,,,,,,,508,508,508,508,,508,508,508,508,,,,,508,508,,511,511,511',
',511,508,,508,511,511,,,,511,,511,511,511,511,511,511,511,,,,,,511,511',
'511,511,511,511,511,,,511,,,,,,,511,,,511,511,511,511,511,511,511,511',
',511,511,511,,511,511,511,511,511,,,,,,,,,,,,,,,,,,,,511,,,511,,,511',
'511,,,511,,,,,,511,,,,,,,,,511,,,,,511,511,511,511,,511,511,511,511',
',,,,511,511,,512,512,512,,512,511,,511,512,512,,,,512,,512,512,512,512',
'512,512,512,,,,,,512,512,512,512,512,512,512,,,512,,,,,,,512,,,512,512',
'512,512,512,512,512,512,,512,512,512,,512,512,512,512,512,,,,,,,,,,',
',,,,,,,,,512,,,512,,,512,512,,,512,,,,,,512,,,,,,,,,512,,,,,512,512',
'512,512,,512,512,512,512,,,,,512,512,,513,513,513,,513,512,,512,513',
'513,,,,513,,513,513,513,513,513,513,513,,,,,,513,513,513,513,513,513',
'513,,,513,,,,,,,513,,,513,513,513,513,513,513,513,513,,513,513,513,',
'513,513,513,513,513,,,,,,,,,,,,,,,,,,,,513,,,513,,,513,513,,,513,,,',
',,513,,,,,,,,,513,,,,,513,513,513,513,,513,513,513,513,,,,,513,513,',
'517,517,517,,517,513,,513,517,517,,,,517,,517,517,517,517,517,517,517',
',,,,,517,517,517,517,517,517,517,,,517,,,,,,,517,,,517,517,517,517,517',
'517,517,517,,517,517,517,,517,517,517,517,517,,,,,,,,,,,,,,,,,,,,517',
',,517,,,517,517,,,517,,,,,,517,,,,,,,,,517,,,,,517,517,517,517,,517',
'517,517,517,,,,,517,517,,523,523,523,,523,517,,517,523,523,,,,523,,523',
'523,523,523,523,523,523,,,,,,523,523,523,523,523,523,523,,,523,,,,,',
',523,,,523,523,523,523,523,523,523,523,523,523,523,523,,523,523,523',
'523,523,,,,,,,,,,,,,,,,,,,,523,,,523,,,523,523,,,523,,523,,,,523,,,523',
',,,,,523,,,,,523,523,523,523,,523,523,523,523,,,,,523,523,,526,526,526',
',526,523,,523,526,526,,,,526,,526,526,526,526,526,526,526,,,,,,526,526',
'526,526,526,526,526,,,526,,,,,,,526,,,526,526,526,526,526,526,526,526',
'526,526,526,526,,526,526,526,526,526,,,,,,,,,,,,,,,,,,,,526,,,526,,',
'526,526,,,526,,,,,,526,,,526,,,,,,526,,,,,526,526,526,526,,526,526,526',
'526,,,,,526,526,,549,549,549,,549,526,,526,549,549,,,,549,,549,549,549',
'549,549,549,549,,,,,,549,549,549,549,549,549,549,,,549,,,,,,,549,,,549',
'549,549,549,549,549,549,549,,549,549,549,,549,549,549,549,549,,,,,,',
',,,,,,,,,,,,,549,,,549,,,549,549,,,549,,,,,,549,,,,,,,,,549,,,,,549',
'549,549,549,,549,549,549,549,,,,,549,549,,569,569,569,,569,549,,549',
'569,569,,,,569,,569,569,569,569,569,569,569,,,,,,569,569,569,569,569',
'569,569,,,569,,,,,,,569,,,569,569,569,569,569,569,569,569,,569,569,569',
',569,569,569,569,569,,,,,,,,,,,,,,,,,,,,569,,,569,,,569,569,,,569,,569',
',,,569,,,,,,,,,569,,,,,569,569,569,569,,569,569,569,569,,,,,569,569',
',570,570,570,,570,569,,569,570,570,,,,570,,570,570,570,570,570,570,570',
',,,,,570,570,570,570,570,570,570,,,570,,,,,,,570,,,570,570,570,570,570',
'570,570,570,570,570,570,570,,570,570,570,570,570,,,,,,,,,,,,,,,,,,,',
'570,,,570,,,570,570,,,570,,570,,570,,570,,,570,,,,,,570,,,,,570,570',
'570,570,,570,570,570,570,,,,,570,570,,580,580,580,,580,570,,570,580',
'580,,,,580,,580,580,580,580,580,580,580,,,,,,580,580,580,580,580,580',
'580,,,580,,,,,,,580,,,580,580,580,580,580,580,580,580,580,580,580,580',
',580,580,580,580,580,,,,,,,,,,,,,,,,,,,,580,,,580,,,580,580,,,580,,580',
',580,,580,,,580,,,,,,580,,,,,580,580,580,580,,580,580,580,580,,,,,580',
'580,,614,614,614,,614,580,,580,614,614,,,,614,,614,614,614,614,614,614',
'614,,,,,,614,614,614,614,614,614,614,,,614,,,,,,,614,,,614,614,614,614',
'614,614,614,614,,614,614,614,,614,614,614,614,614,,,,,,,,,,,,,,,,,,',
',614,,,614,,,614,614,,,614,,614,,,,614,,,,,,,,,614,,,,,614,614,614,614',
',614,614,614,614,,,,,614,614,,615,615,615,,615,614,,614,615,615,,,,615',
',615,615,615,615,615,615,615,,,,,,615,615,615,615,615,615,615,,,615',
',,,,,,615,,,615,615,615,615,615,615,615,615,,615,615,615,,615,615,615',
'615,615,,,,,,,,,,,,,,,,,,,,615,,,615,,,615,615,,,615,,,,,,615,,,,,,',
',,615,,,,,615,615,615,615,,615,615,615,615,,,,,615,615,,618,618,618',
',618,615,,615,618,618,,,,618,,618,618,618,618,618,618,618,,,,,,618,618',
'618,618,618,618,618,,,618,,,,,,,618,,,618,618,618,618,618,618,618,618',
'618,618,618,618,,618,618,618,618,618,,,,,,,,,,,,,,,,,,,,618,,,618,,',
'618,618,,,618,,618,,618,,618,,,618,,,,,,618,,,,,618,618,618,618,,618',
'618,618,618,,,,,618,618,,619,619,619,,619,618,,618,619,619,,,,619,,619',
'619,619,619,619,619,619,,,,,,619,619,619,619,619,619,619,,,619,,,,,',
',619,,,619,619,619,619,619,619,619,619,619,619,619,619,,619,619,619',
'619,619,,,,,,,,,,,,,,,,,,,,619,,,619,,,619,619,,,619,,,,619,,619,,,619',
',,,,,619,,,,,619,619,619,619,,619,619,619,619,,,,,619,619,,620,620,620',
',620,619,,619,620,620,,,,620,,620,620,620,620,620,620,620,,,,,,620,620',
'620,620,620,620,620,,,620,,,,,,,620,,,620,620,620,620,620,620,620,620',
',620,620,620,,620,620,620,620,620,,,,,,,,,,,,,,,,,,,,620,,,620,,,620',
'620,,,620,,,,,,620,,,,,,,,,620,,,,,620,620,620,620,,620,620,620,620',
',,,,620,620,,621,621,621,,621,620,,620,621,621,,,,621,,621,621,621,621',
'621,621,621,,,,,,621,621,621,621,621,621,621,,,621,,,,,,,621,,,621,621',
'621,621,621,621,621,621,,621,621,621,,621,621,621,621,621,,,,,,,,,,',
',,,,,,,,,621,,,621,,,621,621,,,621,,,,,,621,,,,,,,,,621,,,,,621,621',
'621,621,,621,621,621,621,,,,,621,621,,625,625,625,,625,621,,621,625',
'625,,,,625,,625,625,625,625,625,625,625,,,,,,625,625,625,625,625,625',
'625,,,625,,,,,,,625,,,625,625,625,625,625,625,625,625,,625,625,625,',
'625,625,625,625,625,,,,,,,,,,,,,,,,,,,,625,,,625,,,625,625,,,625,,,',
',,625,,,,,,,,,625,,,,,625,625,625,625,,625,625,625,625,,,,,625,625,',
'626,626,626,,626,625,,625,626,626,,,,626,,626,626,626,626,626,626,626',
',,,,,626,626,626,626,626,626,626,,,626,,,,,,,626,,,626,626,626,626,626',
'626,626,626,,626,626,626,,626,626,626,626,626,,,,,,,,,,,,,,,,,,,,626',
',,626,,,626,626,,,626,,,,,,626,,,,,,,,,626,,,,,626,626,626,626,,626',
'626,626,626,,,,,626,626,,629,629,629,,629,626,,626,629,629,,,,629,,629',
'629,629,629,629,629,629,,,,,,629,629,629,629,629,629,629,,,629,,,,,',
',629,,,629,629,629,629,629,629,629,629,,629,629,629,,629,629,629,629',
'629,,,,,,,,,,,,,,,,,,,,629,,,629,,,629,629,,,629,,,,,,629,,,,,,,,,629',
',,,,629,629,629,629,,629,629,629,629,,,,,629,629,,630,630,630,,630,629',
',629,630,630,,,,630,,630,630,630,630,630,630,630,,,,,,630,630,630,630',
'630,630,630,,,630,,,,,,,630,,,630,630,630,630,630,630,630,630,,630,630',
'630,,630,630,630,630,630,,,,,,,,,,,,,,,,,,,,630,,,630,,,630,630,,,630',
',,,,,630,,,,,,,,,630,,,,,630,630,630,630,,630,630,630,630,,,,,630,630',
',654,654,654,,654,630,,630,654,654,,,,654,,654,654,654,654,654,654,654',
',,,,,654,654,654,654,654,654,654,,,654,,,,,,,654,,,654,654,654,654,654',
'654,654,654,,654,654,654,,654,654,654,654,654,,,,,,,,,,,,,,,,,,,,654',
',,654,,,654,654,,,654,,,,,,654,,,,,,,,,654,,,,,654,654,654,654,,654',
'654,654,654,,,,,654,654,,660,660,660,,660,654,,654,660,660,,,,660,,660',
'660,660,660,660,660,660,,,,,,660,660,660,660,660,660,660,,,660,,,,,',
',660,,,660,660,660,660,660,660,660,660,,660,660,660,,660,660,,,660,',
',,,,,,,,,,,,,,,,,,660,,,660,,,660,660,,,660,,,,,,,,,,,,,,,,,,,,660,660',
'660,660,,660,660,660,660,,,,,660,660,,671,671,671,,671,660,,660,671',
'671,,,,671,,671,671,671,671,671,671,671,,,,,,671,671,671,671,671,671',
'671,,,671,,,,,,,671,,,671,671,671,671,671,671,671,671,,671,671,671,',
'671,671,,,671,,,,,,,,,,,,,,,,,,,,671,,,671,,,671,671,,,671,,,,,,,,,',
',,,,,,,,,,671,671,671,671,,671,671,671,671,,,,,671,671,,677,677,677',
',677,671,,671,677,677,,,,677,,677,677,677,677,677,677,677,,,,,,677,677',
'677,677,677,677,677,,,677,,,,,,,677,,,677,677,677,677,677,677,677,677',
',677,677,677,,677,677,677,677,677,,,,,,,,,,,,,,,,,,,,677,,,677,,,677',
'677,,,677,,677,,,,677,,,,,,,,,677,,,,,677,677,677,677,,677,677,677,677',
',,,,677,677,,696,696,696,,696,677,,677,696,696,,,,696,,696,696,696,696',
'696,696,696,,,,,,696,696,696,696,696,696,696,,,696,,,,,,,696,,,696,696',
'696,696,696,696,696,696,,696,696,696,,696,696,696,696,696,,,,,,,,,,',
',,,,,,,,,696,,,696,,,696,696,,,696,,,,,,696,,,,,,,,,696,,,,,696,696',
'696,696,,696,696,696,696,,,,,696,696,,723,723,723,,723,696,,696,723',
'723,,,,723,,723,723,723,723,723,723,723,,,,,,723,723,723,723,723,723',
'723,,,723,,,,,,,723,,,723,723,723,723,723,723,723,723,,723,723,723,',
'723,723,723,723,723,,,,,,,,,,,,,,,,,,,,723,,,723,,,723,723,,,723,,,',
',,723,,,,,,,,,723,,,,,723,723,723,723,,723,723,723,723,,,,,723,723,',
'729,729,729,,729,723,,723,729,729,,,,729,,729,729,729,729,729,729,729',
',,,,,729,729,729,729,729,729,729,,,729,,,,,,,729,,,729,729,729,729,729',
'729,729,729,,729,729,729,,729,729,729,729,729,,,,,,,,,,,,,,,,,,,,729',
',,729,,,729,729,,,729,,,,,,729,,,,,,,,,729,,,,,729,729,729,729,,729',
'729,729,729,,,,,729,729,,752,752,752,,752,729,,729,752,752,,,,752,,752',
'752,752,752,752,752,752,,,,,,752,752,752,752,752,752,752,,,752,,,,,',
',752,,,752,752,752,752,752,752,752,752,,752,752,752,,752,752,752,752',
'752,,,,,,,,,,,,,,,,,,,,752,,,752,,,752,752,,,752,,,,,,752,,,,,,,,,752',
',,,,752,752,752,752,,752,752,752,752,,,,,752,752,,754,754,754,,754,752',
',752,754,754,,,,754,,754,754,754,754,754,754,754,,,,,,754,754,754,754',
'754,754,754,,,754,,,,,,,754,,,754,754,754,754,754,754,754,754,,754,754',
'754,,754,754,754,754,754,,,,,,,,,,,,,,,,,,,,754,,,754,,,754,754,,,754',
',,,,,754,,,,,,,,,754,,,,,754,754,754,754,,754,754,754,754,,,,,754,754',
',768,768,768,,768,754,,754,768,768,,,,768,,768,768,768,768,768,768,768',
',,,,,768,768,768,768,768,768,768,,,768,,,,,,,768,,,768,768,768,768,768',
'768,768,768,,768,768,768,,768,768,768,768,768,,,,,,,,,,,,,,,,,,,,768',
',,768,,,768,768,,,768,,,,,,768,,,,,,,,,768,,,,,768,768,768,768,,768',
'768,768,768,,,,,768,768,,769,769,769,,769,768,,768,769,769,,,,769,,769',
'769,769,769,769,769,769,,,,,,769,769,769,769,769,769,769,,,769,,,,,',
',769,,,769,769,769,769,769,769,769,769,,769,769,769,,769,769,769,769',
'769,,,,,,,,,,,,,,,,,,,,769,,,769,,,769,769,,,769,,,,,,769,,,,,,,,,769',
',,,,769,769,769,769,,769,769,769,769,,,,,769,769,,770,770,770,,770,769',
',769,770,770,,,,770,,770,770,770,770,770,770,770,,,,,,770,770,770,770',
'770,770,770,,,770,,,,,,,770,,,770,770,770,770,770,770,770,770,,770,770',
'770,,770,770,770,770,770,,,,,,,,,,,,,,,,,,,,770,,,770,,,770,770,,,770',
',,,,,770,,,,,,,,,770,,,,,770,770,770,770,,770,770,770,770,,,,,770,770',
',771,771,771,,771,770,,770,771,771,,,,771,,771,771,771,771,771,771,771',
',,,,,771,771,771,771,771,771,771,,,771,,,,,,,771,,,771,771,771,771,771',
'771,771,771,,771,771,771,,771,771,771,771,771,,,,,,,,,,,,,,,,,,,,771',
',,771,,,771,771,,,771,,,,,,771,,,,,,,,,771,,,,,771,771,771,771,,771',
'771,771,771,,,,,771,771,,773,773,773,,773,771,,771,773,773,,,,773,,773',
'773,773,773,773,773,773,,,,,,773,773,773,773,773,773,773,,,773,,,,,',
',773,,,773,773,773,773,773,773,773,773,,773,773,773,,773,773,773,773',
'773,,,,,,,,,,,,,,,,,,,,773,,,773,,,773,773,,,773,,,,,,773,,,,,,,,,773',
',,,,773,773,773,773,,773,773,773,773,,,,,773,773,,785,785,785,,785,773',
',773,785,785,,,,785,,785,785,785,785,785,785,785,,,,,,785,785,785,785',
'785,785,785,,,785,,,,,,,785,,,785,785,785,785,785,785,785,785,,785,785',
'785,,785,785,,,785,,,,,,,,,,,,,,,,,,,,785,,,785,,,785,785,,,785,,,,',
',,,,,,,,,,,,,,,785,785,785,785,,785,785,785,785,,,,,785,785,,832,832',
'832,,832,785,,785,832,832,,,,832,,832,832,832,832,832,832,832,,,,,,832',
'832,832,832,832,832,832,,,832,,,,,,,832,,,832,832,832,832,832,832,832',
'832,,832,832,832,,832,832,832,832,832,,,,,,,,,,,,,,,,,,,,832,,,832,',
',832,832,,,832,,,,,,832,,,,,,,,,832,,,,,832,832,832,832,,832,832,832',
'832,,,,,832,832,,837,837,837,,837,832,,832,837,837,,,,837,,837,837,837',
'837,837,837,837,,,,,,837,837,837,837,837,837,837,,,837,,,,,,,837,,,837',
'837,837,837,837,837,837,837,,837,837,837,,837,837,837,837,837,,,,,,',
',,,,,,,,,,,,,837,,,837,,,837,837,,,837,,837,,,,837,,,,,,,,,837,,,,,837',
'837,837,837,,837,837,837,837,,,,,837,837,,854,854,854,,854,837,,837',
'854,854,,,,854,,854,854,854,854,854,854,854,,,,,,854,854,854,854,854',
'854,854,,,854,,,,,,,854,,,854,854,854,854,854,854,854,854,854,854,854',
'854,,854,854,854,854,854,,,,,,,,,,,,,,,,,,,,854,,,854,,,854,854,,,854',
',,,854,,854,,,854,,,,,,854,,,,,854,854,854,854,,854,854,854,854,,,,',
'854,854,,855,855,855,,855,854,,854,855,855,,,,855,,855,855,855,855,855',
'855,855,,,,,,855,855,855,855,855,855,855,,,855,,,,,,,855,,,855,855,855',
'855,855,855,855,855,,855,855,855,,855,855,855,855,855,,,,,,,,,,,,,,',
',,,,,855,,,855,,,855,855,,,855,,,,,,855,,,,,,,,,855,,,,,855,855,855',
'855,,855,855,855,855,,,,,855,855,,869,869,869,,869,855,,855,869,869',
',,,869,,869,869,869,869,869,869,869,,,,,,869,869,869,869,869,869,869',
',,869,,,,,,,869,,,869,869,869,869,869,869,869,869,,869,869,869,,869',
'869,,,869,,,,,,,,,,,,,,,,,,,,869,,,869,,,869,869,,,869,,,,,,,,,,,,,',
',,,,,,869,869,869,869,,869,869,869,869,,,,,869,869,,881,881,881,,881',
'869,,869,881,881,,,,881,,881,881,881,881,881,881,881,,,,,,881,881,881',
'881,881,881,881,,,881,,,,,,,881,,,881,881,881,881,881,881,881,881,,881',
'881,881,,881,881,,,881,,,,,,,,,,,,,,,,,,,,881,,,881,,,881,881,,,881',
',,,,,,,,,,,,,,,,,,,881,881,881,881,,881,881,881,881,,,,,881,881,,975',
'975,975,,975,881,,881,975,975,,,,975,,975,975,975,975,975,975,975,,',
',,,975,975,975,975,975,975,975,,,975,,,,,,,975,,,975,975,975,975,975',
'975,975,975,975,975,975,975,,975,975,975,975,975,21,21,21,21,21,21,21',
'21,21,21,21,,21,21,,,21,21,,975,,,975,,,975,975,,,975,,975,21,975,21',
'975,21,21,975,21,21,21,21,21,975,21,,,,975,975,975,975,,975,975,975',
'975,,,,,975,975,,21,470,,,,975,,975,470,470,470,,,470,470,470,1005,470',
'1005,1005,1005,1005,1005,,,,470,470,,,,1005,,,,,,470,470,,470,470,470',
'470,470,,,,,,,,,1005,,,,,,,,,,,1005,1005,,,,1005,,,,,,,,,470,,411,,',
',,470,,411,411,411,470,470,411,411,411,,411,,,,,,,,,411,411,411,,,,',
',470,470,,411,411,,411,411,411,411,411,,,,,470,,,470,,,,,470,,,,,,,',
',,411,411,411,411,411,411,411,411,411,411,411,411,411,411,,,411,411',
'411,,,411,,411,411,,,411,411,,411,,411,,411,,411,411,,411,411,411,411',
'411,28,411,411,411,,,,28,28,28,,,28,28,28,,28,411,,,411,411,,411,,411',
'28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,28,,28,,28',
',28,,28,28,,28,28,28,28,28,,28,27,28,,,,,,27,27,27,,,27,27,27,28,27',
',28,28,,28,,28,,27,27,27,,,,,,,,,27,27,,27,27,27,27,27,,,,,,,,,,,,,',
',,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,',
'27,27,,,27,27,,27,,27,,27,,27,27,,27,27,27,27,27,,27,27,27,,,,,,,,,',
',,,,27,,,27,27,,27,,27,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9',
'9,,,,9,9,9,9,9,9,9,9,9,9,,,,,,9,9,9,9,9,9,9,9,9,,,9,,,,,,,,9,9,,9,9',
'9,9,9,9,9,,,9,9,,,,9,9,9,9,,,,,,,,,,,,,,9,9,,9,9,9,9,9,9,9,9,9,9,9,9',
',,9,9,,,,,,,,,,,,,,9,392,392,392,392,392,392,392,392,392,392,392,392',
'392,392,392,392,392,392,392,392,392,392,392,392,,,,392,392,392,392,392',
'392,392,392,392,392,,,,,,392,392,392,392,392,392,392,392,392,,,392,',
',,,,,,392,392,,392,392,392,392,392,392,392,,,392,392,,,,392,392,392',
'392,,,,,,,,,,,,,,392,392,,392,392,392,392,392,392,392,392,392,392,392',
'392,,,392,392,,,,,,,,,,,,,,392,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,,,,,,8,8,8,8,8,8,8,8,8,8,,8,,,,,,,',
'8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8',
'8,8,8,8,8,,,8,8,,,,,,,,,,,,,,8,611,611,611,611,611,611,611,611,611,611',
'611,611,611,611,611,611,611,611,611,611,611,611,611,611,,,,611,611,611',
'611,611,611,611,611,611,611,,,,,,611,611,611,611,611,611,611,611,611',
',,611,,,,,,,,611,611,,611,611,611,611,611,611,611,,,611,611,,,,611,611',
'611,611,,,,,,,,,,,,,,611,611,,611,611,611,611,611,611,611,611,611,611',
'611,611,,,611,611,,,,,,,,,,,,,,611,736,736,736,736,736,736,736,736,736',
'736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,,,,736,736',
'736,736,736,736,736,736,736,736,,,,,,736,736,736,736,736,736,736,736',
'736,,,736,,,,,,,,736,736,,736,736,736,736,736,736,736,,,736,736,,,,736',
'736,736,736,,,,,,,,,,,,,,736,736,,736,736,736,736,736,736,736,736,736',
'736,736,736,,,736,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71',
'71,71,71,71,71,71,71,,,,71,71,71,71,71,71,71,71,71,71,,,,,,71,71,71',
'71,71,71,71,71,71,71,71,71,,71,,,,,,71,71,,71,71,71,71,71,71,71,,,71',
'71,,,,71,71,71,71,,,,,,71,,,,,,,,71,71,,71,71,71,71,71,71,71,71,71,71',
'71,71,,,71,468,468,468,468,468,468,468,468,468,468,468,,468,468,,,468',
'468,,,890,,890,890,890,890,890,,,,,,468,,468,890,468,468,,468,468,468',
'468,468,,468,856,856,856,856,856,856,856,856,856,856,856,890,856,856',
',,856,856,468,468,,,890,890,,,,890,,,,,856,,856,,856,856,,856,856,856',
'856,856,,856,853,853,853,853,853,853,853,853,853,853,853,,853,853,,',
'853,853,,856,894,,894,894,894,894,894,,,,,,853,,853,894,853,853,,853',
'853,853,853,853,,853,753,753,753,753,753,753,753,753,753,753,753,894',
'753,753,,,753,753,,853,,,894,894,,,,894,,,,,753,,753,,753,753,,753,753',
'753,753,753,,753,758,758,758,758,758,758,758,758,758,758,758,,758,758',
',,758,758,,753,888,,888,888,888,888,888,,,,,,758,,758,888,758,758,,758',
'758,758,758,758,,758,760,760,760,760,760,760,760,760,760,760,760,888',
'760,760,,,760,760,,758,888,888,888,888,,,,888,,,,,760,,760,,760,760',
',760,760,760,760,760,,760,516,516,516,516,516,516,516,516,516,516,516',
',516,516,,,516,516,,760,864,,864,864,864,864,864,,,,,,516,,516,864,516',
'516,,516,516,516,516,516,,516,763,763,763,763,763,763,763,763,763,763',
'763,864,763,763,,,763,763,,516,,,864,864,,,,864,,,,,763,,763,,763,763',
',763,763,763,763,763,,763,767,767,767,767,767,767,767,767,767,767,767',
',767,767,,,767,767,,763,862,,862,862,862,862,862,,,,,,767,,767,862,767',
'767,,767,767,767,767,767,,767,423,423,423,423,423,423,423,423,423,423',
'423,862,423,423,,,423,423,,767,862,862,862,862,,,,862,,,,,423,,423,',
'423,423,,423,423,423,423,423,,423,,,,,,976,976,,,976,,,,,,,,976,976',
'423,976,976,976,976,976,976,976,,,976,976,,,,976,976,976,976,,,,,,976',
',,,,,,,976,976,,976,976,976,976,976,976,976,976,976,976,976,976,977',
'977,976,,977,,,,,,,,977,977,,977,977,977,977,977,977,977,,,977,977,',
',,977,977,977,977,,,,,,977,,,,,,,,977,977,,977,977,977,977,977,977,977',
'977,977,977,977,977,932,932,977,,932,,,,,,,,932,932,,932,932,932,932',
'932,932,932,,,932,932,,,,932,932,932,932,,,,,,932,,,,,,,,932,932,,932',
'932,932,932,932,932,932,932,932,932,932,932,579,579,932,,579,,,,,,,',
'579,579,,579,579,579,579,579,579,579,,,579,579,,,,579,579,579,579,,',
',,,579,,,,,,,,579,579,,579,579,579,579,579,579,579,579,579,579,579,579',
'578,578,579,,578,,,,,,,,578,578,,578,578,578,578,578,578,578,,,578,578',
',,,578,578,578,578,,,,,,578,,,,,,,,578,578,,578,578,578,578,578,578',
'578,578,578,578,578,578,572,572,578,,572,,,,,,,,572,572,,572,572,572',
'572,572,572,572,,,572,572,,,,572,572,572,572,,,,,,572,,,,,,,,572,572',
',572,572,572,572,572,572,572,572,572,572,572,572,571,571,572,,571,,',
',,,,,571,571,,571,571,571,571,571,571,571,,,571,571,,,,571,571,571,571',
',,,,,571,,,,,,,,571,571,,571,571,571,571,571,571,571,571,571,571,571',
'571,208,208,571,,208,,,,,,,,208,208,,208,208,208,208,208,208,208,,,208',
'208,,,,208,208,208,208,,,,,,208,,,,,,,,208,208,,208,208,208,208,208',
'208,208,208,208,208,208,208,207,207,208,,207,,,,,,,,207,207,,207,207',
'207,207,207,207,207,,,207,207,,,,207,207,207,207,,,,,,207,,,,,,,,207',
'207,,207,207,207,207,207,207,207,207,207,207,207,207,502,502,207,,502',
',,,,,,,502,502,,502,502,502,502,502,502,502,,,502,502,,,,502,502,502',
'502,,,,,,502,,,,,,,,502,502,,502,502,502,502,502,502,502,502,502,502',
'502,502,503,503,502,,503,,,,,,,,503,503,,503,503,503,503,503,503,503',
',,503,503,,,,503,503,503,503,,,,,,503,,,,,,,,503,503,,503,503,503,503',
'503,503,503,503,503,503,503,503,436,436,503,,436,,,,,,,,436,436,,436',
'436,436,436,436,436,436,,,436,436,,,,436,436,436,436,,,,,,436,,,,,,',
',436,436,,436,436,436,436,436,436,436,436,436,436,436,436,437,437,436',
',437,,,,,,,,437,437,,437,437,437,437,437,437,437,,,437,437,,,,437,437',
'437,437,,,,,,437,,,,,,,,437,437,,437,437,437,437,437,437,437,437,437',
'437,437,437,514,514,437,,514,,,,,,,,514,514,,514,514,514,514,514,514',
'514,,,514,514,,,,514,514,514,514,,,,,,514,,,,,,,,514,514,,514,514,514',
'514,514,514,514,514,514,514,514,514,515,515,514,,515,,,,,,,,515,515',
',515,515,515,515,515,515,515,,,515,515,,,,515,515,515,515,,,,,,515,',
',,,,,,515,515,,515,515,515,515,515,515,515,515,515,515,515,515,256,256',
'515,,256,,,,,,,,256,256,,256,256,256,256,256,256,256,,,256,256,,,,256',
'256,256,256,860,,860,860,860,860,860,,,,,,,256,256,860,256,256,256,256',
'256,256,256,256,256,256,256,256,,979,256,979,979,979,979,979,,860,,',
',,,,979,,860,860,860,860,,,915,860,915,915,915,915,915,967,,967,967',
'967,967,967,979,915,,,,,,,967,,,979,979,,,,979,,,,,,,915,915,,,,,,967',
',915,915,915,915,,,,915,,967,967,,,690,967,690,690,690,690,690,,692',
',692,692,692,692,692,690,,,,,,,,692,,892,,892,892,892,892,892,,,,,,690',
',,892,,,,,692,690,690,690,690,,,,690,692,692,692,692,,,,692,892,,694',
',694,694,694,694,694,,,892,892,,,,892,694,,965,,965,965,965,965,965',
'963,,963,963,963,963,963,,965,,,,,694,,963,,961,,961,961,961,961,961',
'694,694,,,,694,965,,961,,,,,963,,,,965,965,,,,965,,963,963,,,,963,961',
',333,,333,333,333,333,333,961,961,961,961,,,,961,333,,734,,734,734,734',
'734,734,,,,,,,,,734,,,,,333,333,,,,,,,,333,333,333,333,,,,333,734,,587',
',587,587,587,587,587,734,734,734,734,,,,734,587,,,,,,,,,,,,,,,,,,,,',
',587,587,,,,,,,,587,587,587,587,,,,587' ]
        racc_action_check = arr = ::Array.new(24934, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  2438,   356,   nil,   403,   nil,  5297,   746,   949, 22672, 22416,
   852,   nil,   807,   818,  1532,   225,   221,   851,   nil,   -71,
  5426, 21849,  1278,   nil,   -53,   nil,   -24, 22282, 22170,  5555,
  5684,  5813,   nil,  2825,  5942,  6071,   nil,  1223,   404,   253,
   439,   868,  6208,  6337,  6466,   993,   655,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  4386,   nil,   -80,  6595,
  6724,    -8,   nil,  6853,  6982,   nil,   nil,  7111,  7248,  7377,
  7506, 23041,   nil,   nil,   nil,   nil,   nil,   383,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   354,   nil,   nil,   488,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1156,   nil,  7635,   nil,
   nil,   nil,   nil,  7772,  7901,  8030,  8159,  8288,  2180,   nil,
   420,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   773,   nil,  2567,  8417,  8546,  8675, 24058, 23997,  8804,
  8933,  5168,  9062,  9191,  9320,   nil,   nil,  1277,   111,   259,
   925,   197,   845,   900,   nil,  9449,  2309,   913,  9578,  9707,
  9836,  9965, 10094, 10223, 10352, 10481, 10610, 10739, 10868, 10997,
 11126, 11255, 11384, 11513, 11642, 11771, 11900, 12029, 12158, 12287,
 12416, 12545, 12674, 12803,   nil,   nil, 24485,   nil,   nil,  1012,
 12932, 13061,   nil,   nil,   nil,   nil,   nil,   nil,   nil, 13190,
   nil, 13964,   nil,   982,   985,   nil, 13319,  1044, 13448,   nil,
 13577, 13706,   nil,   nil,   511,   nil, 13835,   875,  1033,  1007,
  1406,  1030,  1071,  1029, 13964,  1277,  1148,  1273,  1661,  1121,
  1531,   nil,  1101,  1074,   166,   nil,   nil,   nil,  1137,   649,
  1094, 14101,   nil,   446,  1168,  1169,  1664,   nil,  1176,   nil,
 14230,  1148, 14359,  1122,   nil,    92,   152,  1166,  1148,    81,
  1175,   nil,   nil, 24773,   849,     8,    10, 14488, 14617,   388,
  1127,  1138,   -19,   -18,   387,  1217,     8,  1243,   nil,   nil,
   457,   433,    -2,   nil,  1402,   nil,    29, 14746,   nil,   nil,
   nil,   496,   436,   602,   600,   583,   568,   365,   231,   526,
   nil,   625,   nil, 14875,   nil,   289,   284,   278,   259,   217,
   -31,   -41,   351,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  1116, 22544,   nil,   nil,   nil,   nil,  1095,   nil,  1051,
   nil, 15004,  1041,   nil,  7111,  1043,   nil,  1039,  1005,   501,
   450, 22060,   nil,   nil,   nil,   110,   622,  1043,   nil,   nil,
  4252,  4118,   nil, 23504,   nil,   974,   nil,   nil,  3986,   nil,
   nil,   nil,   nil,    18,   nil,  1022, 24241, 24302, 15133,   -40,
 15262, 15391, 15520,  1922,  1793,   511,   303,  1040,  1039,  1037,
  1032,  2696,  2825,  2954,  2051,  2180,  2309,  2438,  2567,   890,
  1277,  1019,  1148,  1406,   865,   994,  1535,  1664, 23090,   -51,
 21981,   nil,   nil,   nil,   nil,   963,   nil,   135,   192,   932,
   nil,   nil, 15649,   nil, 15778,   nil, 15907,   nil,   nil,   nil,
   nil, 16036,  1004,  3599,   928,   923,   nil,   nil,   922, 16173,
   901, 16302, 24119, 24180,  1144,   925,   nil,   nil, 16431,   861,
   nil, 16560, 16689, 16818, 24363, 24424, 23366, 16947,   962,   941,
   896,   808,   nil, 17076,   nil,   nil, 17205,   nil,   nil,   nil,
    35,   619,   nil,   734,   722,   nil,   627,   623,   588,   nil,
   nil,   nil,   nil,   nil,   nil,   543,   nil,   747,   nil, 17334,
   nil,   nil,   nil,   547,   nil,   nil,   nil,   541,   nil,   nil,
   457,  3470,   471,   nil,  3341,   145,    71,   427,   425, 17463,
 17592, 23936, 23875,    24,   nil,   nil,   549,   nil, 23814, 23753,
 17721,   nil,   nil,   nil,   409,   202,  3212, 24829,   nil,    24,
   nil,   nil,   nil,  1518,   nil,   nil,   nil,   198,   nil,   nil,
   147,   nil,   145,   nil,   nil,   142,   nil,   134,   nil,   nil,
   nil, 22800,   nil,   125, 17850, 17979,   359,   160, 18108, 18237,
 18366, 18495,    64,   nil,   nil, 18624, 18753,   -93,   nil, 18882,
 19011,   nil,   nil,   279,   260,     0,   220,  1225,  6071,  1205,
   nil,   551,   nil,  1793,  1306,   -21,   191,   nil,  1664,  1535,
   nil,  1180,   nil,  1216, 19140,   nil,   nil,   nil,  1188,  -118,
 19269,  1157,   nil,  1155,   134,    65,  1185,   323,   761,  1186,
  1156, 19398, 16036,  1225,  1227,   194,  1288, 19527,   nil,  1174,
   nil,   524,   nil,  1019,   890,  1189,   670,   nil,   nil,   877,
 24629,   nil, 24637,   nil, 24693,   nil, 19656,   nil,   776,   nil,
  1231,   415,   nil,   -96,   nil,   nil,   nil,   nil,   913,   nil,
    33,   nil,   nil,   nil,   nil,    71,   nil,    40,   -29,     9,
    11,    32,    33, 19785,   362,   594,   nil,   144,  5039, 19914,
   nil,   nil,   300,  4910, 24790,   417, 22928,   nil,   nil,   nil,
   nil,   nil,   nil,  4781,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   243, 20043, 23228, 20172,   nil,   286,   nil, 23274,   nil,
 23320,   nil,   nil, 23412,   nil,  7635,   nil, 23458, 20301, 20430,
 20559, 20688,   113, 20817,   467,   479,   nil,   491,   495,   499,
   nil,   534,   526,   533,   541, 20946,   nil,   nil,   705,   nil,
   nil,  4652,   624,   736,   nil,   nil,   nil,   621,   228,   nil,
   nil,   750,   nil,  4523,   635,   686,   nil,   nil,   687,   nil,
   684,   794,   727,   688,   nil,   nil,   nil,   695,   699,   nil,
   701,   703,   nil,   709,   nil,   721,   452,   732,   687,   nil,
   866,   nil, 21075,   893,  3986,  3857,   nil, 21204,  3728,    57,
   200,   nil,   995,   481,  3083,   nil,  1006,   886,   nil,   nil,
   890,   894,   nil, 23182, 21333, 21462, 23136,   647,   nil,   nil,
 24518,   nil, 23493,   nil, 23401,   nil,   nil,   950,  1392, 21591,
   458,  1020,   nil,   966,   nil,   nil,   nil,  2954,   nil,   nil,
   -10, 21720,   nil,   nil,   nil,   nil,   nil,   nil, 23309,   nil,
 23125,   nil, 24654,   nil, 23217,   nil,   nil,   nil,   nil,   320,
  1134,  1000,   nil,    33,   nil,  1135,  1155,   nil,    48,   nil,
   nil,   nil,  1235,   nil,   nil, 24570,   nil,   201,   nil,   nil,
   876,  1114,  1105,  1042,   nil,   976,   nil,   536,   nil,   nil,
   nil,  1535, 23692,   nil,   nil,   nil,  2696,   560,   158,   295,
   980,   666,   nil,   870,   856,   850,   846,   841,   815,   747,
   786,  2051,   nil,   nil,   nil,   nil,   nil,   761,   nil,  1922,
   nil, 24734,   nil, 24717,   nil, 24710,   nil, 24577,   nil,   nil,
   nil,   806,   113,    27,    85, 21849, 23570, 23631,  1406, 24547,
   nil,   nil,   nil,   nil,  1263,  1225,   834,   275,   380,   284,
   386,   420,   435,   nil,   nil,   446,    26,    32,    39,  1403,
   899,   900,   nil,   nil,   nil, 21945,   nil,   nil,   nil,   nil,
    -1,   nil,  1230,   nil ]

racc_action_default = [
    -3,  -586,    -1,  -572,    -4,  -586,    -7,  -586,  -586,  -586,
  -586,   -29,  -586,  -586,  -586,  -279,  -586,   -41,   -44,  -574,
  -586,   -49,   -51,   -52,   -53,   -57,  -258,  -258,  -258,  -293,
  -328,  -329,   -69,   -11,   -73,   -81,   -83,  -586,  -483,  -484,
  -586,  -586,  -586,  -586,  -586,  -574,  -239,  -270,  -271,  -272,
  -273,  -274,  -275,  -276,  -277,  -278,  -562,  -281,  -283,  -585,
  -553,  -301,  -389,  -586,  -586,  -306,  -309,  -572,  -586,  -586,
  -586,  -586,  -330,  -331,  -426,  -427,  -428,  -429,  -430,  -451,
  -433,  -434,  -453,  -455,  -438,  -443,  -447,  -449,  -465,  -453,
  -467,  -468,  -560,  -472,  -473,  -561,  -475,  -476,  -477,  -478,
  -479,  -480,  -481,  -482,  -487,  -488,  -586,    -2,  -573,  -581,
  -582,  -583,    -6,  -586,  -586,  -586,  -586,  -586,    -3,   -17,
  -586,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,
  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,  -132,  -133,
  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,  -142,  -143,
  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,  -152,  -153,
  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,  -162,  -163,
  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,  -172,  -173,
  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,  -182,  -183,
  -184,  -185,  -186,  -187,  -188,  -189,  -190,  -191,  -192,  -193,
  -194,   -22,  -121,   -11,  -586,  -586,  -248,  -586,  -586,  -586,
  -586,  -586,  -586,  -586,  -574,  -575,   -48,  -586,  -483,  -484,
  -586,  -279,  -586,  -586,  -231,  -586,   -11,  -586,  -586,  -586,
  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,
  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,
  -586,  -586,  -586,  -586,  -395,  -397,  -586,  -570,  -571,   -58,
  -248,  -586,  -300,  -401,  -410,  -412,   -64,  -407,   -65,  -574,
   -66,  -240,  -253,  -262,  -262,  -257,  -586,  -263,  -586,  -555,
  -586,  -586,   -67,   -68,  -572,   -12,  -586,   -15,  -586,   -71,
   -11,  -574,  -586,   -74,   -77,   -11,   -89,   -90,  -586,  -586,
   -97,  -293,  -296,  -574,  -586,  -328,  -329,  -332,  -408,  -586,
   -79,  -586,   -85,  -290,  -469,  -470,  -586,  -216,  -217,  -232,
  -586,   -11,  -586,  -574,  -241,  -578,  -578,  -586,  -586,  -578,
  -586,  -302,  -303,  -515,   -50,  -586,  -586,  -586,  -586,  -572,
  -586,  -573,  -483,  -484,  -586,  -586,  -279,  -586,  -342,  -343,
  -107,  -108,  -586,  -110,  -586,  -279,  -586,  -586,  -483,  -484,
  -321,  -112,  -113,  -154,  -155,  -156,  -172,  -177,  -184,  -187,
  -323,  -586,  -551,  -586,  -431,  -586,  -586,  -586,  -586,  -586,
  -586,  -586,  -586,  1014,    -5,  -584,   -23,   -24,   -25,   -26,
   -27,  -586,  -586,   -19,   -20,   -21,  -122,  -586,   -30,   -39,
   -40,  -586,  -586,   -31,  -197,  -574,  -249,  -262,  -262,  -563,
  -564,  -258,  -405,  -565,  -566,  -564,  -563,  -258,  -404,  -406,
  -565,  -566,   -37,  -205,   -38,  -586,   -42,   -43,  -195,  -263,
   -45,   -46,   -47,  -574,  -299,  -586,  -586,  -586,  -248,  -290,
  -586,  -586,  -586,  -206,  -207,  -208,  -209,  -210,  -211,  -212,
  -213,  -218,  -219,  -220,  -221,  -222,  -223,  -224,  -225,  -226,
  -227,  -228,  -229,  -230,  -233,  -234,  -235,  -236,  -574,  -378,
  -258,  -563,  -564,   -55,   -59,  -574,  -259,  -378,  -378,  -574,
  -295,  -254,  -586,  -255,  -586,  -260,  -586,  -264,  -558,  -559,
   -10,  -573,   -14,    -3,  -574,   -70,  -288,   -86,   -75,  -586,
  -574,  -248,  -586,  -586,   -96,  -586,  -469,  -470,  -586,   -82,
   -87,  -586,  -586,  -586,  -586,  -586,  -237,  -586,  -418,  -586,
  -284,  -586,  -242,  -580,  -579,  -244,  -580,  -291,  -292,  -554,
  -586,  -515,  -392,  -550,  -550,  -498,  -500,  -500,  -500,  -514,
  -516,  -517,  -518,  -519,  -520,  -521,  -522,  -586,  -524,  -586,
  -530,  -532,  -533,  -535,  -540,  -542,  -543,  -545,  -546,  -547,
  -586,   -11,  -333,  -334,   -11,  -586,  -586,  -586,  -586,  -586,
  -248,  -586,  -586,  -290,  -314,  -107,  -108,  -109,  -586,  -586,
  -248,  -317,  -489,  -490,  -586,  -586,   -11,  -515,  -325,  -574,
  -432,  -452,  -457,  -586,  -459,  -435,  -454,  -586,  -456,  -437,
  -586,  -440,  -586,  -442,  -445,  -586,  -446,  -586,  -466,    -8,
   -18,  -586,   -28,  -269,  -586,  -586,  -409,  -586,  -250,  -252,
  -586,  -586,   -60,  -247,  -402,  -586,  -586,   -62,  -403,  -586,
  -586,  -298,  -576,  -563,  -564,  -563,  -564,  -574,  -195,  -586,
  -379,  -574,  -381,   -11,   -54,  -398,  -378,  -245,   -11,   -11,
  -294,  -262,  -261,  -265,  -586,  -556,  -557,   -13,  -586,   -72,
  -586,   -78,   -84,  -574,  -563,  -564,  -246,   -93,   -95,  -586,
   -80,  -586,  -204,  -214,  -215,  -574,  -585,  -585,  -282,  -574,
  -287,  -578,  -390,   -11,   -11,  -574,  -586,  -496,  -497,  -586,
  -586,  -507,  -586,  -510,  -586,  -512,  -586,  -344,  -586,  -346,
  -348,  -355,  -521,  -574,  -526,  -534,  -544,  -548,  -585,  -335,
  -585,  -307,  -336,  -337,  -310,  -586,  -313,  -586,  -574,  -563,
  -564,  -567,  -289,  -586,  -107,  -108,  -111,  -574,   -11,  -586,
  -492,  -319,  -586,   -11,  -515,  -586,  -586,  -552,  -458,  -461,
  -462,  -463,  -464,   -11,  -436,  -439,  -441,  -444,  -448,  -450,
  -123,  -267,  -586,  -198,  -586,  -577,  -262,   -33,  -200,   -34,
  -201,   -61,   -35,  -203,   -36,  -202,   -63,  -196,  -586,  -586,
  -586,  -586,  -409,  -586,  -550,  -550,  -360,  -362,  -362,  -362,
  -377,  -586,  -574,  -383,  -521,  -586,  -528,  -538,  -586,  -400,
  -399,   -11,  -586,  -586,  -256,  -266,   -16,   -76,   -91,   -88,
  -297,  -585,  -340,   -11,  -419,  -585,  -420,  -421,  -586,  -243,
  -586,  -586,  -586,  -550,  -531,  -549,  -499,  -500,  -500,  -525,
  -500,  -500,  -541,  -500,  -536,  -574,  -586,  -353,  -586,  -523,
  -586,  -338,  -586,  -586,   -11,   -11,  -312,  -586,   -11,  -409,
  -586,  -409,  -586,  -586,   -11,  -322,  -586,  -574,  -494,  -326,
  -586,  -268,   -32,  -199,  -251,  -586,  -238,  -586,  -358,  -359,
  -368,  -370,  -586,  -373,  -586,  -375,  -380,  -586,  -586,  -586,
  -527,  -586,  -396,  -586,  -411,  -413,    -9,   -11,  -425,  -341,
  -586,  -586,  -423,  -285,  -393,  -394,  -391,  -495,  -586,  -503,
  -586,  -505,  -586,  -508,  -586,  -511,  -513,  -345,  -347,  -351,
  -586,  -356,  -304,  -586,  -305,  -586,  -586,  -265,  -585,  -315,
  -318,  -491,  -586,  -324,  -493,  -515,  -460,  -550,  -529,  -361,
  -362,  -362,  -362,  -362,  -539,  -362,  -382,  -574,  -385,  -387,
  -388,  -537,  -586,  -290,   -56,  -424,   -11,   -98,   -99,  -586,
  -586,  -106,  -422,  -500,  -500,  -500,  -500,  -349,  -586,  -354,
  -586,   -11,  -308,  -311,  -414,  -415,  -416,   -11,  -320,   -11,
  -357,  -586,  -365,  -586,  -367,  -586,  -371,  -586,  -374,  -376,
  -384,  -586,  -289,  -567,  -418,  -248,  -586,  -586,  -105,  -586,
  -501,  -504,  -506,  -509,  -586,  -352,  -585,  -586,  -586,  -362,
  -362,  -362,  -362,  -386,  -417,  -574,  -563,  -564,  -567,  -104,
  -500,  -350,  -339,  -316,  -327,  -586,  -363,  -366,  -369,  -372,
  -409,  -502,  -362,  -364 ]

clist = [
'213,324,370,14,272,272,272,331,14,273,273,273,255,411,417,405,519,256',
'111,676,2,616,733,217,483,292,320,129,129,263,267,474,217,217,217,568',
'14,298,298,325,124,124,307,307,6,119,202,127,127,6,400,691,693,695,335',
'336,424,509,339,259,266,268,470,561,564,108,217,217,427,475,217,344',
'354,354,822,13,307,307,307,532,13,830,111,577,652,293,652,655,539,310',
'522,525,711,714,529,703,819,778,930,107,898,291,779,124,386,387,388',
'389,13,530,781,14,274,274,274,801,217,217,217,217,14,14,112,928,924',
'600,602,682,216,655,376,333,901,289,270,282,283,382,391,356,360,876',
'326,329,469,477,687,688,478,833,954,818,6,820,812,805,434,880,483,374',
'375,390,6,340,377,378,591,379,598,601,601,380,381,743,729,817,814,918',
'643,738,611,272,327,13,402,645,648,649,646,372,402,328,13,13,1,397,332',
'392,347,581,349,930,371,321,949,322,14,217,217,217,412,480,217,217,217',
'217,217,217,292,679,652,652,655,924,898,384,993,323,337,14,834,338,835',
'495,723,272,272,957,728,844,421,273,411,417,272,661,825,637,586,273',
'587,867,985,772,670,736,915,201,780,657,782,927,715,217,217,,819,,,',
'822,,217,,,,,685,13,798,,732,292,,505,,539,292,1001,14,,,,14,,,,298',
'14,111,819,13,307,,521,,,263,666,726,663,267,398,403,298,,920,422,426',
'307,666,921,,922,14,217,,,565,566,492,,889,891,839,893,895,,896,,217',
'217,539,841,274,,491,955,498,943,959,,274,,111,791,,,494,1002,217,13',
'510,500,588,13,476,909,,,13,582,,819,479,631,217,666,,718,490,,,,,666',
'617,858,859,727,289,746,,746,761,289,13,,,766,,794,,,,,797,,,,,129,',
'272,623,,,647,,,628,650,989,842,124,,887,,846,610,,127,,,,567,659,,',
'412,,217,662,,622,838,809,,,639,627,,,,,,652,655,980,981,982,983,,,',
',,,,421,,,,623,,994,272,,,26,847,,,,26,,,427,,539,,,,,14,,14,,,26,,',
'298,644,217,412,794,307,26,26,26,298,26,658,,1011,307,412,,,217,,,806',
',,,,,,960,737,,,,421,,6,,912,,,26,26,,272,26,421,,717,510,,697,708,',
'272,710,,,510,,,,,14,651,13,14,13,,,,,217,412,,,,,,712,712,412,217,',
',,26,,14,,790,26,26,26,26,26,26,,730,731,,,956,421,,681,,936,,421,1010',
',,,,,800,617,807,,,783,217,217,,,,217,217,129,951,217,,789,788,13,,',
'13,792,793,,124,617,829,14,330,750,,127,14,14,,988,,,402,,,808,13,,298',
',,783,849,307,623,539,775,628,,298,810,811,,,307,,,26,26,26,26,14,14',
'26,26,26,26,26,26,,,,,,617,,756,,697,,26,827,,617,,,510,,,840,,813,',
'13,,843,,799,13,13,,217,,757,759,,14,217,762,764,850,14,426,,26,26,',
',878,,,14,882,26,,848,,,,,,,217,13,13,,,,783,,26,,897,124,26,,,,,26',
',,,,,15,,666,873,995,15,,,870,914,,399,,307,14,879,,429,,,26,26,,13',
',,14,,13,,,,,15,300,300,26,26,13,,,,,903,,,905,906,,,908,697,,697,,217',
'26,14,14,,,14,,,,,,14,346,355,355,,26,,,712,,,911,,,,852,485,,487,13',
'488,489,935,334,334,931,,334,,,307,13,,14,,,,939,,,917,15,307,775,,775',
',775,,,15,15,,,,,,947,697,,,970,13,13,,,13,,,,26,,13,334,334,334,334',
',,,,974,,,,,,,,,,,14,,,,986,,,,,,987,272,,13,697,14,697,,,,,14,,14,',
'421,,,,,,26,,26,,777,,617,,217,412,26,,,15,,,,,613,697,,775,,775,,775',
'26,775,,,,,,,,,15,,776,421,,13,,,,,,,430,431,432,433,,,,821,13,823,',
',,,13,,13,775,,,,,26,,,26,,,,,,26,,,,815,,,815,,,26,,,,,,26,15,,,653',
'15,330,,656,300,15,,,,,,39,,,,,39,,,,,300,,,,,,,,26,26,15,,,26,26,,',
'26,,653,,,330,39,297,297,,,,,,26,,,,,26,26,520,,,,,,,704,,,,,,,,334',
'334,,,,343,359,359,359,,,,429,,,,,,26,26,585,,,,,,,,,,,,,,,,589,,,,',
'38,,,,39,38,,,,,923,,925,39,39,,751,26,,,653,330,26,26,,,,26,,,,,,38',
'296,296,944,26,945,815,946,,776,,776,,776,,26,861,863,865,,,,,795,,',
',,,,,,,,16,342,358,358,358,16,,,,,,,804,,,,,,26,15,,15,,,,,,300,,,26',
'824,39,16,,,300,,,,,38,990,,991,,992,,,,38,38,,,,39,,,,26,1000,26,26',
',,26,,,348,,,26,675,,,,776,,776,,776,,776,,,,1012,851,,15,,,15,,,,,',
',,,,,,26,,,,16,,,,,,15,39,,16,16,39,776,742,,297,39,962,964,966,968',
',969,,,,,,38,,,,297,,,,,,,,,,39,,,,,,,,,38,,,,26,,,,,,,,15,907,,,,15',
'15,26,,,,,,26,,26,,300,330,,,,,1006,1007,1008,1009,,300,,,26,16,,,,',
',,425,15,15,,,,,1013,,38,,,,38,,,16,296,38,,,,,,,,,,,,,,,,296,,,,,,',
',,,38,,15,,,,,15,,,,,,,,,,15,,,,,,,334,,,,,,334,,16,,,,16,,,,,16,,,',
',,,,,,,,,,,,,,355,,,,,,15,39,16,39,,,,,,297,,,15,,,,,,297,,,,,,,,,,',
',,,,,,,,,,,,,,15,15,,,15,,,,,,15,,,,,,,,,,,,,,,334,,,39,,,39,,,,355',
',,,,,,,15,,,,941,,,,,,39,,,,,,,,,38,,38,,,,,,296,,,,,,,,,296,,,,,,,',
',,,,,,,,,,,,,,,15,,,,,,,,39,,,,,39,39,15,,,,,,15,,15,,297,,16,,16,38',
',,38,,,297,,,,,,,,,,,,39,39,,,,,,38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,39,,,,16,39,,16,,,,,,,,39,,,,38,,,,,38,38,,,,16,,,,,,,296,,,,,',
',,,,,296,,,,,,,,,,359,,38,38,,,39,,,,,,,,,425,,,39,,,,,,,,,,,16,,,,',
'16,16,,,,,,,,,,,,38,,39,39,,38,39,,,,,,39,,,38,,,,,,,16,16,,,,,,,,,',
',,,,359,,,,,,,,39,,,,938,,,,,,,,358,,,,,,38,,,,16,,,,,16,,,38,,,,,,',
'16,,,,,,,,,,,,,,,,,,,,,,39,,38,38,,,38,,,,,,38,,,39,,,224,,,39,,39,',
',16,271,271,271,,,,,,,,358,16,,317,318,319,,,38,,,,937,,,,,,,,271,271',
',,,,,,,,,,16,16,,,16,,,,,,16,,,,,,,,,,,,,,,,,,,,,,,,,38,,,,,,,,16,,',
',942,,,38,,,,,,38,,38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16',
',,,,,,,,,,,,,,16,,,,,,16,,16,,,,,,,,271,404,271,,,423,428,,,,,,,,,,',
',,,,224,,,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457',
'458,459,460,461,462,463,464,465,466,467,468,,,,,,,271,271,,,,,,,,271',
',,,,,,271,,271,,271,271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,516,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,271,,423,638,404,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,271,,271,,271,,,,,,,,,,,,,,,271',
',,,,,,,,,672,673,674,,,,,,,,,,271,,,271,,,,,,,,,,,,,,,,,,,,,,,271,,',
',,,,,,,,,,,,,,,,,271,271,,,,,,,,,,271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,271,753,,,271,271,758,760,,,,763,765,,,638,767,,,,,,,,,,,,,,,,,,',
',,,,,271,,,,,,,,,,,,,,,,,,,,,,,271,,,,,,,,,,,,,,,,,,,271,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,271,,853,,,,,,,,,,,,,,758',
'760,765,763,,856,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,271,,,,,,,,,,,,,,,,,271,853,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,271' ]
        racc_goto_table = arr = ::Array.new(2991, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'31,65,56,22,33,33,33,84,22,66,66,66,135,37,37,23,8,36,93,10,2,24,94',
'22,71,9,31,61,61,69,69,39,22,22,22,90,22,22,22,66,57,57,63,63,7,15,15',
'60,60,7,27,160,160,160,17,17,27,51,17,38,38,38,37,87,87,6,22,22,18,23',
'22,22,22,22,166,21,63,63,63,134,21,88,93,54,72,49,72,170,158,50,67,67',
'89,89,67,114,162,124,130,4,112,46,125,57,17,17,17,17,21,131,127,22,68',
'68,68,11,22,22,22,22,22,22,5,129,167,150,150,132,20,170,147,133,115',
'45,44,44,44,147,2,55,55,12,68,68,136,138,119,119,139,11,140,125,7,125',
'127,141,47,142,71,145,146,7,7,4,148,149,151,152,151,151,151,153,154',
'156,157,161,163,164,40,155,62,33,64,21,66,70,40,40,42,82,66,83,21,21',
'1,9,86,30,91,92,19,130,95,96,115,97,22,22,22,22,69,47,22,22,22,22,22',
'22,9,98,72,72,170,167,112,5,129,99,100,22,101,102,103,47,104,33,33,105',
'106,107,57,66,37,37,33,51,114,23,108,66,109,127,115,24,51,110,111,16',
'116,14,122,128,90,22,22,,162,,,,166,,22,,,,,134,21,24,,8,9,,31,,158',
'9,115,22,,,,22,,,,22,22,93,162,21,63,,31,,,69,37,54,23,69,20,20,22,',
'124,20,20,63,37,125,,125,22,22,,,17,17,7,,160,160,24,160,160,,160,,22',
'22,158,24,68,,6,11,50,125,94,,68,,93,40,,,46,88,22,21,49,46,36,21,44',
'89,,,21,93,,162,44,47,22,37,,23,4,,,,,37,31,119,119,23,45,151,,151,39',
'45,21,,,39,,71,,,,,51,,,,,61,,33,69,,,47,,,69,47,125,8,57,,119,,8,15',
',60,,,,4,47,,,69,,22,47,,38,87,67,,,31,38,,,,,,72,170,160,160,160,160',
',,,,,,,57,,,,69,,10,33,,,41,134,,,,41,,,18,,158,,,,,22,,22,,,41,,,22',
'38,22,69,71,63,41,41,41,22,41,2,,160,63,69,,,22,,,27,,,,,,,119,47,,',
',57,,7,,8,,,41,41,,33,41,57,,66,49,,113,9,,33,9,,,49,,,,,22,68,21,22',
'21,,,,,22,69,,,,,,93,93,69,22,,,,41,,22,,84,41,41,41,41,41,41,,93,93',
',,90,57,,68,,87,,57,24,,,,,,47,31,65,,,31,22,22,,,,22,22,61,87,22,,135',
'9,21,,,21,9,9,,57,31,47,22,28,15,,60,22,22,,8,,,66,,,31,21,,22,,,31',
'56,63,69,158,118,69,,22,9,9,,,63,,,41,41,41,41,22,22,41,41,41,41,41',
'41,,,,,,31,,68,,113,,41,113,,31,,,49,,,17,,118,,21,,17,,49,21,21,,22',
',20,20,,22,22,20,20,9,22,20,,41,41,,,65,,,22,65,41,,93,,,,,,,22,21,21',
',,,31,,41,,47,57,41,,,,,41,,,,,,25,,37,9,23,25,,,22,47,,28,,63,22,9',
',28,,,41,41,,21,,,22,,21,,,,,25,25,25,41,41,21,,,,,17,,,9,9,,,9,113',
',113,,22,41,22,22,,,22,,,,,,22,25,25,25,,41,,,93,,,93,,,,20,28,,28,21',
'28,28,9,29,29,22,,29,,,63,21,,22,,,,22,,,118,25,63,118,,118,,118,,,25',
'25,,,,,,113,113,,,31,21,21,,,21,,,,41,,21,29,29,29,29,,,,,9,,,,,,,,',
',,22,,,,9,,,,,,9,33,,21,113,22,113,,,,,22,,22,,57,,,,,,41,,41,,123,',
'31,,22,69,41,,,25,,,,,28,113,,118,,118,,118,41,118,,,,,,,,,25,,120,57',
',21,,,,,,,29,29,29,29,,,,123,21,123,,,,,21,,21,118,,,,,41,,,41,,,,,',
'41,,,,120,,,120,,,41,,,,,,41,25,,,28,25,28,,28,25,25,,,,,,53,,,,,53',
',,,,25,,,,,,,,41,41,25,,,41,41,,,41,,28,,,28,53,53,53,,,,,,41,,,,,41',
'41,29,,,,,,,28,,,,,,,,29,29,,,,53,53,53,53,,,,28,,,,,,41,41,29,,,,,',
',,,,,,,,,,29,,,,,52,,,,53,52,,,,,123,,123,53,53,,28,41,,,28,28,41,41',
',,,41,,,,,,52,52,52,123,41,123,120,123,,120,,120,,120,,41,121,121,121',
',,,,28,,,,,,,,,,,26,52,52,52,52,26,,,,,,,28,,,,,,41,25,,25,,,,,,25,',
',41,28,53,26,,,25,,,,,52,123,,123,,123,,,,52,52,,,,53,,,,41,123,41,41',
',,41,,,26,,,41,29,,,,120,,120,,120,,120,,,,123,28,,25,,,25,,,,,,,,,',
',,41,,,,26,,,,,,25,53,,26,26,53,120,25,,53,53,121,121,121,121,,121,',
',,,,52,,,,53,,,,,,,,,,53,,,,,,,,,52,,,,41,,,,,,,,25,28,,,,25,25,41,',
',,,,41,,41,,25,28,,,,,121,121,121,121,,25,,,41,26,,,,,,,26,25,25,,,',
',121,,52,,,,52,,,26,52,52,,,,,,,,,,,,,,,,52,,,,,,,,,,52,,25,,,,,25,',
',,,,,,,,25,,,,,,,29,,,,,,29,,26,,,,26,,,,,26,,,,,,,,,,,,,,,,,,25,,,',
',,25,53,26,53,,,,,,53,,,25,,,,,,53,,,,,,,,,,,,,,,,,,,,,,,,,25,25,,,25',
',,,,,25,,,,,,,,,,,,,,,29,,,53,,,53,,,,25,,,,,,,,25,,,,25,,,,,,53,,,',
',,,,,52,,52,,,,,,52,,,,,,,,,52,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,53,,',
',,53,53,25,,,,,,25,,25,,53,,26,,26,52,,,52,,,53,,,,,,,,,,,,53,53,,,',
',,52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,53,,,,26,53,,26,,,,,,,,53',
',,,52,,,,,52,52,,,,26,,,,,,,52,,,,,,,,,,,52,,,,,,,,,,53,,52,52,,,53',
',,,,,,,,26,,,53,,,,,,,,,,,26,,,,,26,26,,,,,,,,,,,,52,,53,53,,52,53,',
',,,,53,,,52,,,,,,,26,26,,,,,,,,,,,,,,53,,,,,,,,53,,,,53,,,,,,,,52,,',
',,,52,,,,26,,,,,26,,,52,,,,,,,26,,,,,,,,,,,,,,,,,,,,,,53,,52,52,,,52',
',,,,,52,,,53,,,32,,,53,,53,,,26,32,32,32,,,,,,,,52,26,,32,32,32,,,52',
',,,52,,,,,,,,32,32,,,,,,,,,,,26,26,,,26,,,,,,26,,,,,,,,,,,,,,,,,,,,',
',,,,52,,,,,,,,26,,,,26,,,52,,,,,,52,,52,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,26,,,,,,26,,26,,,,,,,,32,32,32,,,32',
'32,,,,,,,,,,,,,,,32,,,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32',
'32,32,32,32,32,32,32,32,32,32,,,,,,,32,32,,,,,,,,32,,,,,,,32,,32,,32',
'32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,32,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,32,,32,,32,,,,,,,,,,,,,,,32,,,,,,,,,,32,32,32,,,,,,,,,,32',
',,32,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,32,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,32,,,32,32,32,32,,,,32,32,,,32,32',
',,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,',
',32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,,',
',,,,,,,,,,,32,32,32,32,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32' ]
        racc_goto_check = arr = ::Array.new(2991, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   194,    20,   nil,    96,   117,    62,    44,  -305,    -8,
  -499,  -561,  -660,   nil,  -232,    37,   248,    -9,  -142,   132,
   108,    75,     3,  -191,  -384,   780,  1252,  -154,   587,   807,
    78,   -19,  2015,   -25,   nil,   nil,    -7,  -194,    33,  -228,
  -291,   479,  -285,   nil,   105,   100,    68,   -58,   nil,    51,
    54,  -254,  1185,  1081,  -269,    70,   -69,    32,   nil,   nil,
    39,    19,  -216,     8,   123,   -58,   -20,  -235,    83,     3,
  -285,  -250,  -398,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   118,   131,   -54,   nil,   134,  -272,  -627,  -473,
  -305,   130,  -157,    15,  -565,   131,   146,   147,  -301,   169,
   163,  -481,   165,  -482,  -340,  -672,  -343,  -492,  -112,  -120,
  -333,  -593,  -726,     5,  -452,  -696,  -383,   nil,    30,  -387,
   367,   457,  -381,   333,  -544,  -539,   nil,  -531,  -607,  -745,
  -770,  -224,  -403,    69,  -254,   -10,  -110,   nil,  -119,  -117,
  -758,  -522,  -648,   nil,   nil,    82,    81,    48,    81,    81,
  -253,  -209,    82,    85,    85,  -414,  -421,  -409,  -245,   nil,
  -485,  -515,  -594,  -510,  -680,   nil,  -618,  -738,   nil,   nil,
  -397 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   341,   287,   nil,   518,
   nil,   831,   nil,   284,   285,   nil,   nil,   nil,    11,    12,
    18,   223,   316,   nil,   nil,   221,   222,   nil,   277,    17,
   nil,   435,    21,    22,    23,    24,   nil,   669,   nil,   nil,
   nil,   304,   nil,    25,   406,    32,   nil,   nil,    34,    37,
    36,   nil,   218,   219,   353,   nil,   126,   414,   125,   128,
    75,    76,   nil,    46,   nil,   802,   407,   nil,   408,   419,
   624,   481,   275,   261,    47,    48,    49,    50,    51,    52,
    53,    54,    55,   nil,   262,    61,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   562,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   699,   546,   nil,   700,   919,   774,   534,   nil,
   535,   nil,   nil,   536,   nil,   538,   640,   nil,   nil,   nil,
   544,   nil,   nil,   nil,   735,   nil,   nil,   418,   nil,   nil,
   nil,   nil,   nil,    74,    77,    78,   nil,   nil,   nil,   nil,
   nil,   596,   nil,   nil,   nil,   nil,   nil,   nil,   816,   533,
   nil,   537,   548,   550,   786,   553,   554,   787,   557,   560,
   279 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 142, :_reduce_none,
  2, 143, :_reduce_2,
  0, 144, :_reduce_3,
  1, 144, :_reduce_4,
  3, 144, :_reduce_5,
  2, 144, :_reduce_6,
  1, 146, :_reduce_none,
  4, 146, :_reduce_8,
  4, 149, :_reduce_9,
  2, 150, :_reduce_10,
  0, 154, :_reduce_11,
  1, 154, :_reduce_12,
  3, 154, :_reduce_13,
  2, 154, :_reduce_14,
  1, 155, :_reduce_none,
  4, 155, :_reduce_16,
  0, 171, :_reduce_17,
  4, 148, :_reduce_18,
  3, 148, :_reduce_19,
  3, 148, :_reduce_20,
  3, 148, :_reduce_21,
  2, 148, :_reduce_22,
  3, 148, :_reduce_23,
  3, 148, :_reduce_24,
  3, 148, :_reduce_25,
  3, 148, :_reduce_26,
  3, 148, :_reduce_27,
  4, 148, :_reduce_28,
  1, 148, :_reduce_none,
  3, 148, :_reduce_30,
  3, 148, :_reduce_31,
  6, 148, :_reduce_32,
  5, 148, :_reduce_33,
  5, 148, :_reduce_34,
  5, 148, :_reduce_35,
  5, 148, :_reduce_36,
  3, 148, :_reduce_37,
  3, 148, :_reduce_38,
  3, 148, :_reduce_39,
  3, 148, :_reduce_40,
  1, 148, :_reduce_none,
  3, 159, :_reduce_42,
  3, 159, :_reduce_43,
  1, 170, :_reduce_none,
  3, 170, :_reduce_45,
  3, 170, :_reduce_46,
  3, 170, :_reduce_47,
  2, 170, :_reduce_48,
  1, 170, :_reduce_none,
  1, 158, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 175, :_reduce_none,
  4, 175, :_reduce_54,
  0, 183, :_reduce_55,
  5, 180, :_reduce_56,
  1, 182, :_reduce_none,
  2, 174, :_reduce_58,
  3, 174, :_reduce_59,
  4, 174, :_reduce_60,
  5, 174, :_reduce_61,
  4, 174, :_reduce_62,
  5, 174, :_reduce_63,
  2, 174, :_reduce_64,
  2, 174, :_reduce_65,
  2, 174, :_reduce_66,
  2, 174, :_reduce_67,
  2, 174, :_reduce_68,
  1, 160, :_reduce_69,
  3, 160, :_reduce_70,
  1, 187, :_reduce_71,
  3, 187, :_reduce_72,
  1, 186, :_reduce_none,
  2, 186, :_reduce_74,
  3, 186, :_reduce_75,
  5, 186, :_reduce_76,
  2, 186, :_reduce_77,
  4, 186, :_reduce_78,
  2, 186, :_reduce_79,
  4, 186, :_reduce_80,
  1, 186, :_reduce_81,
  3, 186, :_reduce_82,
  1, 190, :_reduce_none,
  3, 190, :_reduce_84,
  2, 189, :_reduce_85,
  3, 189, :_reduce_86,
  1, 192, :_reduce_87,
  3, 192, :_reduce_88,
  1, 191, :_reduce_89,
  1, 191, :_reduce_90,
  4, 191, :_reduce_91,
  3, 191, :_reduce_92,
  3, 191, :_reduce_93,
  3, 191, :_reduce_94,
  3, 191, :_reduce_95,
  2, 191, :_reduce_96,
  1, 191, :_reduce_97,
  1, 167, :_reduce_98,
  1, 167, :_reduce_99,
  4, 167, :_reduce_100,
  3, 167, :_reduce_101,
  3, 167, :_reduce_102,
  3, 167, :_reduce_103,
  3, 167, :_reduce_104,
  2, 167, :_reduce_105,
  1, 167, :_reduce_106,
  1, 195, :_reduce_107,
  1, 195, :_reduce_none,
  2, 196, :_reduce_109,
  1, 196, :_reduce_110,
  3, 196, :_reduce_111,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 200, :_reduce_117,
  1, 200, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  1, 157, :_reduce_121,
  0, 203, :_reduce_122,
  4, 157, :_reduce_123,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  3, 173, :_reduce_195,
  5, 173, :_reduce_196,
  3, 173, :_reduce_197,
  5, 173, :_reduce_198,
  6, 173, :_reduce_199,
  5, 173, :_reduce_200,
  5, 173, :_reduce_201,
  5, 173, :_reduce_202,
  5, 173, :_reduce_203,
  4, 173, :_reduce_204,
  3, 173, :_reduce_205,
  3, 173, :_reduce_206,
  3, 173, :_reduce_207,
  3, 173, :_reduce_208,
  3, 173, :_reduce_209,
  3, 173, :_reduce_210,
  3, 173, :_reduce_211,
  3, 173, :_reduce_212,
  3, 173, :_reduce_213,
  4, 173, :_reduce_214,
  4, 173, :_reduce_215,
  2, 173, :_reduce_216,
  2, 173, :_reduce_217,
  3, 173, :_reduce_218,
  3, 173, :_reduce_219,
  3, 173, :_reduce_220,
  3, 173, :_reduce_221,
  3, 173, :_reduce_222,
  3, 173, :_reduce_223,
  3, 173, :_reduce_224,
  3, 173, :_reduce_225,
  3, 173, :_reduce_226,
  3, 173, :_reduce_227,
  3, 173, :_reduce_228,
  3, 173, :_reduce_229,
  3, 173, :_reduce_230,
  2, 173, :_reduce_231,
  2, 173, :_reduce_232,
  3, 173, :_reduce_233,
  3, 173, :_reduce_234,
  3, 173, :_reduce_235,
  3, 173, :_reduce_236,
  3, 173, :_reduce_237,
  6, 173, :_reduce_238,
  1, 173, :_reduce_none,
  1, 169, :_reduce_none,
  1, 205, :_reduce_none,
  2, 205, :_reduce_none,
  4, 205, :_reduce_243,
  2, 205, :_reduce_244,
  3, 210, :_reduce_245,
  0, 211, :_reduce_246,
  1, 211, :_reduce_none,
  0, 164, :_reduce_248,
  1, 164, :_reduce_none,
  2, 164, :_reduce_none,
  4, 164, :_reduce_251,
  2, 164, :_reduce_252,
  1, 185, :_reduce_253,
  2, 185, :_reduce_254,
  2, 185, :_reduce_255,
  4, 185, :_reduce_256,
  1, 185, :_reduce_257,
  0, 214, :_reduce_258,
  2, 179, :_reduce_259,
  2, 213, :_reduce_260,
  2, 212, :_reduce_261,
  0, 212, :_reduce_262,
  1, 207, :_reduce_263,
  2, 207, :_reduce_264,
  3, 207, :_reduce_265,
  4, 207, :_reduce_266,
  3, 168, :_reduce_267,
  4, 168, :_reduce_268,
  2, 168, :_reduce_269,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_280,
  0, 237, :_reduce_281,
  4, 204, :_reduce_282,
  0, 238, :_reduce_283,
  0, 239, :_reduce_284,
  6, 204, :_reduce_285,
  0, 240, :_reduce_286,
  4, 204, :_reduce_287,
  3, 204, :_reduce_288,
  3, 204, :_reduce_289,
  2, 204, :_reduce_290,
  3, 204, :_reduce_291,
  3, 204, :_reduce_292,
  1, 204, :_reduce_293,
  4, 204, :_reduce_294,
  3, 204, :_reduce_295,
  1, 204, :_reduce_296,
  5, 204, :_reduce_297,
  4, 204, :_reduce_298,
  3, 204, :_reduce_299,
  2, 204, :_reduce_300,
  1, 204, :_reduce_none,
  2, 204, :_reduce_302,
  2, 204, :_reduce_303,
  6, 204, :_reduce_304,
  6, 204, :_reduce_305,
  0, 241, :_reduce_306,
  0, 242, :_reduce_307,
  7, 204, :_reduce_308,
  0, 243, :_reduce_309,
  0, 244, :_reduce_310,
  7, 204, :_reduce_311,
  5, 204, :_reduce_312,
  4, 204, :_reduce_313,
  0, 245, :_reduce_314,
  0, 246, :_reduce_315,
  9, 204, :_reduce_316,
  0, 247, :_reduce_317,
  6, 204, :_reduce_318,
  0, 248, :_reduce_319,
  7, 204, :_reduce_320,
  0, 249, :_reduce_321,
  5, 204, :_reduce_322,
  0, 250, :_reduce_323,
  6, 204, :_reduce_324,
  0, 251, :_reduce_325,
  0, 252, :_reduce_326,
  9, 204, :_reduce_327,
  1, 204, :_reduce_328,
  1, 204, :_reduce_329,
  1, 204, :_reduce_330,
  1, 204, :_reduce_331,
  1, 163, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  2, 228, :_reduce_335,
  1, 230, :_reduce_none,
  1, 230, :_reduce_none,
  1, 229, :_reduce_none,
  5, 229, :_reduce_339,
  1, 152, :_reduce_none,
  2, 152, :_reduce_341,
  1, 232, :_reduce_none,
  1, 232, :_reduce_none,
  1, 253, :_reduce_344,
  3, 253, :_reduce_345,
  1, 256, :_reduce_346,
  3, 256, :_reduce_347,
  1, 255, :_reduce_none,
  4, 255, :_reduce_349,
  6, 255, :_reduce_350,
  3, 255, :_reduce_351,
  5, 255, :_reduce_352,
  2, 255, :_reduce_353,
  4, 255, :_reduce_354,
  1, 255, :_reduce_355,
  3, 255, :_reduce_356,
  4, 257, :_reduce_357,
  2, 257, :_reduce_358,
  2, 257, :_reduce_359,
  1, 257, :_reduce_360,
  2, 262, :_reduce_361,
  0, 262, :_reduce_362,
  6, 263, :_reduce_363,
  8, 263, :_reduce_364,
  4, 263, :_reduce_365,
  6, 263, :_reduce_366,
  4, 263, :_reduce_367,
  2, 263, :_reduce_none,
  6, 263, :_reduce_369,
  2, 263, :_reduce_370,
  4, 263, :_reduce_371,
  6, 263, :_reduce_372,
  2, 263, :_reduce_373,
  4, 263, :_reduce_374,
  2, 263, :_reduce_375,
  4, 263, :_reduce_376,
  1, 263, :_reduce_none,
  0, 181, :_reduce_378,
  1, 181, :_reduce_379,
  3, 267, :_reduce_380,
  1, 267, :_reduce_381,
  4, 267, :_reduce_382,
  1, 268, :_reduce_383,
  4, 268, :_reduce_384,
  1, 269, :_reduce_385,
  3, 269, :_reduce_386,
  1, 270, :_reduce_387,
  1, 270, :_reduce_none,
  0, 274, :_reduce_389,
  3, 227, :_reduce_390,
  4, 272, :_reduce_391,
  1, 272, :_reduce_392,
  3, 273, :_reduce_393,
  3, 273, :_reduce_394,
  0, 277, :_reduce_395,
  5, 276, :_reduce_396,
  2, 176, :_reduce_397,
  4, 176, :_reduce_398,
  5, 176, :_reduce_399,
  5, 176, :_reduce_400,
  2, 226, :_reduce_401,
  4, 226, :_reduce_402,
  4, 226, :_reduce_403,
  3, 226, :_reduce_404,
  3, 226, :_reduce_405,
  3, 226, :_reduce_406,
  2, 226, :_reduce_407,
  1, 226, :_reduce_408,
  4, 226, :_reduce_409,
  0, 279, :_reduce_410,
  5, 225, :_reduce_411,
  0, 280, :_reduce_412,
  5, 225, :_reduce_413,
  5, 231, :_reduce_414,
  1, 281, :_reduce_415,
  1, 281, :_reduce_none,
  6, 151, :_reduce_417,
  0, 151, :_reduce_418,
  1, 282, :_reduce_419,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 283, :_reduce_422,
  1, 283, :_reduce_none,
  2, 153, :_reduce_424,
  1, 153, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 216, :_reduce_429,
  1, 285, :_reduce_430,
  2, 285, :_reduce_431,
  3, 286, :_reduce_432,
  1, 286, :_reduce_433,
  1, 286, :_reduce_434,
  3, 217, :_reduce_435,
  4, 218, :_reduce_436,
  3, 219, :_reduce_437,
  0, 290, :_reduce_438,
  3, 290, :_reduce_439,
  1, 291, :_reduce_440,
  2, 291, :_reduce_441,
  3, 221, :_reduce_442,
  0, 293, :_reduce_443,
  3, 293, :_reduce_444,
  3, 220, :_reduce_445,
  3, 222, :_reduce_446,
  0, 294, :_reduce_447,
  3, 294, :_reduce_448,
  0, 295, :_reduce_449,
  3, 295, :_reduce_450,
  0, 287, :_reduce_451,
  2, 287, :_reduce_452,
  0, 288, :_reduce_453,
  2, 288, :_reduce_454,
  0, 289, :_reduce_455,
  2, 289, :_reduce_456,
  1, 292, :_reduce_457,
  2, 292, :_reduce_458,
  0, 297, :_reduce_459,
  4, 292, :_reduce_460,
  1, 296, :_reduce_461,
  1, 296, :_reduce_462,
  1, 296, :_reduce_463,
  1, 296, :_reduce_none,
  1, 201, :_reduce_465,
  3, 202, :_reduce_466,
  1, 284, :_reduce_467,
  1, 284, :_reduce_468,
  2, 284, :_reduce_469,
  2, 284, :_reduce_470,
  1, 193, :_reduce_471,
  1, 193, :_reduce_472,
  1, 193, :_reduce_473,
  1, 193, :_reduce_474,
  1, 193, :_reduce_475,
  1, 194, :_reduce_476,
  1, 194, :_reduce_477,
  1, 194, :_reduce_478,
  1, 194, :_reduce_479,
  1, 194, :_reduce_480,
  1, 194, :_reduce_481,
  1, 194, :_reduce_482,
  1, 223, :_reduce_483,
  1, 223, :_reduce_484,
  1, 162, :_reduce_485,
  1, 162, :_reduce_486,
  1, 166, :_reduce_487,
  1, 166, :_reduce_488,
  1, 233, :_reduce_489,
  0, 298, :_reduce_490,
  4, 233, :_reduce_491,
  2, 233, :_reduce_492,
  3, 235, :_reduce_493,
  2, 235, :_reduce_494,
  4, 299, :_reduce_495,
  2, 299, :_reduce_496,
  2, 299, :_reduce_497,
  1, 299, :_reduce_498,
  2, 301, :_reduce_499,
  0, 301, :_reduce_500,
  6, 275, :_reduce_501,
  8, 275, :_reduce_502,
  4, 275, :_reduce_503,
  6, 275, :_reduce_504,
  4, 275, :_reduce_505,
  6, 275, :_reduce_506,
  2, 275, :_reduce_507,
  4, 275, :_reduce_508,
  6, 275, :_reduce_509,
  2, 275, :_reduce_510,
  4, 275, :_reduce_511,
  2, 275, :_reduce_512,
  4, 275, :_reduce_513,
  1, 275, :_reduce_514,
  0, 275, :_reduce_515,
  1, 271, :_reduce_516,
  1, 271, :_reduce_517,
  1, 271, :_reduce_518,
  1, 271, :_reduce_519,
  1, 254, :_reduce_none,
  1, 254, :_reduce_none,
  1, 303, :_reduce_522,
  3, 303, :_reduce_523,
  1, 264, :_reduce_524,
  3, 264, :_reduce_525,
  2, 304, :_reduce_526,
  2, 305, :_reduce_527,
  1, 258, :_reduce_528,
  3, 258, :_reduce_529,
  1, 300, :_reduce_530,
  3, 300, :_reduce_531,
  1, 306, :_reduce_none,
  1, 306, :_reduce_none,
  2, 259, :_reduce_534,
  1, 259, :_reduce_535,
  3, 307, :_reduce_536,
  3, 308, :_reduce_537,
  1, 265, :_reduce_538,
  3, 265, :_reduce_539,
  1, 302, :_reduce_540,
  3, 302, :_reduce_541,
  1, 309, :_reduce_none,
  1, 309, :_reduce_none,
  2, 266, :_reduce_544,
  1, 266, :_reduce_545,
  1, 310, :_reduce_none,
  1, 310, :_reduce_none,
  2, 261, :_reduce_548,
  2, 260, :_reduce_549,
  0, 260, :_reduce_550,
  1, 236, :_reduce_none,
  3, 236, :_reduce_552,
  0, 224, :_reduce_553,
  2, 224, :_reduce_none,
  1, 209, :_reduce_555,
  3, 209, :_reduce_556,
  3, 311, :_reduce_557,
  2, 311, :_reduce_558,
  2, 311, :_reduce_559,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 172, :_reduce_none,
  1, 172, :_reduce_none,
  2, 188, :_reduce_576,
  2, 165, :_reduce_577,
  0, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 234, :_reduce_581,
  1, 234, :_reduce_none,
  1, 147, :_reduce_none,
  2, 147, :_reduce_none,
  0, 206, :_reduce_585 ]

racc_reduce_n = 586

racc_shift_n = 1014

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tDSTAR => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tREGEXP_OPT => 119,
  :tWORDS_BEG => 120,
  :tQWORDS_BEG => 121,
  :tSYMBOLS_BEG => 122,
  :tQSYMBOLS_BEG => 123,
  :tSTRING_DBEG => 124,
  :tSTRING_DVAR => 125,
  :tSTRING_END => 126,
  :tSTRING_DEND => 127,
  :tSTRING => 128,
  :tSYMBOL => 129,
  :tNL => 130,
  :tEH => 131,
  :tCOLON => 132,
  :tCOMMA => 133,
  :tSPACE => 134,
  :tSEMI => 135,
  :tLAMBDA => 136,
  :tLAMBEG => 137,
  :tCHARACTER => 138,
  :tEQL => 139,
  :tLOWEST => 140 }

racc_nt_base = 141

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tDSTAR",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSYMBOLS_BEG",
  "tQSYMBOLS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING_DEND",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "stmt_or_begin",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "dot_or_colon",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "fcall",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "primary",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "symbols",
  "qsymbols",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@21",
  "f_args",
  "do_block",
  "@22",
  "operation3",
  "@23",
  "@24",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "symbol_list",
  "qword_list",
  "qsym_list",
  "string_dvar",
  "@25",
  "@26",
  "args_tail",
  "f_kwarg",
  "opt_args_tail",
  "f_optarg",
  "f_arg_item",
  "f_kw",
  "f_block_kw",
  "kwrest_mark",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby20.y', 51)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 56)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 60)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 64)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 68)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby20.y', 74)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 79)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 95)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 100)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 104)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 108)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 112)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'ruby20.y', 118)
  def _reduce_16(val, _values, result)
                          if in_def?
                        diagnostic :error, :begin_in_method, nil, val[0]
                      end

                      result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 127)
  def _reduce_17(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 131)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 135)
  def _reduce_19(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 141)
  def _reduce_20(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 147)
  def _reduce_21(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 151)
  def _reduce_22(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 155)
  def _reduce_23(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 160)
  def _reduce_24(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 165)
  def _reduce_25(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 169)
  def _reduce_26(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 173)
  def _reduce_27(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 181)
  def _reduce_28(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'ruby20.y', 186)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 190)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 194)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 201)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 208)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 215)
  def _reduce_35(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 222)
  def _reduce_36(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 229)
  def _reduce_37(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 233)
  def _reduce_38(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 238)
  def _reduce_39(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 242)
  def _reduce_40(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'ruby20.y', 249)
  def _reduce_42(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 253)
  def _reduce_43(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'ruby20.y', 259)
  def _reduce_45(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 263)
  def _reduce_46(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 267)
  def _reduce_47(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 271)
  def _reduce_48(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'ruby20.y', 283)
  def _reduce_54(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 289)
  def _reduce_55(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 293)
  def _reduce_56(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

# reduce 57 omitted

module_eval(<<'.,.,', 'ruby20.y', 302)
  def _reduce_58(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 307)
  def _reduce_59(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 316)
  def _reduce_60(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 321)
  def _reduce_61(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 330)
  def _reduce_62(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 335)
  def _reduce_63(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 344)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 349)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 354)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 359)
  def _reduce_67(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 364)
  def _reduce_68(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 370)
  def _reduce_69(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 374)
  def _reduce_70(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 379)
  def _reduce_71(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 383)
  def _reduce_72(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 73 omitted

module_eval(<<'.,.,', 'ruby20.y', 389)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 394)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 399)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 405)
  def _reduce_77(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 410)
  def _reduce_78(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 416)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 420)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 425)
  def _reduce_81(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 429)
  def _reduce_82(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 83 omitted

module_eval(<<'.,.,', 'ruby20.y', 436)
  def _reduce_84(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 441)
  def _reduce_85(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 445)
  def _reduce_86(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 450)
  def _reduce_87(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 454)
  def _reduce_88(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 459)
  def _reduce_89(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 463)
  def _reduce_90(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 467)
  def _reduce_91(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 471)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 475)
  def _reduce_93(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 479)
  def _reduce_94(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 483)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 488)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 493)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 498)
  def _reduce_98(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 502)
  def _reduce_99(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 506)
  def _reduce_100(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 510)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 514)
  def _reduce_102(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 518)
  def _reduce_103(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 522)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 527)
  def _reduce_105(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 532)
  def _reduce_106(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 537)
  def _reduce_107(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby20.y', 543)
  def _reduce_109(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 547)
  def _reduce_110(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 551)
  def _reduce_111(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'ruby20.y', 560)
  def _reduce_117(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

module_eval(<<'.,.,', 'ruby20.y', 569)
  def _reduce_121(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 573)
  def _reduce_122(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 577)
  def _reduce_123(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

module_eval(<<'.,.,', 'ruby20.y', 598)
  def _reduce_195(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 602)
  def _reduce_196(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 612)
  def _reduce_197(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 616)
  def _reduce_198(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 626)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 633)
  def _reduce_200(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 640)
  def _reduce_201(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 647)
  def _reduce_202(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 654)
  def _reduce_203(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                      result = @builder.op_assign(const, val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 660)
  def _reduce_204(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_global(val[0], val[1]))
                      result = @builder.op_assign(const, val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 666)
  def _reduce_205(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 670)
  def _reduce_206(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 674)
  def _reduce_207(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 678)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 682)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 686)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 690)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 694)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 698)
  def _reduce_213(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 702)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.integer(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 709)
  def _reduce_215(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.float(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 716)
  def _reduce_216(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 720)
  def _reduce_217(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 724)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 728)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 732)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 736)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 740)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 744)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 748)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 752)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 756)
  def _reduce_226(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 760)
  def _reduce_227(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 764)
  def _reduce_228(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 768)
  def _reduce_229(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 772)
  def _reduce_230(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 776)
  def _reduce_231(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 780)
  def _reduce_232(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 784)
  def _reduce_233(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 788)
  def _reduce_234(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 792)
  def _reduce_235(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 796)
  def _reduce_236(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 800)
  def _reduce_237(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 805)
  def _reduce_238(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 239 omitted

# reduce 240 omitted

# reduce 241 omitted

# reduce 242 omitted

module_eval(<<'.,.,', 'ruby20.y', 816)
  def _reduce_243(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 820)
  def _reduce_244(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 825)
  def _reduce_245(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 830)
  def _reduce_246(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 247 omitted

module_eval(<<'.,.,', 'ruby20.y', 836)
  def _reduce_248(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 249 omitted

# reduce 250 omitted

module_eval(<<'.,.,', 'ruby20.y', 842)
  def _reduce_251(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 846)
  def _reduce_252(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 851)
  def _reduce_253(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 855)
  def _reduce_254(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 859)
  def _reduce_255(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 864)
  def _reduce_256(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 870)
  def _reduce_257(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 874)
  def _reduce_258(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 879)
  def _reduce_259(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 886)
  def _reduce_260(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 891)
  def _reduce_261(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 895)
  def _reduce_262(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 900)
  def _reduce_263(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 904)
  def _reduce_264(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 908)
  def _reduce_265(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 912)
  def _reduce_266(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 917)
  def _reduce_267(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 921)
  def _reduce_268(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 925)
  def _reduce_269(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

module_eval(<<'.,.,', 'ruby20.y', 940)
  def _reduce_280(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 944)
  def _reduce_281(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 949)
  def _reduce_282(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin_keyword(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 955)
  def _reduce_283(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 960)
  def _reduce_284(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 964)
  def _reduce_285(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 970)
  def _reduce_286(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 974)
  def _reduce_287(val, _values, result)
                          result = @builder.begin(val[0], nil, val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 978)
  def _reduce_288(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 982)
  def _reduce_289(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 986)
  def _reduce_290(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 990)
  def _reduce_291(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 994)
  def _reduce_292(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 998)
  def _reduce_293(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1002)
  def _reduce_294(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1006)
  def _reduce_295(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1010)
  def _reduce_296(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1014)
  def _reduce_297(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1019)
  def _reduce_298(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1023)
  def _reduce_299(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1027)
  def _reduce_300(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 301 omitted

module_eval(<<'.,.,', 'ruby20.y', 1036)
  def _reduce_302(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1042)
  def _reduce_303(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1050)
  def _reduce_304(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1057)
  def _reduce_305(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1064)
  def _reduce_306(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1068)
  def _reduce_307(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1072)
  def _reduce_308(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1077)
  def _reduce_309(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1081)
  def _reduce_310(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1085)
  def _reduce_311(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1090)
  def _reduce_312(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1098)
  def _reduce_313(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1106)
  def _reduce_314(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1110)
  def _reduce_315(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1114)
  def _reduce_316(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1120)
  def _reduce_317(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1125)
  def _reduce_318(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1139)
  def _reduce_319(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1147)
  def _reduce_320(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1157)
  def _reduce_321(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1162)
  def _reduce_322(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1174)
  def _reduce_323(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1180)
  def _reduce_324(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1189)
  def _reduce_325(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1193)
  def _reduce_326(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1199)
  def _reduce_327(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1208)
  def _reduce_328(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1212)
  def _reduce_329(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1216)
  def _reduce_330(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1220)
  def _reduce_331(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

module_eval(<<'.,.,', 'ruby20.y', 1229)
  def _reduce_335(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

module_eval(<<'.,.,', 'ruby20.y', 1238)
  def _reduce_339(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby20.y', 1249)
  def _reduce_341(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 342 omitted

# reduce 343 omitted

module_eval(<<'.,.,', 'ruby20.y', 1257)
  def _reduce_344(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1263)
  def _reduce_345(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1268)
  def _reduce_346(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1272)
  def _reduce_347(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 348 omitted

module_eval(<<'.,.,', 'ruby20.y', 1278)
  def _reduce_349(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1285)
  def _reduce_350(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1293)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1298)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1304)
  def _reduce_353(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1310)
  def _reduce_354(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1317)
  def _reduce_355(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1321)
  def _reduce_356(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1327)
  def _reduce_357(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1331)
  def _reduce_358(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1335)
  def _reduce_359(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1339)
  def _reduce_360(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1345)
  def _reduce_361(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1349)
  def _reduce_362(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1354)
  def _reduce_363(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1361)
  def _reduce_364(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1369)
  def _reduce_365(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1375)
  def _reduce_366(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1382)
  def _reduce_367(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 368 omitted

module_eval(<<'.,.,', 'ruby20.y', 1389)
  def _reduce_369(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1396)
  def _reduce_370(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1400)
  def _reduce_371(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1406)
  def _reduce_372(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1413)
  def _reduce_373(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1418)
  def _reduce_374(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1424)
  def _reduce_375(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1429)
  def _reduce_376(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 377 omitted

module_eval(<<'.,.,', 'ruby20.y', 1437)
  def _reduce_378(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1441)
  def _reduce_379(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1446)
  def _reduce_380(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1450)
  def _reduce_381(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1454)
  def _reduce_382(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1459)
  def _reduce_383(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1463)
  def _reduce_384(val, _values, result)
                          result = val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1468)
  def _reduce_385(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1472)
  def _reduce_386(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1477)
  def _reduce_387(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 388 omitted

module_eval(<<'.,.,', 'ruby20.y', 1482)
  def _reduce_389(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1486)
  def _reduce_390(val, _values, result)
                          result = [ val[1], val[2] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1493)
  def _reduce_391(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1497)
  def _reduce_392(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1502)
  def _reduce_393(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1506)
  def _reduce_394(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1511)
  def _reduce_395(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1515)
  def _reduce_396(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1522)
  def _reduce_397(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1528)
  def _reduce_398(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1534)
  def _reduce_399(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      method_call = @builder.call_method(val[0], val[1], val[2],
                                      lparen_t, args, rparen_t)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1544)
  def _reduce_400(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                      nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1554)
  def _reduce_401(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1560)
  def _reduce_402(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1566)
  def _reduce_403(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1572)
  def _reduce_404(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1576)
  def _reduce_405(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1582)
  def _reduce_406(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1588)
  def _reduce_407(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1594)
  def _reduce_408(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1598)
  def _reduce_409(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1603)
  def _reduce_410(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1607)
  def _reduce_411(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1613)
  def _reduce_412(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1617)
  def _reduce_413(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1624)
  def _reduce_414(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1630)
  def _reduce_415(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 416 omitted

module_eval(<<'.,.,', 'ruby20.y', 1636)
  def _reduce_417(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1649)
  def _reduce_418(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1654)
  def _reduce_419(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 420 omitted

# reduce 421 omitted

module_eval(<<'.,.,', 'ruby20.y', 1661)
  def _reduce_422(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 423 omitted

module_eval(<<'.,.,', 'ruby20.y', 1667)
  def _reduce_424(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

module_eval(<<'.,.,', 'ruby20.y', 1677)
  def _reduce_429(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1682)
  def _reduce_430(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1686)
  def _reduce_431(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1691)
  def _reduce_432(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1695)
  def _reduce_433(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1699)
  def _reduce_434(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1704)
  def _reduce_435(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1709)
  def _reduce_436(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1715)
  def _reduce_437(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1720)
  def _reduce_438(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1724)
  def _reduce_439(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1729)
  def _reduce_440(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1733)
  def _reduce_441(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1738)
  def _reduce_442(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1743)
  def _reduce_443(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1747)
  def _reduce_444(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1752)
  def _reduce_445(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1757)
  def _reduce_446(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1762)
  def _reduce_447(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1766)
  def _reduce_448(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1771)
  def _reduce_449(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1775)
  def _reduce_450(val, _values, result)
                          result = val[0] << @builder.symbol_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1780)
  def _reduce_451(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1784)
  def _reduce_452(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1789)
  def _reduce_453(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1793)
  def _reduce_454(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1798)
  def _reduce_455(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1802)
  def _reduce_456(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1807)
  def _reduce_457(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1811)
  def _reduce_458(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1815)
  def _reduce_459(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1820)
  def _reduce_460(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1828)
  def _reduce_461(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1832)
  def _reduce_462(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1836)
  def _reduce_463(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 464 omitted

module_eval(<<'.,.,', 'ruby20.y', 1843)
  def _reduce_465(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1848)
  def _reduce_466(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1853)
  def _reduce_467(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1857)
  def _reduce_468(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1861)
  def _reduce_469(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.integer(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1866)
  def _reduce_470(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.float(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1872)
  def _reduce_471(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1876)
  def _reduce_472(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1880)
  def _reduce_473(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1884)
  def _reduce_474(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1888)
  def _reduce_475(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1893)
  def _reduce_476(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1897)
  def _reduce_477(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1901)
  def _reduce_478(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1905)
  def _reduce_479(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1909)
  def _reduce_480(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1913)
  def _reduce_481(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1917)
  def _reduce_482(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1922)
  def _reduce_483(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1926)
  def _reduce_484(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1931)
  def _reduce_485(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1935)
  def _reduce_486(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1940)
  def _reduce_487(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1944)
  def _reduce_488(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1949)
  def _reduce_489(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1953)
  def _reduce_490(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1957)
  def _reduce_491(val, _values, result)
                          result = [ val[0], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1961)
  def _reduce_492(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1967)
  def _reduce_493(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1973)
  def _reduce_494(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1978)
  def _reduce_495(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1982)
  def _reduce_496(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1986)
  def _reduce_497(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1990)
  def _reduce_498(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1995)
  def _reduce_499(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1999)
  def _reduce_500(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2004)
  def _reduce_501(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2011)
  def _reduce_502(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2019)
  def _reduce_503(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2025)
  def _reduce_504(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2032)
  def _reduce_505(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2038)
  def _reduce_506(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2045)
  def _reduce_507(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2050)
  def _reduce_508(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2056)
  def _reduce_509(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2063)
  def _reduce_510(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2068)
  def _reduce_511(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2074)
  def _reduce_512(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2079)
  def _reduce_513(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2085)
  def _reduce_514(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2089)
  def _reduce_515(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2094)
  def _reduce_516(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2098)
  def _reduce_517(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2102)
  def _reduce_518(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2106)
  def _reduce_519(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 520 omitted

# reduce 521 omitted

module_eval(<<'.,.,', 'ruby20.y', 2114)
  def _reduce_522(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2120)
  def _reduce_523(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2125)
  def _reduce_524(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2129)
  def _reduce_525(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2134)
  def _reduce_526(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2143)
  def _reduce_527(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2152)
  def _reduce_528(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2156)
  def _reduce_529(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2161)
  def _reduce_530(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2165)
  def _reduce_531(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 532 omitted

# reduce 533 omitted

module_eval(<<'.,.,', 'ruby20.y', 2172)
  def _reduce_534(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.kwrestarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2178)
  def _reduce_535(val, _values, result)
                          result = [ @builder.kwrestarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2183)
  def _reduce_536(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2190)
  def _reduce_537(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2197)
  def _reduce_538(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2201)
  def _reduce_539(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2206)
  def _reduce_540(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2210)
  def _reduce_541(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 542 omitted

# reduce 543 omitted

module_eval(<<'.,.,', 'ruby20.y', 2217)
  def _reduce_544(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2223)
  def _reduce_545(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 546 omitted

# reduce 547 omitted

module_eval(<<'.,.,', 'ruby20.y', 2230)
  def _reduce_548(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2237)
  def _reduce_549(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2241)
  def _reduce_550(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 551 omitted

module_eval(<<'.,.,', 'ruby20.y', 2247)
  def _reduce_552(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2252)
  def _reduce_553(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 554 omitted

module_eval(<<'.,.,', 'ruby20.y', 2258)
  def _reduce_555(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2262)
  def _reduce_556(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2267)
  def _reduce_557(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2271)
  def _reduce_558(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2275)
  def _reduce_559(val, _values, result)
                          result = @builder.kwsplat(val[0], val[1])
                    
    result
  end
.,.,

# reduce 560 omitted

# reduce 561 omitted

# reduce 562 omitted

# reduce 563 omitted

# reduce 564 omitted

# reduce 565 omitted

# reduce 566 omitted

# reduce 567 omitted

# reduce 568 omitted

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

module_eval(<<'.,.,', 'ruby20.y', 2286)
  def _reduce_576(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2290)
  def _reduce_577(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

module_eval(<<'.,.,', 'ruby20.y', 2296)
  def _reduce_581(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 582 omitted

# reduce 583 omitted

# reduce 584 omitted

module_eval(<<'.,.,', 'ruby20.y', 2305)
  def _reduce_585(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby20
  end   # module Parser
